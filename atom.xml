<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  
  <subtitle>博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-02-13T02:17:46.106Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Tingfeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Janus 系列：统一的多模态理解和生成模型</title>
    <link href="http://example.com/2025/01/28/Janus%20%E7%B3%BB%E5%88%97%EF%BC%9A%E7%BB%9F%E4%B8%80%E7%9A%84%E5%A4%9A%E6%A8%A1%E6%80%81%E7%90%86%E8%A7%A3%E5%92%8C%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/"/>
    <id>http://example.com/2025/01/28/Janus%20%E7%B3%BB%E5%88%97%EF%BC%9A%E7%BB%9F%E4%B8%80%E7%9A%84%E5%A4%9A%E6%A8%A1%E6%80%81%E7%90%86%E8%A7%A3%E5%92%8C%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/</id>
    <published>2025-01-28T08:20:22.000Z</published>
    <updated>2025-02-13T02:17:46.106Z</updated>
    
    <content type="html"><![CDATA[<p>1 月 28 日凌晨，<strong>除夕夜前一晚，DeepSeek 又开源了其多模态模型 Janus-Pro-7B</strong>，宣布在在 GenEval 和 DPG-Bench 基准测试中击败了 DALL-E 3（来自 OpenAI）和 Stable Diffusion。</p><p>Janus-Pro 是先前工作 Janus 的改进版本。具体来说，Janus-Pro 包含：(1)优化的训练策略，(2)扩展的训练数据，以及(3)更大模型规模的扩展。通过这些改进，Janus-Pro 在多模态理解和文本到图像指令遵循能力方面取得了显著进展，同时也增强了文本到图像生成的稳定性。</p><p><img src="https://pic1.imgdb.cn/item/679892b4d0e0a243d4f8472e.png"></p><p>Janus 是一个新颖的自动回归框架，它统一了多模态理解和生成。它通过将视觉编码解耦到单独的路径来解决先前方法的局限性，同时仍然利用单个统一的 Transformer 架构进行处理。这种解耦不仅减轻了视觉编码器在理解和生成方面的角色冲突，而且还增强了框架的灵活性。Janus 超越了之前的统一模型，并且在性能上与特定任务模型相匹配或超过它们。Janus 的简洁性、高灵活性和有效性使其成为下一代统一多模态模型的有力候选者。</p><p><img src="https://pic1.imgdb.cn/item/679892dad0e0a243d4f84731.png"></p><p>JanusFlow 引入了一种极简架构，它将自回归语言模型与修正流（一种最先进的生成模型方法）相集成。我们的主要发现表明，修正流可以直接在大型语言模型框架内进行训练，无需复杂的架构修改。大量的实验表明，JanusFlow 在各自领域内取得了与专用模型相当或更好的性能，同时在标准基准测试中显著优于现有的统一方法。这项工作代表着朝着更高效、更通用的视觉语言模型迈进了一步。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1 月 28 日凌晨，&lt;strong&gt;除夕夜前一晚，DeepSeek 又开源了其多模态模型 Janus-Pro-7B&lt;/strong&gt;，宣布在在 GenEval 和 DPG-Bench 基准测试中击败了 DALL-E 3（来自 OpenAI）和 Stable Diffusi</summary>
      
    
    
    
    <category term="AI" scheme="http://example.com/categories/AI/"/>
    
    
    <category term="AI大模型" scheme="http://example.com/tags/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>DeepSeek-R1 发布，性能对标 OpenAI o1 正式版</title>
    <link href="http://example.com/2025/01/28/DeepSeek-R1/"/>
    <id>http://example.com/2025/01/28/DeepSeek-R1/</id>
    <published>2025-01-28T08:08:22.000Z</published>
    <updated>2025-02-13T02:20:46.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DeepSeek-R1-发布，性能对标-OpenAI-o1-正式版"><a href="#DeepSeek-R1-发布，性能对标-OpenAI-o1-正式版" class="headerlink" title="DeepSeek-R1 发布，性能对标 OpenAI o1 正式版"></a>DeepSeek-R1 发布，性能对标 OpenAI o1 正式版</h1><p>2025年1月21日，DeepSeek-R1正式发布，并同步开源模型权重。</p><ul><li><p>DeepSeek-R1 遵循 MIT License，允许用户通过蒸馏技术借助 R1 训练其他模型。</p></li><li><p>DeepSeek-R1 上线 API，对用户开放思维链输出，通过设置 <code>model=&#39;deepseek-reasoner&#39;</code> 即可调用。</p></li><li><p>DeepSeek 官网与 App 即日起同步更新上线。</p></li></ul><h2 id="性能对齐-OpenAI-o1-正式版​"><a href="#性能对齐-OpenAI-o1-正式版​" class="headerlink" title="性能对齐 OpenAI-o1 正式版​"></a>性能对齐 OpenAI-o1 正式版<a href="https://api-docs.deepseek.com/zh-cn/news/news250120#%E6%80%A7%E8%83%BD%E5%AF%B9%E9%BD%90-openai-o1-%E6%AD%A3%E5%BC%8F%E7%89%88">​</a></h2><p>DeepSeek-R1 在后训练阶段大规模使用了强化学习技术，在仅有极少标注数据的情况下，极大提升了模型推理能力。在数学、代码、自然语言推理等任务上，性能比肩 OpenAI o1 正式版。</p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_benchmark.png"></p><p>在此，我们将 DeepSeek-R1 训练技术全部公开，以期促进技术社区的充分交流与创新协作。</p><p>论文链接： <a href="https://github.com/deepseek-ai/DeepSeek-R1/blob/main/DeepSeek_R1.pdf">https://github.com/deepseek-ai/DeepSeek-R1/blob/main/DeepSeek_R1.pdf</a></p><h2 id="蒸馏小模型超越-OpenAI-o1-mini​"><a href="#蒸馏小模型超越-OpenAI-o1-mini​" class="headerlink" title="蒸馏小模型超越 OpenAI o1-mini​"></a>蒸馏小模型超越 OpenAI o1-mini<a href="https://api-docs.deepseek.com/zh-cn/news/news250120#%E8%92%B8%E9%A6%8F%E5%B0%8F%E6%A8%A1%E5%9E%8B%E8%B6%85%E8%B6%8A-openai-o1-mini">​</a></h2><p>我们在开源 DeepSeek-R1-Zero 和 DeepSeek-R1 两个 660B 模型的同时，通过 DeepSeek-R1 的输出，蒸馏了 6 个小模型开源给社区，其中 32B 和 70B 模型在多项能力上实现了对标 OpenAI o1-mini 的效果。</p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_benchmark_table.png"></p><p>HuggingFace 链接： <a href="https://huggingface.co/deepseek-ai">https://huggingface.co/deepseek-ai</a></p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_hf.png"></p><h3 id="开放的许可证和用户协议​"><a href="#开放的许可证和用户协议​" class="headerlink" title="开放的许可证和用户协议​"></a>开放的许可证和用户协议<a href="https://api-docs.deepseek.com/zh-cn/news/news250120#%E5%BC%80%E6%94%BE%E7%9A%84%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%92%8C%E7%94%A8%E6%88%B7%E5%8D%8F%E8%AE%AE">​</a></h3><p>为了推动和鼓励开源社区以及行业生态的发展，在发布并开源 R1 的同时，我们同步在协议授权层面也进行了如下调整：</p><ul><li><p>模型开源 License 统一使用 MIT。我们曾针对大模型开源的特点，参考当前行业的通行实践，特别引入 DeepSeek License 为开源社区提供授权，但实践表明非标准的开源 License 可能反而增加了开发者的理解成本。为此，此次我们的开源仓库（包括模型权重）统一采用标准化、宽松的 MIT License，完全开源，不限制商用，无需申请。</p></li><li><p>产品协议明确可“模型蒸馏”。为了进一步促进技术的开源和共享，我们决定支持用户进行“模型蒸馏”。我们已更新线上产品的用户协议，明确允许用户利用模型输出、通过模型蒸馏等方式训练其他模型。</p></li></ul><h2 id="App与网页端​"><a href="#App与网页端​" class="headerlink" title="App与网页端​"></a>App与网页端<a href="https://api-docs.deepseek.com/zh-cn/news/news250120#app%E4%B8%8E%E7%BD%91%E9%A1%B5%E7%AB%AF">​</a></h2><p>登录DeepSeek官网或官方App，打开“深度思考”模式，即可调用最新版 DeepSeek-R1 完成各类推理任务。</p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_example.gif"></p><h2 id="API-及定价​"><a href="#API-及定价​" class="headerlink" title="API 及定价​"></a>API 及定价<a href="https://api-docs.deepseek.com/zh-cn/news/news250120#api-%E5%8F%8A%E5%AE%9A%E4%BB%B7">​</a></h2><p>DeepSeek-R1 API 服务定价为每百万输入 tokens 1 元（缓存命中）&#x2F; 4 元（缓存未命中），每百万输出 tokens 16 元。</p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_price.jpeg"></p><p><img src="https://dp-cdn-deepseek.obs.cn-east-3.myhuaweicloud.com/api-docs/deepseek_r1_price_compare.png"></p><p>详细的 API 调用指南请参考官方文档：  <a href="https://api-docs.deepseek.com/zh-cn/guides/reasoning_model">https://api-docs.deepseek.com/zh-cn/guides/reasoning_model</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DeepSeek-R1-发布，性能对标-OpenAI-o1-正式版&quot;&gt;&lt;a href=&quot;#DeepSeek-R1-发布，性能对标-OpenAI-o1-正式版&quot; class=&quot;headerlink&quot; title=&quot;DeepSeek-R1 发布，性能对标 OpenAI</summary>
      
    
    
    
    <category term="AI" scheme="http://example.com/categories/AI/"/>
    
    
    <category term="AI大模型" scheme="http://example.com/tags/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>conda创建/删除/复制虚拟环境、安装/删除包</title>
    <link href="http://example.com/2025/01/21/conda%20%E5%88%9B%E5%BB%BA_%E5%88%A0%E9%99%A4_%E5%A4%8D%E5%88%B6%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E3%80%81%E5%AE%89%E8%A3%85_%E5%88%A0%E9%99%A4%E5%8C%85/"/>
    <id>http://example.com/2025/01/21/conda%20%E5%88%9B%E5%BB%BA_%E5%88%A0%E9%99%A4_%E5%A4%8D%E5%88%B6%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E3%80%81%E5%AE%89%E8%A3%85_%E5%88%A0%E9%99%A4%E5%8C%85/</id>
    <published>2025-01-21T07:30:22.000Z</published>
    <updated>2025-02-13T02:32:13.161Z</updated>
    
    <content type="html"><![CDATA[<p>创建&#x2F;删除虚拟环境</p><pre><code class="hljs">conda create -n your_env_name python=X.X（2.7、3.6等）conda remove -n your_env_name --all</code></pre><p>查看现有环境(在env文件夹下)</p><pre><code class="hljs">conda env list</code></pre><p>激活&#x2F;退出虚拟环境</p><pre><code class="hljs">conda activate env_nameconda deactivate</code></pre><p>安装&#x2F;删除包</p><pre><code class="hljs">conda install -n your_env_name [package]conda remove --name $your_env_name  $package_nameconda 安装本地包conda install --use-local /home/lhw/anaconda3/pkgs/cudatoolkit-11.1.1-h6406543_9.tar.bz2conda install --use-local /home/lhw/anaconda3/pkgs/torchvision-0.9.0-py38_cu111.tar.bz2</code></pre><p>重命名虚拟环境</p><pre><code class="hljs">conda create -n py38 --clone py37conda remove -n py37 -all</code></pre><p>在shell激活conda虚拟环境</p><pre><code class="hljs">source /home/lhw/anaconda3/bin/activate ENV_NAME</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创建&amp;#x2F;删除虚拟环境&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;conda create -n your_env_name python=X.X（2.7、3.6等）

conda remove -n your_env_name --all
&lt;/code</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/"/>
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
    <category term="ubuntu" scheme="http://example.com/tags/ubuntu/"/>
    
    <category term="centos" scheme="http://example.com/tags/centos/"/>
    
    <category term="mail" scheme="http://example.com/tags/mail/"/>
    
  </entry>
  
  <entry>
    <title>大数据安全课程设计</title>
    <link href="http://example.com/2024/12/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2024/12/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-12-31T03:01:22.000Z</published>
    <updated>2025-02-13T02:35:19.631Z</updated>
    
    <content type="html"><![CDATA[<p>在本次项目实践中，数据安全与合规管理至关重要。第一步，我们要着手获取适用的数据集，该数据集须涵盖至少 10 条有效数据，且字段里包含如身份证号、联系方式、财务等这类敏感信息，贴合真实业务场景中的数据特点。</p><p>拿到数据集后，立即启用高强度加密算法对其加密。同时，搭建直观的数据展示模块，方便后续查看与分析。在数据读取环节，精准抓取数据关键信息，为业务决策提供依据。尤为关键的是，系统内置专业的数据脱敏功能，脱敏展示确保敏感信息隐匿，规避隐私泄露风险；权限展示一目了然，不同角色对应不同操作权限，严守访问边界；还贴心配备误操作数据恢复功能，以防数据意外丢失。还可依据授课要点与个人创意，灵活为系统拓展功能，深挖系统潜力，全方位贴合复杂多变的大数据安全使用需求。</p><p>这次大数据安全课程设计采用了,SmartAdmin ,基于SpringBoot3+Sa-Token+Mybatis-Plus 和 Vue3+Ant Design Vue快速开发平台。</p><ul><li><p>前端：JavaScript + Vue3 + Vite5 + Pinia + Ant Design Vue 4.X</p></li><li><p>后端：Java8&#x2F;17 + SpringBoot2&#x2F;3 + Sa Token + Mybatis-plus + mysql+redis(实现缓存)</p></li></ul><h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a><strong>实现功能</strong></h3><p>1.接口加解密：支持请求参数和返回内容进行加解密操作，支持国产加密算法和其他国外加密算法</p><p>2.数据脱敏:采用Hutool中的信息脱敏工具-DesensitizedUtil,对在数据处理或清洗中，可能涉及到很多隐私信息的脱敏工作，Hutool针对常用的信息封装了一些脱敏方法,直接调用DesensitizedUtil可实现脱敏</p><p><strong>DesensitizedUtil</strong></p><p>我们以身份证号码为例：</p><pre><code class="hljs">// 5***************1XDesensitizedUtil.idCardNum(&quot;51343620000320711X&quot;, 1, 2);</code></pre><p>对于约定俗成的脱敏，我们可以不用指定隐藏位数，比如手机号：</p><pre><code class="hljs">// 180****1999DesensitizedUtil.mobilePhone(&quot;18049531999&quot;);</code></pre><p>当然还有一些简单粗暴的脱敏，比如密码，只保留了位数信息：</p><pre><code class="hljs">// **********DesensitizedUtil.password(&quot;1234567890&quot;);</code></pre><p>权限控制:采用Sa-Token,一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！</p><p><strong>Sa-Token</strong> 是一个轻量级 Java 权限认证框架，主要解决：<strong>登录认证</strong>、<strong>权限认证</strong>、<strong>单点登录</strong>、<strong>OAuth2.0</strong>、<strong>分布式Session会话</strong>、<strong>微服务网关鉴权</strong> 等一系列权限相关问题。</p><p>Sa-Token 旨在以简单、优雅的方式完成系统的权限认证部分，以登录认证为例，你只需要：</p><pre><code class="hljs">// 会话登录，参数填登录人的账号id StpUtil.login(10001);复制到剪贴板错误复制成功12</code></pre><p>无需实现任何接口，无需创建任何配置文件，只需要这一句静态代码的调用，便可以完成会话登录认证。</p><p>如果一个接口需要登录后才能访问，我们只需调用以下代码：</p><pre><code class="hljs">// 校验当前客户端是否已经登录，如果未登录则抛出 `NotLoginException` 异常StpUtil.checkLogin();复制到剪贴板错误复制成功12</code></pre><p>在 Sa-Token 中，大多数功能都可以一行代码解决：</p><p>踢人下线：</p><pre><code class="hljs">// 将账号id为 10077 的会话踢下线 StpUtil.kickout(10077);复制到剪贴板错误复制成功12</code></pre><p>权限认证：</p><pre><code class="hljs">// 注解鉴权：只有具备 `user:add` 权限的会话才可以进入方法@SaCheckPermission(&quot;user:add&quot;)public String insert(SysUser user) &#123;    // ...     return &quot;用户增加&quot;;&#125;复制到剪贴板错误复制成功123456</code></pre><p>路由拦截鉴权：</p><pre><code class="hljs">// 根据路由划分模块，不同模块不同鉴权 registry.addInterceptor(new SaInterceptor(handler -&gt; &#123;    SaRouter.match(&quot;/user/**&quot;, r -&gt; StpUtil.checkPermission(&quot;user&quot;));    SaRouter.match(&quot;/admin/**&quot;, r -&gt; StpUtil.checkPermission(&quot;admin&quot;));    SaRouter.match(&quot;/goods/**&quot;, r -&gt; StpUtil.checkPermission(&quot;goods&quot;));    SaRouter.match(&quot;/orders/**&quot;, r -&gt; StpUtil.checkPermission(&quot;orders&quot;));    SaRouter.match(&quot;/notice/**&quot;, r -&gt; StpUtil.checkPermission(&quot;notice&quot;));    // 更多模块... &#125;)).addPathPatterns(&quot;/**&quot;);复制到剪贴板错误复制成功123456789</code></pre><p>当你受够 Shiro、SpringSecurity 等框架的三拜九叩之后，你就会明白，相对于这些传统老牌框架，Sa-Token 的 API 设计是多么的简单、优雅！</p><p>3.数据备份功能:通过cron表达式定义执行备份数据的任务</p><p>4.文件管理:记录所有的上传文件记录、支持图片预览,支持本地存储、云存储,使用 AmazonS3 云存储协议，支持所有云计算：阿里云、华为云、腾讯云、亚马逊云等等</p><p>5.意见反馈:支持反馈意见</p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><blockquote><p><strong>管理员账号:admin 密码:123456 访问地址:</strong><a href="http://49.232.174.163:1024/#/login"><strong>http://49.232.174.163:1024/#/login</strong></a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在本次项目实践中，数据安全与合规管理至关重要。第一步，我们要着手获取适用的数据集，该数据集须涵盖至少 10 条有效数据，且字段里包含如身份证号、联系方式、财务等这类敏感信息，贴合真实业务场景中的数据特点。&lt;/p&gt;
&lt;p&gt;拿到数据集后，立即启用高强度加密算法对其加密。同时，搭</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="java" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/"/>
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
    <category term="javaweb项目" scheme="http://example.com/tags/javaweb%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="java web" scheme="http://example.com/tags/java-web/"/>
    
  </entry>
  
  <entry>
    <title>大数据开发技术课程设计</title>
    <link href="http://example.com/2024/12/20/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2024/12/20/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-12-20T07:30:22.000Z</published>
    <updated>2025-02-13T02:57:03.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、课程设计背景与目标"><a href="#一、课程设计背景与目标" class="headerlink" title="一、课程设计背景与目标"></a>一、课程设计背景与目标</h2><h3 id="课程设计背景"><a href="#课程设计背景" class="headerlink" title="课程设计背景"></a>课程设计背景</h3><p>随着大数据技术的飞速发展，农业领域也开始逐渐应用大数据分析，以提升生产效率、优化资源配置和加强环境保护。农业生产过程中涉及大量的数据，包括气候、土壤、作物生长、病虫害等信息。通过大数据技术，可以更好地理解农业系统中的各种变量及其相互关系，从而实现精准农业、提高农产品质量、减少资源浪费，并推动可持续发展。例如，通过分析土壤质量、天气变化、作物生长等数据，能够有效地提升农业产量和资源利用效率。本项目旨在通过大数据分析技术，从多个维度分析和解决农业中的实际问题</p><h3 id="课程设计目标"><a href="#课程设计目标" class="headerlink" title="课程设计目标"></a>课程设计目标</h3><p>选择并分析一个农业问题，利用大数据分析方法解决该问题，并通过三个不同类型的图表展示分析结果。具体目标包括：</p><p>1.问题分析：分析并明确一个农业生产中的问题，例如作物生长受土壤质量和气候变化的影响。</p><p>2.数据分析：使用大数据分析技术（如MapReduce、Hive、机器学习等）对数据进行清洗、处理和分析。</p><p>3.结果展示：通过至少三个不同的图表（如时间序列图、散点图、热力图等）展示数据分析结果，支撑问题的解决方案</p><h3 id="课程设计目标——例子"><a href="#课程设计目标——例子" class="headerlink" title="课程设计目标——例子"></a>课程设计目标——例子</h3><p>“某地区气候变化对作物生长的影响”</p><p>• 气候变化如何影响作物的生长周期？</p><p>• 不同气候条件下，作物的产量如何变化？</p><p>• 哪些气候因素（如温度、降水量、湿度等）对作物生长最为关键？</p><h2 id="二、课程设计技术架构"><a href="#二、课程设计技术架构" class="headerlink" title="二、课程设计技术架构"></a>二、课程设计技术架构</h2><h3 id="一-课程设计技术架构"><a href="#一-课程设计技术架构" class="headerlink" title="(一) 课程设计技术架构"></a>(一) 课程设计技术架构</h3><p>系统架构概述</p><p>1.数据存储模块：</p><p>2.数据处理与分析模块：</p><p>3.查询与展示模块：</p><p>4. ………….</p><p>技术栈详解</p><p>分布式文件系统（HDFS）</p><p>资源调度（YARN）</p><p>数据处理（Hive)</p><h2 id="三、项目实施过程"><a href="#三、项目实施过程" class="headerlink" title="三、项目实施过程"></a>三、项目实施过程</h2><p>（一）环境部署</p><p>（二）数据清洗与预处理</p><p>（三）数据分析与查询</p><p>（四）结果展示与可视化</p><h3 id="（一）环境部署"><a href="#（一）环境部署" class="headerlink" title="（一）环境部署"></a>（一）环境部署</h3><p>请详细描述项目中各个组件的安装过程，包括软件、硬件及网络环境的配置。</p><p>建议使用流程图的形式清晰地展示整个部署过程</p><h3 id="（二）数据清洗与预处理"><a href="#（二）数据清洗与预处理" class="headerlink" title="（二）数据清洗与预处理"></a>（二）数据清洗与预处理</h3><p>•方法描述：请说明使用了哪些方法对农业数据进行清洗与预处理，包括数据去重、缺失值处理、异常值检测等。</p><p>•数据展示：请粘贴原始数据格式与预处理后的数据截图，以便对比展示数据清洗的效果。</p><p>•代码展示：如果使用了MapReduce或Hive等工具进行数据处理，请粘贴相关代码片段，并简要说明其作用</p><h3 id="（三）数据分析与查询"><a href="#（三）数据分析与查询" class="headerlink" title="（三）数据分析与查询"></a>（三）数据分析与查询</h3><p>•方法描述：请说明使用了哪些方法对处理后的数据进行分析与查询，包括统计分析、数据挖掘、机器学习算法等。</p><p>•问题解决：请对处理后的数据进行解释分析，说明这些数据如何帮助你解决了在背景部分提到的农业问题。</p><p>•代码展示：如果使用了MapReduce或Hive等工具进行数据分析，请粘贴相关代码片段，并简要说明其实现的功能。</p><h3 id="（四）结果展示与可视化"><a href="#（四）结果展示与可视化" class="headerlink" title="（四）结果展示与可视化"></a>（四）结果展示与可视化</h3><p>•方法描述：请说明使用了哪些方式对结果进行可视化展示，包括图表类型（如柱状图、折线图、散点图等）和可视</p><p>化工具（如Excel、Tableau、Echarts、Python等）。</p><p>•结论分析：请从图表中提炼出关键结论，这些结论应直接关联到项目目标的实现情况。例如，通过数据分析发现某</p><p>种病虫害的预防措施显著提高了作物产量；或者通过资源优化管理，降低了化肥和农药的使用量等。</p><h1 id="大数据开发技术课程设计步骤"><a href="#大数据开发技术课程设计步骤" class="headerlink" title="大数据开发技术课程设计步骤"></a><strong>大数据开发技术课程设计步骤</strong></h1><h2 id="1-步骤概述"><a href="#1-步骤概述" class="headerlink" title="1. 步骤概述"></a><strong>1. 步骤概述</strong></h2><p>NaN.  <strong>MapReduce 读取数据并进行预处理</strong>：</p><pre><code class="hljs">-   去重。    -   将清洗后的数据写入 Hive 表。</code></pre><p>NaN.  <strong>Hive 中进行缺失值和异常值处理</strong>：</p><pre><code class="hljs">-   检测缺失值 无缺失值    -   在 Hive 中计算每列的均值和标准差。    -   计算每行的 Z-score 并根据阈值（如 Z &gt; 3 或 Z &lt; -3）进行异常值筛选。</code></pre><p>NaN.  <strong>分析 Hive 中的数据</strong>：</p><pre><code class="hljs">-   选取合适的指标    -   在 Hive 中进行数据分析。</code></pre><p>NaN.  <strong>可视化</strong></p><pre><code class="hljs">-   用镝数图表可视化数据</code></pre><p>NaN.  <strong>扩展</strong></p><pre><code class="hljs">-   将hive清洗后的数据用来模型训练,构建作物预测系统</code></pre><h2 id="2-详细步骤"><a href="#2-详细步骤" class="headerlink" title="2. 详细步骤"></a><strong>2. 详细步骤</strong></h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241230154731012.png" alt="image-20241230154731012"></p><p><strong>原始数据</strong></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229104739997.png" alt="image-20241229104739997"></p><h3 id="2-1-MapReduce-处理数据并导入-Hive"><a href="#2-1-MapReduce-处理数据并导入-Hive" class="headerlink" title="2.1 MapReduce 处理数据并导入 Hive"></a><strong>2.1 MapReduce 处理数据并导入 Hive</strong></h3><p>我们使用 Hadoop MapReduce 来读取 HDFS 上的数据进行预处理（去重），然后将数据导入到 Hive 中进行后续处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.cqyti.kcsj.mapreduce;<br>​<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.log4j.Logger;<br>​<br><span class="hljs-comment">// 数据预处理类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataPreprocessing</span> &#123;<br>    <span class="hljs-comment">// 日志记录器，用于记录程序运行信息</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> Logger.getLogger(DataPreprocessing.class);<br>​<br>    <span class="hljs-comment">// 主方法，程序入口</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建 Hadoop 配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-comment">// 获取文件系统对象</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">// 初始化 MapReduce 任务</span><br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Data Preprocessing&quot;</span>);<br>        <span class="hljs-comment">// 设置运行主类</span><br>        job.setJarByClass(DataPreprocessing.class);<br>        <span class="hljs-comment">// 设置 Mapper 类</span><br>        job.setMapperClass(DataPreprocessingMapper.class);<br>        <span class="hljs-comment">// 设置 Reducer 类</span><br>        job.setReducerClass(DataPreprocessingReducer.class);<br>        <span class="hljs-comment">// 设置输出的 key 的类型</span><br>        job.setOutputKeyClass(Text.class);<br>        <span class="hljs-comment">// 设置输出的 value 的类型</span><br>        job.setOutputValueClass(Text.class);<br>        <span class="hljs-comment">// 设置输入路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">inputPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/crops_data.csv&quot;</span>);<br>        <span class="hljs-comment">// 设置输出路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">outputPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result&quot;</span>);<br>​<br>        <span class="hljs-comment">// 如果输出路径已存在，则删除</span><br>        <span class="hljs-keyword">if</span> (fs.exists(outputPath)) &#123;<br>            fs.delete(outputPath, <span class="hljs-literal">true</span>);<br>        &#125;<br>​<br>        <span class="hljs-comment">// 设置任务的输入路径</span><br>        FileInputFormat.addInputPath(job, inputPath);<br>        <span class="hljs-comment">// 设置任务的输出路径</span><br>        FileOutputFormat.setOutputPath(job, outputPath);<br>​<br>        <span class="hljs-comment">// 提交任务并等待执行完成</span><br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br>​<br>    <span class="hljs-comment">// Mapper 类，用于处理每行数据，将其作为 key 输出</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataPreprocessingMapper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, Text, Text&gt; &#123;<br>        <span class="hljs-comment">// 用于标识是否是表头行</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-variable">isHeader</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>​<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span> <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 如果是表头行，直接跳过</span><br>            <span class="hljs-keyword">if</span> (isHeader) &#123;<br>                isHeader = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 只跳过第一行</span><br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">// 将当前行转换为字符串</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();<br>            <span class="hljs-comment">// 将行内容作为 key 输出，value 设置为空字符串</span><br>            context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(line), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(<span class="hljs-string">&quot;&quot;</span>));<br>        &#125;<br>    &#125;<br>​<br>    <span class="hljs-comment">// Reducer 类，用于对 Mapper 输出的数据进行去重</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataPreprocessingReducer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;Text, Text, Text, Text&gt; &#123;<br>​<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(Text key, Iterable&lt;Text&gt; values, Context context)</span> <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 每个 key 是唯一的，直接输出即可，实现去重</span><br>            context.write(key, <span class="hljs-literal">null</span>);<br>        &#125;<br>    &#125;<br>&#125;<br>​<br></code></pre></td></tr></table></figure><p><strong>MapReduce去重后数据</strong></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105212421.png" alt="image-20241229105212421"></p><h3 id="2-2-导入数据到-Hive"><a href="#2-2-导入数据到-Hive" class="headerlink" title="2.2. 导入数据到 Hive"></a><strong>2.2. 导入数据到 Hive</strong></h3><p>将 MapReduce 作业生成的清洗后的数据导入 Hive 表：</p><p>NaN.  <strong>创建 Hive 表</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> crops_data (<br>    rainfall <span class="hljs-type">FLOAT</span>,<br>    temperature <span class="hljs-type">FLOAT</span>,<br>    ph <span class="hljs-type">FLOAT</span>,<br>    crop STRING,<br>    production <span class="hljs-type">FLOAT</span><br>)<br><span class="hljs-type">ROW</span> FORMAT DELIMITED<br>FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;,&#x27;</span><br>STORED <span class="hljs-keyword">AS</span> TEXTFILE;<br></code></pre></td></tr></table></figure><ol start="2"><li><p><strong>将清洗后的数据加载到 Hive 表</strong>：</p><p>LOAD DATA INPATH ‘&#x2F;Tipdm&#x2F;Hadoop&#x2F;MapReduce&#x2F;Result’ INTO TABLE crops_data;</p></li></ol><h3 id="2-3-缺失值和异常值处理"><a href="#2-3-缺失值和异常值处理" class="headerlink" title="2.3 缺失值和异常值处理"></a><strong>2.3 缺失值和异常值处理</strong></h3><p>在 Hive 中进行 Z-score 计算，并筛选出异常值。使用以下 SQL 语句来实现这个过程。</p><h4 id="1-创建新表"><a href="#1-创建新表" class="headerlink" title="1. 创建新表"></a><strong>1. 创建新表</strong></h4><p>首先，创建一个新的 Hive 表 <code>cleaned_crops_data</code>，该表结构与原表 <code>crops_data</code> 相同。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> cleaned_crops_data (<br>    rainfall <span class="hljs-type">FLOAT</span>,<br>    temperature <span class="hljs-type">FLOAT</span>,<br>    ph <span class="hljs-type">FLOAT</span>,<br>    crop STRING,<br>    production <span class="hljs-type">FLOAT</span><br>)<br><span class="hljs-type">ROW</span> FORMAT DELIMITED<br>FIELDS TERMINATED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;,&#x27;</span><br>STORED <span class="hljs-keyword">AS</span> TEXTFILE;<br></code></pre></td></tr></table></figure><h4 id="2-检查缺失值"><a href="#2-检查缺失值" class="headerlink" title="2.检查缺失值"></a><strong>2.检查缺失值</strong></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <br><span class="hljs-keyword">FROM</span> crops_data <br><span class="hljs-keyword">WHERE</span> rainfall <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span> <br>   <span class="hljs-keyword">OR</span> temperature <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span> <br>   <span class="hljs-keyword">OR</span> ph <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span> <br>   <span class="hljs-keyword">OR</span> production <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br></code></pre></td></tr></table></figure><h4 id="3-去除异常值"><a href="#3-去除异常值" class="headerlink" title="3. 去除异常值"></a><strong>3. 去除异常值</strong></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">WITH</span> stats <span class="hljs-keyword">AS</span> (<br>    <span class="hljs-comment">-- 计算数据集中各个变量（降雨量、气温、pH 值、产量）的均值和标准差</span><br>    <span class="hljs-keyword">SELECT</span><br>        <span class="hljs-built_in">AVG</span>(Rainfall) <span class="hljs-keyword">AS</span> mean_rainfall,         <span class="hljs-comment">-- 计算降雨量的均值</span><br>        STDDEV(Rainfall) <span class="hljs-keyword">AS</span> std_rainfall,      <span class="hljs-comment">-- 计算降雨量的标准差</span><br>        <span class="hljs-built_in">AVG</span>(Temperature) <span class="hljs-keyword">AS</span> mean_temperature, <span class="hljs-comment">-- 计算气温的均值</span><br>        STDDEV(Temperature) <span class="hljs-keyword">AS</span> std_temperature, <span class="hljs-comment">-- 计算气温的标准差</span><br>        <span class="hljs-built_in">AVG</span>(Ph) <span class="hljs-keyword">AS</span> mean_ph,                   <span class="hljs-comment">-- 计算 pH 值的均值</span><br>        STDDEV(Ph) <span class="hljs-keyword">AS</span> std_ph,                 <span class="hljs-comment">-- 计算 pH 值的标准差</span><br>        <span class="hljs-built_in">AVG</span>(Production) <span class="hljs-keyword">AS</span> mean_production,   <span class="hljs-comment">-- 计算产量的均值</span><br>        STDDEV(Production) <span class="hljs-keyword">AS</span> std_production <span class="hljs-comment">-- 计算产量的标准差</span><br>    <span class="hljs-keyword">FROM</span> crops_data<br>),<br>z_scores <span class="hljs-keyword">AS</span> (<br>    <span class="hljs-comment">-- 计算每个作物数据的 Z 分数（标准化分数）</span><br>    <span class="hljs-keyword">SELECT</span><br>        Crop,                                  <span class="hljs-comment">-- 作物名称</span><br>        (Rainfall <span class="hljs-operator">-</span> stats.mean_rainfall) <span class="hljs-operator">/</span> stats.std_rainfall <span class="hljs-keyword">AS</span> z_rainfall,       <span class="hljs-comment">-- 降雨量的 Z 分数</span><br>        (Temperature <span class="hljs-operator">-</span> stats.mean_temperature) <span class="hljs-operator">/</span> stats.std_temperature <span class="hljs-keyword">AS</span> z_temperature, <span class="hljs-comment">-- 气温的 Z 分数</span><br>        (Ph <span class="hljs-operator">-</span> stats.mean_ph) <span class="hljs-operator">/</span> stats.std_ph <span class="hljs-keyword">AS</span> z_ph,                               <span class="hljs-comment">-- pH 值的 Z 分数</span><br>        (Production <span class="hljs-operator">-</span> stats.mean_production) <span class="hljs-operator">/</span> stats.std_production <span class="hljs-keyword">AS</span> z_production <span class="hljs-comment">-- 产量的 Z 分数</span><br>    <span class="hljs-keyword">FROM</span> crops_data, stats                      <span class="hljs-comment">-- 与统计信息进行笛卡尔连接，计算标准化值</span><br>)<br><span class="hljs-comment">-- 将处理后的数据覆盖写入目标表 cleaned_crops_data</span><br><span class="hljs-keyword">INSERT</span> OVERWRITE <span class="hljs-keyword">TABLE</span> cleaned_crops_data<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> crops_data<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> (<br>    <span class="hljs-comment">-- 排除异常值（Z 分数绝对值大于 3 的记录）</span><br>    <span class="hljs-keyword">SELECT</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">FROM</span> z_scores<br>    <span class="hljs-keyword">WHERE</span> (<span class="hljs-built_in">ABS</span>(z_rainfall) <span class="hljs-operator">&gt;</span> <span class="hljs-number">3</span> <span class="hljs-keyword">OR</span> <span class="hljs-built_in">ABS</span>(z_temperature) <span class="hljs-operator">&gt;</span> <span class="hljs-number">3</span> <span class="hljs-keyword">OR</span> <span class="hljs-built_in">ABS</span>(z_ph) <span class="hljs-operator">&gt;</span> <span class="hljs-number">3</span> <span class="hljs-keyword">OR</span> <span class="hljs-built_in">ABS</span>(z_production) <span class="hljs-operator">&gt;</span> <span class="hljs-number">3</span>) <span class="hljs-comment">-- 判断是否为异常值</span><br>    <span class="hljs-keyword">AND</span> crops_data.Crop <span class="hljs-operator">=</span> z_scores.Crop <span class="hljs-comment">-- 确保作物名称匹配</span><br>);<br>​<br></code></pre></td></tr></table></figure><p><strong>hive处理缺失值和异常值后数据</strong></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105341748.png" alt="image-20241229105341748"></p><h3 id="2-4-hive分析数据"><a href="#2-4-hive分析数据" class="headerlink" title="2.4. hive分析数据"></a><strong>2.4. hive分析数据</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">#获取作物分组后四个指标的平均值<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">table</span> avg_crops_data1 <span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> crop,<br>       <span class="hljs-built_in">AVG</span>(rainfall) <span class="hljs-keyword">AS</span> avg_rainfall,<br>       <span class="hljs-built_in">AVG</span>(temperature) <span class="hljs-keyword">AS</span> avg_temperature,<br>       <span class="hljs-built_in">AVG</span>(ph) <span class="hljs-keyword">AS</span> avg_ph,<br>       <span class="hljs-built_in">AVG</span>(production) <span class="hljs-keyword">AS</span> avg_production<br><span class="hljs-keyword">FROM</span> cleaned_crops_data<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> crop;<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105650738.png" alt="image-20241229105650738"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql">获取作物分组后三个指标与产量的相关性<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> corr_crops_data <span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> crop,<br>       <span class="hljs-built_in">CORR</span>(rainfall, production) <span class="hljs-keyword">AS</span> corr_rainfall_production,<br>       <span class="hljs-built_in">CORR</span>(temperature, production) <span class="hljs-keyword">AS</span> corr_temperature_production,<br>       <span class="hljs-built_in">CORR</span>(ph, production) <span class="hljs-keyword">AS</span> corr_ph_production<br><span class="hljs-keyword">FROM</span> cleaned_crops_data<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> crop;<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105750265.png" alt="image-20241229105750265"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql">获取作物分组后四个指标的最大值和最小值<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> extremal_crops_data <span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> crop,<br>       <span class="hljs-built_in">MIN</span>(rainfall) <span class="hljs-keyword">AS</span> min_rainfall,<br>       <span class="hljs-built_in">MAX</span>(rainfall) <span class="hljs-keyword">AS</span> max_rainfall,<br>       <span class="hljs-built_in">MIN</span>(temperature) <span class="hljs-keyword">AS</span> min_temperature,<br>       <span class="hljs-built_in">MAX</span>(temperature) <span class="hljs-keyword">AS</span> max_temperature,<br>       <span class="hljs-built_in">MIN</span>(ph) <span class="hljs-keyword">AS</span> min_ph,<br>       <span class="hljs-built_in">MAX</span>(ph) <span class="hljs-keyword">AS</span> max_ph,<br>       <span class="hljs-built_in">MIN</span>(production) <span class="hljs-keyword">AS</span> min_production,<br>       <span class="hljs-built_in">MAX</span>(production) <span class="hljs-keyword">AS</span> max_production<br><span class="hljs-keyword">FROM</span> cleaned_crops_data<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> crop;<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105830983.png" alt="image-20241229105830983"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql">获取每个作物产量最大的一条记录然后根据作物产量全局排序：<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> best_crops_data <span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> crop,<br>       rainfall <span class="hljs-keyword">AS</span> best_rainfall,<br>       temperature <span class="hljs-keyword">AS</span> best_temperature,<br>       ph <span class="hljs-keyword">AS</span> best_ph,<br>       production <span class="hljs-keyword">AS</span> best_production<br><span class="hljs-keyword">FROM</span> (<br>    <span class="hljs-keyword">SELECT</span> crop,<br>           rainfall,<br>           temperature,<br>           ph,<br>           production,<br>           <span class="hljs-built_in">ROW_NUMBER</span>() <span class="hljs-keyword">OVER</span> (<span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> crop <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> production <span class="hljs-keyword">DESC</span>) <span class="hljs-keyword">AS</span> rn<br>    <span class="hljs-keyword">FROM</span> cleaned_crops_data<br>) subquery<br><span class="hljs-keyword">WHERE</span> rn <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> best_production <span class="hljs-keyword">DESC</span>;<br>​<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229105913408.png" alt="image-20241229105913408"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">获取grapes作物环境影响情况<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> grapes_data <span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> crop,<br>       rainfall, <br>       temperature,<br>       ph,<br>       production<br><span class="hljs-keyword">FROM</span> cleaned_crops_data<br><span class="hljs-keyword">WHERE</span> crop<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Grapes&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241229110012740.png" alt="image-20241229110012740"></p><h3 id="2-5-可视化数据"><a href="#2-5-可视化数据" class="headerlink" title="2.5 可视化数据"></a><strong>2.5 可视化数据</strong></h3><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241230154759932.png" alt="image-20241230154759932"></p><p><a href="https://dycharts.com/xshow/index.html?id=1b979759f6ae1a741c924841a17ab026">https://dycharts.com/xshow/index.html?id=1b979759f6ae1a741c924841a17ab026</a></p><h3 id="2-6-扩展"><a href="#2-6-扩展" class="headerlink" title="2.6 扩展"></a><strong>2.6 扩展</strong></h3><p>将hive清洗后的数据用来模型训练,构建作物预测系统</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241230155232758.png" alt="image-20241230155232758"></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/image-20241230155431377.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、课程设计背景与目标&quot;&gt;&lt;a href=&quot;#一、课程设计背景与目标&quot; class=&quot;headerlink&quot; title=&quot;一、课程设计背景与目标&quot;&gt;&lt;/a&gt;一、课程设计背景与目标&lt;/h2&gt;&lt;h3 id=&quot;课程设计背景&quot;&gt;&lt;a href=&quot;#课程设计背景&quot; cla</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="java" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
    <category term="spark" scheme="http://example.com/tags/spark/"/>
    
    <category term="hive" scheme="http://example.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>作物预测系统</title>
    <link href="http://example.com/2024/12/12/%E4%BD%9C%E7%89%A9%E9%A2%84%E6%B5%8B%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2024/12/12/%E4%BD%9C%E7%89%A9%E9%A2%84%E6%B5%8B%E7%B3%BB%E7%BB%9F/</id>
    <published>2024-12-12T07:30:22.000Z</published>
    <updated>2025-02-13T03:05:26.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h2><p><strong>基于气象和土壤数据的作物产量预测</strong>：收集历史气象数据（温度、降水、日照等）、作物信息、土壤养分数据和相应的作物产量数据，运用回归分析、机器学习算法（如决策树、支持向量机等）构建产量预测模型</p><h2 id="二、项目技术"><a href="#二、项目技术" class="headerlink" title="二、项目技术"></a>二、项目技术</h2><p>1.数据挖掘</p><p>2.机器学习</p><p>3.sklearn</p><p>4.pyside6</p><h2 id="三、项目功能"><a href="#三、项目功能" class="headerlink" title="三、项目功能"></a>三、项目功能</h2><p>输入四个指标可以进行预测产量</p><p>训练结果在底部标签框展示</p><p>点击预测产量后会自动加载对应的模型</p><p>点击预训练模型会训练同一模型下的所有作物模型</p><h2 id="四、实现过程"><a href="#四、实现过程" class="headerlink" title="四、实现过程"></a>四、实现过程</h2><blockquote><p>1.收集数据 使用数据集 product_regressiondb.csv</p><p>2.数据探索 画可视化图</p><p>3.数据预处理 缺失值 重复值 异常值</p><p>4.画相关图 找特征</p><p>5.找模型 根据mse mae 准确度 判断好坏 随机森林效果最好</p><p>6.模型优化 根据粒子群优化算法找超参数 优化 xgboot和cart决策树</p><p>7.预测</p><p>8.使用pyside6构建预测界面</p></blockquote><p>在数据收集阶段，我使用了提供的数据集 product_regressiondb.csv。该数据集中包含了影响作物产量的重要变量，包括气象数据（如温度、降水量和日照时间）以及土壤养分数据等。此外，数据集中还包含目标变量，即作物的产量。这一数据为模型构建提供了全面的输入信息。在完成数据导入后，我首先对数据的基本结构进行了检查，包括数据的行数、列数、数据类型、空值比例以及变量的初步统计特性。这一步骤让我迅速熟悉了数据集的基本情况，同时也发现了存在的问题，如缺失值、重复值和潜在的异常值。</p><p>在数据探索阶段，我通过可视化技术对数据进行分析。利用 Matplotlib可视化工具，我绘制了变量的分布图、散点图和箱线图，从不同角度观察数据的特性。例如，我发现作物产量与降水量之间存在一定的非线性关系，而日照时间和温度的影响较弱。同时，通过箱线图发现了一些异常值，这些异常值需要在后续的数据预处理中妥善处理。相关性分析也在这个阶段展开，通过绘制相关性热力图，我确认了几个关键特征变量与作物产量的强相关性，为后续特征选择提供了明确方向。</p><p>数据预处理是重要环节。首先，我通过 isnull 方法检查了数据中的缺失值，并采用均值填充的方法处理了数值型缺失数据。这种方式既保证了数据的完整性，又避免了因数据缺失带来的潜在偏差。其次，我使用 drop_duplicates 方法去除了数据中的重复记录，以确保模型的训练数据真实有效。对于异常值，我采用了 Z-score 方法进行筛选，通过计算每个数据点的标准差偏离程度，将超过设定阈值的数据视为异常值并剔除。这些处理步骤显著提高了数据的质量，为模型的准确性奠定了基础。</p><p>在特征选择环节，我重点分析了变量与目标变量的相关性。通过相关性热力图，我选择了温度、降水量和PH作为主要特征变量,根据作物种类训练模型。</p><p>模型选择与评估是本次设计的核心部分。在这一阶段，我尝试了多种模型，包括随机森林、XGBoost 和 CART 决策树。通过将数据集划分为训练集和测试集，我分别对这些模型进行了训练和测试。为了评估模型的性能，我使用了多种指标，包括均方误差（MSE）、平均绝对误差（MAE）以及预测准确度。最终，通过对比发现，随机森林在大多数指标上的表现最优，具有较高的稳定性和预测精度，因此被选为最佳基础模型。</p><p>为了进一步提升模型性能，我对 XGBoost 和 CART 决策树模型进行了超参数优化。通过引入粒子群优化（PSO）算法，我能够在多个超参数维度上自动搜索最佳参数组合。PSO 的核心思想是通过模拟粒子在解空间中的移动，寻找最优解。在这次优化中，我主要对 XGBoost 的学习率、最大深度和树的数量以及 CART 决策树的分裂准则和最大深度进行了优化。优化后的模型在 MSE 和 MAE 等指标上取得了显著提升，预测结果更加准确。这一过程让我深刻认识到超参数优化在提升模型性能方面的关键作用。</p><p>在模型预测阶段，我分别使用了随机森林、原始 XGBoost、原始 CART 决策树以及优化后的 XGBoost 和 CART 决策树对作物产量进行了预测。通过对比不同模型的预测结果，我发现优化后的模型具有更高的精度，特别是在复杂数据分布下的表现尤为突出。此外，通过与实际值的对比，我总结了模型可能的误差来源，为未来的改进提供了方向。</p><p>最后一部分是预测界面的构建。我使用 PySide6 开发了一个简单易用的图形界面。界面包括预测按钮和结果显示区域。在界面开发的过程中，我学习了如何将后端的预测逻辑与前端用户交互相结合，同时也积累了关于用户体验设计的实践经验。</p><h2 id="五、预测界面"><a href="#五、预测界面" class="headerlink" title="五、预测界面"></a>五、预测界面</h2><p><img src="https://pic.imgdb.cn/item/675ad850d0e0a243d4e2fd9f.png"></p><p><img src="https://pic.imgdb.cn/item/675ad850d0e0a243d4e2fda0.png"></p><p><img src="https://pic.imgdb.cn/item/675ad851d0e0a243d4e2fda3.png"></p><p><img src="https://pic.imgdb.cn/item/675ad850d0e0a243d4e2fda1.png"></p><p><img src="https://pic.imgdb.cn/item/675ad851d0e0a243d4e2fda2.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、项目简介&quot;&gt;&lt;a href=&quot;#一、项目简介&quot; class=&quot;headerlink&quot; title=&quot;一、项目简介&quot;&gt;&lt;/a&gt;一、项目简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;基于气象和土壤数据的作物产量预测&lt;/strong&gt;：收集历史气象数据（温度、降水、日照等）、</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/"/>
    
    
    <category term="pyside6" scheme="http://example.com/tags/pyside6/"/>
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="数据挖掘" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>玩转校园网</title>
    <link href="http://example.com/2024/10/21/%E7%8E%A9%E8%BD%AC%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    <id>http://example.com/2024/10/21/%E7%8E%A9%E8%BD%AC%E6%A0%A1%E5%9B%AD%E7%BD%91/</id>
    <published>2024-10-21T15:36:00.000Z</published>
    <updated>2025-02-13T02:56:44.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法一-需要一个校园网账号-绕过设备限制（已失效）"><a href="#方法一-需要一个校园网账号-绕过设备限制（已失效）" class="headerlink" title="方法一 需要一个校园网账号,绕过设备限制（已失效）"></a>方法一 需要一个校园网账号,绕过设备限制（已失效）</h2><p><strong>技术</strong>:使用自身认证漏洞</p><p><strong>方法</strong>:用一根网线的一端连接ap上的网线口,另一端连接路由器的wan口,随便一台设备连接路由器的wifi或lan口去连接认证,然后其他设备就可以连接路由器去上网了</p><p><strong>解答</strong>：如果Web认证采用的是验证MAC地址类型，在使用路由器wifi连接认证后，Web服务记录的是路由器接口的Mac地址，路由器wifi下的设备数据包都是带路由器的Mac地址，所以不会跳认证,而且解除了两台设备的限制</p><blockquote><p>比较推荐使用,但不能关闭路由器的dhcp或打开路由器的桥接模式,否则就相当于一台交换机,只能扩充网络的接口,不能实现解除限制</p></blockquote><h2 id="方法二-无需校园网账号-绕过校园网认证"><a href="#方法二-无需校园网账号-绕过校园网认证" class="headerlink" title="方法二 无需校园网账号,绕过校园网认证"></a>方法二 无需校园网账号,<strong>绕过校园网认证</strong></h2><p><strong>技术</strong>:使用代理技术</p><p><strong>参考教程1:</strong><a href="https://www.bilibili.com/read/cv15168219/"><strong>点击查看教程</strong></a></p><p><strong>参考教程2:</strong><a href="https://kenvix.com/post/use-school-network-without-paying-guide/"><strong>点击查看教程</strong></a></p><blockquote><p>成本较高,推荐有云服务器的使用</p></blockquote><h2 id="方法三-需要一个校园网账号-绕过设备限制"><a href="#方法三-需要一个校园网账号-绕过设备限制" class="headerlink" title="方法三 需要一个校园网账号,绕过设备限制"></a>方法三 需要一个校园网账号,绕过设备限制</h2><p><strong>技术</strong>:使用XMURP-UA&#x2F;UA2F&#x2F;UA3F修改 UA,XMURP-UA&#x2F;UA2F需要编译OpenWrt</p><p><strong>参考教程1:</strong><a href="https://www.sunbk201.site/posts/crack-campus-network"><strong>点击查看教程</strong></a></p><p><strong>参考教程2:</strong><a href="https://github.com/EOYOHOO/Campus-network?tab=readme-ov-file"><strong>点击查看教程</strong></a></p><blockquote><p>比较难配置,推荐高手使用</p></blockquote><h2 id="方法四-需要一个校园网账号，绕过设备限制"><a href="#方法四-需要一个校园网账号，绕过设备限制" class="headerlink" title="方法四 需要一个校园网账号，绕过设备限制"></a>方法四 需要一个校园网账号，绕过设备限制</h2><p><strong>技术</strong>:多种技术结合，高级防检测需要服务器</p><p><strong>参考教程</strong>:自行搜索淘宝的gswifi或aswifi，由于卖的主要是技术和固件，同价格下路由器的配置较低</p><blockquote><p>教程全,推荐小白使用</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;方法一-需要一个校园网账号-绕过设备限制（已失效）&quot;&gt;&lt;a href=&quot;#方法一-需要一个校园网账号-绕过设备限制（已失效）&quot; class=&quot;headerlink&quot; title=&quot;方法一 需要一个校园网账号,绕过设备限制（已失效）&quot;&gt;&lt;/a&gt;方法一 需要一个校园网</summary>
      
    
    
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>随身 WiFi 刷入 Debian 系统并优化</title>
    <link href="http://example.com/2024/10/19/%E9%9A%8F%E8%BA%AB%20WiFi%20%E5%88%B7%E5%85%A5%20Debian%20%E7%B3%BB%E7%BB%9F%E5%B9%B6%E4%BC%98%E5%8C%96/"/>
    <id>http://example.com/2024/10/19/%E9%9A%8F%E8%BA%AB%20WiFi%20%E5%88%B7%E5%85%A5%20Debian%20%E7%B3%BB%E7%BB%9F%E5%B9%B6%E4%BC%98%E5%8C%96/</id>
    <published>2024-10-19T04:24:00.000Z</published>
    <updated>2025-02-13T03:06:01.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="随身-WiFi-刷入-Debian-系统并优化"><a href="#随身-WiFi-刷入-Debian-系统并优化" class="headerlink" title="随身 WiFi 刷入 Debian 系统并优化"></a>随身 WiFi 刷入 Debian 系统并优化</h1><p>相关视频教程:<a href="https://www.bilibili.com/video/BV142421Z7gg/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&vd_source=4476a313bf59b6e4613395a8ac827319">点击跳转</a></p><p>参考文章:[Tony] <a href="https://blog.iamsjy.com/2023/12/11/snapdragon-410-portable-wifi-hotspot-flash-debian-and-optimize/">https://blog.iamsjy.com/2023/12/11/snapdragon-410-portable-wifi-hotspot-flash-debian-and-optimize/</a></p><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><p>随身 WiFi 配置如下：</p><table><thead><tr><th>SoC</th><th>骁龙410（MSM8916）四核 Cortex-A53，64 位</th></tr></thead><tbody><tr><td>内存</td><td>512MB</td></tr><tr><td>存储</td><td>4GB</td></tr><tr><td>版号</td><td>UFI001C、UFI001B、UFI003、UZ801、SP970</td></tr></tbody></table><blockquote><p>注意</p><p><strong>不是骁龙 410 SoC 的随身 WiFi 无法刷机，请知悉。</strong></p></blockquote><h2 id="所需文件"><a href="#所需文件" class="headerlink" title="所需文件"></a>所需文件</h2><ul><li><a href="https://www.123pan.com/s/7368Vv-3TyQh.html">高通 9008 驱动</a></li><li><a href="https://googledownloads.cn/android/repository/platform-tools-latest-windows.zip">ADB 工具</a></li><li><a href="https://www.123pan.com/s/7368Vv-hTyQh.html">Miko 备份工具</a></li><li><a href="https://www.123pan.com/s/XwVDVv-WICn3">Debian 刷机包</a></li></ul><p>如果不确定下载哪个，请先查看板子型号再下载刷机包。</p><h2 id="查看板子型号"><a href="#查看板子型号" class="headerlink" title="查看板子型号"></a>查看板子型号</h2><p>用螺丝刀将随身 WiFi 的外壳拆开，查看板子上方的丝印，型号一般以 UFI、UZ 或 SP 开头。如红框中所示，我买到的型号是 UFI003。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce22e2579.jpg"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce22e2579.jpg" alt="1702214357490"></a></p><h2 id="安装-9008-驱动"><a href="#安装-9008-驱动" class="headerlink" title="安装 9008 驱动"></a>安装 9008 驱动</h2><p>执行 <code>driver.exe</code>，并点击立即安装。在弹出如下窗口中，点击“安装”。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce32c14a5.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce32c14a5.png" alt="image-20231204174343852"></a></p><h2 id="安装-ADB-工具"><a href="#安装-ADB-工具" class="headerlink" title="安装 ADB 工具"></a>安装 ADB 工具</h2><p>解压 <code>platform-tools_r34.0.5-windows.zip</code>，并将解压目录添加到环境变量。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce3d09e64.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce3d09e64.png" alt="image-20231210224939537"></a></p><p>打开命令提示符，执行 <code>adb version</code>。有如下输出，则表明配置正确。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\Thinkpad&gt;adb version<br><span class="hljs-attribute">Android</span> Debug Bridge version <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">41</span><br><span class="hljs-attribute">Version</span> <span class="hljs-number">34</span>.<span class="hljs-number">0</span>.<span class="hljs-number">5</span>-<span class="hljs-number">10900879</span><br><span class="hljs-attribute">Installed</span> as D:\platform-tools\adb.exe<br><span class="hljs-attribute">Running</span> <span class="hljs-literal">on</span> Windows <span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">19045</span><br></code></pre></td></tr></table></figure><h2 id="安装-Miko-备份工具"><a href="#安装-Miko-备份工具" class="headerlink" title="安装 Miko 备份工具"></a>安装 Miko 备份工具</h2><p>解压 <code>MiKo_Loder Pro.zip</code>，运行 <code>miko.exe</code> 安装备份工具。安装完成后，桌面上会出现 Miko 备份工具的快捷方式。在图标上右键，打开文件所在位置，将解压得到的 <code>Loader.exe</code> 复制到 Miko 安装目录即可。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce44c7690.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce44c7690.png" alt="image-20231210215138055"></a></p><h2 id="开启-ADB"><a href="#开启-ADB" class="headerlink" title="开启 ADB"></a>开启 ADB</h2><p>将随身 WiFi 插入电脑 USB 接口。打开设备管理器，如果此时多了一个名叫 <code>Android Composite ADB Interface</code> 的设备，则表明随身 WiFi 已经开启 ADB，无需执行其他操作。</p><p>如果没有出现这个设备，则需要手动开启 ADB。以 <code>UZ801</code> 型号为例，连上随身 WiFi 的热点，并访问 <a href="http://192.168.100.1/usbdebug.html">http://192.168.100.1/usbdebug.html</a> 即可开启 ADB，再次访问即可关闭。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce6125f05.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce6125f05.png" alt="image-20231210215947101"></a></p><blockquote><p>提示</p><p>部分 UFI003 型号的随身 WiFi 默认不开 ADB，需要手动进 9008 模式刷入已开启 ADB 的安卓固件。</p><p>固件下载地址：<a href="https://www.123pan.com/s/NUK8Vv-nRdl">https://www.123pan.com/s/NUK8Vv-nRdl</a> 提取码：1LEW</p><p><strong>手动进 9008 模式的方法：按住 reset 键不放（随身 WiFi 背面二维码右上角的小孔，用取卡针或牙签戳即可），并将随身 WiFi 插入电脑，松开 reset 键。</strong></p></blockquote><h2 id="备份原厂固件"><a href="#备份原厂固件" class="headerlink" title="备份原厂固件"></a>备份原厂固件</h2><p>为避免刷错固件变砖等情况，强烈建议备份原厂固件。</p><p>打开命令提示符，执行 <code>adb reboot edl</code>，此时设备管理器中会多出高通 9008 设备。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce6c996b3.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce6c996b3.png" alt="image-20231210221934063"></a></p><p>我们运行上文所提到的 <code>Loader.exe</code>（即 Miko 工具）进行备份数据。</p><p>此时窗口右侧显示设备信息，表明随身 WiFi 已被成功识别。如果显示 <strong>Not Found</strong> 字样，请重新安装 9008 驱动并再次尝试。</p><p>依次点击 <strong>Read</strong> –&gt;<strong>Partition Backup&#x2F;Erase</strong>–&gt;<strong>Load Partition Structure</strong>。然后双击红色 Option 下面的灰条，选择备份目录，并点击 <strong>Read Full Image</strong>。再次选择备份目录，并取一个文件名，点击确定，即可开始备份。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce79b5a9c.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce79b5a9c.png" alt="image-20231210233137419"></a></p><p>等待几分钟，直到进度条达到 100%，右侧输出 Sucess 字样和用时，则表明备份完成 。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce8b43166.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce8b43166.png" alt="image-20231210234948575"></a></p><p>如果需要恢复备份，依次点击 <strong>Flash</strong> –&gt;<strong>emmc block0 flasher</strong>。然后双击 <strong>Emmc Data</strong>，选择之前备份的文件（<code>.bin</code> 格式），并点击下方 <strong>Flash</strong> 按钮，等待刷机完成即可。</p><p><a href="https://imgcdn.boochi.cn/i/2024/07/08/668b9b21e9950.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/668b9b21e9950.png" alt="668b99e4dcc3d.png"></a></p><h2 id="刷入-Debian"><a href="#刷入-Debian" class="headerlink" title="刷入 Debian"></a>刷入 Debian</h2><p>拔掉随身 WiFi 并重新插入 USB 接口，解压 Debian 刷机包。打开命令提示符，执行 <code>adb reboot bootloader</code> 进入 fastboot 模式。运行刷机包中的 <code>flash.bat</code>刷入系统，等待刷机完成。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ce9854dd3.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ce9854dd3.png" alt="image-20231210235717253"></a></p><p>输出 <code>all done!</code> 则表明刷机完成。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cea228405.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cea228405.png" alt="image-20231210235939348"></a></p><h2 id="安装-RNDIS-网络驱动"><a href="#安装-RNDIS-网络驱动" class="headerlink" title="安装 RNDIS 网络驱动"></a>安装 RNDIS 网络驱动</h2><p>重新插入随身 WiFI，打开任务管理器，在其他设备中会出现一个未知设备或以 RNDIS 开头的设备。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ceae713b7.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ceae713b7.png" alt="image-20231211002244435"></a></p><p>右键，<strong>更新驱动程序</strong>–&gt;<strong>浏览我的电脑以查找驱动程序</strong>–&gt;<strong>让我从计算机上的可用驱动程序列表中选取</strong>–&gt;<strong>显示所有设备</strong>，等待列表加载完成。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576ced636acb.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576ced636acb.png" alt="image-20231211002348468"></a></p><p>左侧选择 <strong>Microsoft</strong>，右侧选择 **基于远程 NDIS 的 Internet 共享设备，在弹出窗口中选择是，并确定。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cee2bd3a7.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cee2bd3a7.png" alt="image-20231211002724457"></a></p><p>至此，RNDIS 驱动安装成功。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf3d95a0f.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf3d95a0f.png" alt="image-20231211002850196"></a></p><h2 id="连接随身-WiFi-终端"><a href="#连接随身-WiFi-终端" class="headerlink" title="连接随身 WiFi 终端"></a>连接随身 WiFi 终端</h2><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf55d48de.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf55d48de.png" alt="image-20231211004205761"></a></p><p>驱动安装成功后，电脑上会多出一个名叫 <code>4G_UFI_123456</code> 的 NDIS 设备，同时会出现一个同名的热点，密码为 <strong>12345678</strong>。</p><p>Debian 默认用户名为 user，密码为 1，root 密码也为 1。<strong>请务必及时修改密码（命令：passwd）。</strong></p><p>此时可以通过 adb 或 ssh 连接到 Debian 终端。</p><h3 id="通过-adb-连接"><a href="#通过-adb-连接" class="headerlink" title="通过 adb 连接"></a>通过 adb 连接</h3><p>将随身 WiFi 插入电脑 USB 接口，使用以下命令查看已连接 adb 设备：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">adb</span> <span class="hljs-variable">devices</span><br><span class="hljs-built_in">C</span><span class="hljs-operator">:</span>\<span class="hljs-variable">Users</span>\<span class="hljs-variable">Thinkpad</span><span class="hljs-operator">&gt;</span><span class="hljs-variable">adb</span> <span class="hljs-variable">devices</span><br><span class="hljs-built_in">List</span> <span class="hljs-variable">of</span> <span class="hljs-variable">devices</span> <span class="hljs-variable">attached</span><br><span class="hljs-number">0123456789</span>      <span class="hljs-variable">device</span><br></code></pre></td></tr></table></figure><p>有新设备出现时，使用以下指令进入 bash：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">adb <span class="hljs-keyword">shell</span><br></code></pre></td></tr></table></figure><p>通过 adb 连接时，使用 <code>nmtui</code>、<code>htop</code> 等需要显示图形的命令，可能会出现如下错误：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># nmtui</span><br><span class="hljs-title class_">TERM</span> environment variable needs set.<br></code></pre></td></tr></table></figure><p>设置 <code>TERM</code> 环境变量即可解决。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">TERM</span>=linux<br></code></pre></td></tr></table></figure><h3 id="通过-ssh-连接"><a href="#通过-ssh-连接" class="headerlink" title="通过 ssh 连接"></a>通过 ssh 连接</h3><p>将随身 WiFi 插入电脑 USB 接口或连接上随身 WiFi 的热点，使用以下指令进行连接：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> root@<span class="hljs-number">192.168.68.1</span><br></code></pre></td></tr></table></figure><p>如果连不上说明系统还在启动，请稍后再试。</p><h2 id="随身-WiFi-联网"><a href="#随身-WiFi-联网" class="headerlink" title="随身 WiFi 联网"></a>随身 WiFi 联网</h2><p>此时随身 WiFi 并没有联网，必须要关闭热点才能连接 WiFi。下面介绍详细步骤。</p><p>首先打开命令提示符，执行 <code>adb shell</code> 进入 Debian 终端。然后设置 TERM 环境变量：<code>export TERM=linux</code>。</p><p>执行 <code>nmtui</code>，选择“编辑连接”。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf5cb34d0.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf5cb34d0.png" alt="image-20231211005030766"></a></p><p>左侧使用方向键选择 <code>bridge</code>，右侧选择“编辑”。并回车。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf6e3537f.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf6e3537f.png" alt="image-20231211005119460"></a></p><p>删除其中的 <code>wifi</code>，并选择确定。。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf8484bd9.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf8484bd9.png" alt="image-20231211005229505"></a></p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf944056e.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf944056e.png" alt="image-20231211005307459"></a></p><p>返回，选择启用连接，则可连接 WiFi。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cf9b13fd4.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cf9b13fd4.png" alt="img"></a></p><h2 id="优化系统"><a href="#优化系统" class="headerlink" title="优化系统"></a>优化系统</h2><p>删除无效软件包仓库</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>*<br></code></pre></td></tr></table></figure><p>删除多余软件包</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">apt <span class="hljs-built_in">auto</span>purge -y adoptopenjdk<span class="hljs-number">-8</span>-hotspot<br></code></pre></td></tr></table></figure><p>更换软件源</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gauss">cat &lt;&lt;<span class="hljs-built_in">EOF</span>&gt; /etc/apt/sources.list<br>deb http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="hljs-meta"># deb-src http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span></span><br><br>deb http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="hljs-meta"># deb-src http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span></span><br><br><span class="hljs-meta">#deb http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span></span><br><span class="hljs-meta"># deb-src http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span></span><br><br>deb http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span><br><span class="hljs-meta"># deb-src http:<span class="hljs-comment">//mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span></span><br><span class="hljs-built_in">EOF</span><br></code></pre></td></tr></table></figure><p>更新软件包</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">apt <span class="hljs-keyword">update</span> <span class="hljs-variable">&amp;&amp;</span> apt upgrade -y<br></code></pre></td></tr></table></figure><p>安装常用软件包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> -y nano curl<br></code></pre></td></tr></table></figure><p>删除软件包缓存</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">apt clean</span><br></code></pre></td></tr></table></figure><h2 id="关闭-LED-灯（可选）"><a href="#关闭-LED-灯（可选）" class="headerlink" title="关闭 LED 灯（可选）"></a>关闭 LED 灯（可选）</h2><p>随身 WiFi 开机后，LED 灯会不停地闪烁，如果不喜欢的话，执行以下命令即可关闭。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">echo none &gt; /sys/<span class="hljs-keyword">class</span>/<span class="hljs-symbol">leds</span>/<span class="hljs-symbol">blue:<span class="hljs-symbol">wifi</span></span>/<span class="hljs-symbol">trigger</span><br><span class="hljs-symbol">echo</span> <span class="hljs-symbol">none</span> &gt; /<span class="hljs-symbol">sys</span>/<span class="hljs-symbol">class</span>/<span class="hljs-symbol">leds</span>/<span class="hljs-symbol">red:<span class="hljs-symbol">os</span></span>/<span class="hljs-symbol">trigger</span><br></code></pre></td></tr></table></figure><p>执行后会立即生效。为避免重启后失效，建议设置开机自动执行。</p><p>编辑 <code>/etc/rc.local</code> 文件，并将以上两行命令添加到 <code>exit 0</code> 之前，并保存。</p><p><a href="https://imgcdn.boochi.cn/i/2023/12/11/6576cfab93361.png"><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/wifi/assets/6576cfab93361.png" alt="image-20231211155540049"></a></p><h2 id="设置交换分区（可选）"><a href="#设置交换分区（可选）" class="headerlink" title="设置交换分区（可选）"></a>设置交换分区（可选）</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># fallocate -l 0.3G /swapfile</span><br>root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># chmod 600 /swapfile</span><br>root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># mkswap /swapfile</span><br><span class="hljs-title class_">Setting</span> up swapspace version <span class="hljs-number">1</span>, size = <span class="hljs-number">341.3</span> <span class="hljs-title class_">MiB</span> (<span class="hljs-number">357908480</span> bytes)<br>no label, <span class="hljs-title class_">UUID</span>=fad5a8ef-d4fa<span class="hljs-number">-49</span>c4-ac28-e416c7aaa3ea<br>root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># swapon /swapfile</span><br>root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># sysctl vm.swappiness=100</span><br>vm.swappiness = <span class="hljs-number">100</span><br>root<span class="hljs-variable">@openstick</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># echo &#x27;/swapfile swap swap defaults 0 0&#x27; &gt;&gt; /etc/fstab</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;随身-WiFi-刷入-Debian-系统并优化&quot;&gt;&lt;a href=&quot;#随身-WiFi-刷入-Debian-系统并优化&quot; class=&quot;headerlink&quot; title=&quot;随身 WiFi 刷入 Debian 系统并优化&quot;&gt;&lt;/a&gt;随身 WiFi 刷入 Debian</summary>
      
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="debain" scheme="http://example.com/tags/debain/"/>
    
  </entry>
  
  <entry>
    <title>用python写一个校园网登录程序</title>
    <link href="http://example.com/2024/10/11/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AA%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BB%E5%BD%95%E7%A8%8B%E5%BA%8F/"/>
    <id>http://example.com/2024/10/11/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AA%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%99%BB%E5%BD%95%E7%A8%8B%E5%BA%8F/</id>
    <published>2024-10-11T15:05:00.000Z</published>
    <updated>2025-02-13T03:15:54.052Z</updated>
    
    <content type="html"><![CDATA[<p><strong>介绍</strong>:使用tkinter库,实现了开机自动后台登录校园网,保存历史记录等功能</p><p>1.默认发送三次等待校园网连接的通知,每个通知间隔5秒,如果程序未检测到有校园网连接,则程序自动退出</p><p><img src="https://pic.imgdb.cn/item/67093fb2d29ded1a8cef4209.png"></p><p>2.认证成功后自动退出程序,第一次登录会提示输入账号和密码,程序会保存配置信息,下一次读取配置信息然后自动登录</p><p><img src="https://pic.imgdb.cn/item/670940b3d29ded1a8cf04048.png"></p><p>3.登录成功后再次尝试登录会提示请勿重复认证的通知</p><p><img src="https://pic.imgdb.cn/item/6709400dd29ded1a8cef9b81.png"></p><p>4.用pyside6构建一个更漂亮的界面</p><p><img src="https://pic.imgdb.cn/item/67094191d29ded1a8cf12646.png"></p><p><img src="https://pic.imgdb.cn/item/670941b8d29ded1a8cf147e9.png"></p><p><img src="https://pic.imgdb.cn/item/670941e0d29ded1a8cf169f3.png"></p><p><img src="https://pic.imgdb.cn/item/670941d3d29ded1a8cf15ff7.png"></p><p><strong>项目地址:</strong><a href="https://github.com/tingfeng347/campus_network_connect"><strong>https://github.com/tingfeng347/campus_network_connect</strong></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;介绍&lt;/strong&gt;:使用tkinter库,实现了开机自动后台登录校园网,保存历史记录等功能&lt;/p&gt;
&lt;p&gt;1.默认发送三次等待校园网连接的通知,每个通知间隔5秒,如果程序未检测到有校园网连接,则程序自动退出&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/"/>
    
    
    <category term="pyside6" scheme="http://example.com/tags/pyside6/"/>
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="tkinter" scheme="http://example.com/tags/tkinter/"/>
    
  </entry>
  
  <entry>
    <title>Python数据挖掘实战代码</title>
    <link href="http://example.com/2024/10/04/Python%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2024/10/04/Python%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E4%BB%A3%E7%A0%81/</id>
    <published>2024-10-04T13:20:00.000Z</published>
    <updated>2025-02-13T03:20:43.589Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python数据挖掘实战"><a href="#Python数据挖掘实战" class="headerlink" title="Python数据挖掘实战"></a>Python数据挖掘实战</h1><h2 id="课本代码"><a href="#课本代码" class="headerlink" title="课本代码"></a>课本代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># ==== 代码2-1.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>], dtype = np.int64)<br><span class="hljs-built_in">print</span>(a)<br><br><span class="hljs-comment"># ==== 代码2-2.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">5</span>)   <span class="hljs-comment">#只给定stop参数值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a：\n&quot;</span>, a)  <br>b = np.arange(<span class="hljs-number">2</span>, <span class="hljs-number">5.0</span>)  <span class="hljs-comment">#给定start和stop参数值，生成一个浮点型数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象b：\n&quot;</span>, b)  <br>c = np.arange(<span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, dtype = np.int32)  <span class="hljs-comment">#给定start、stop、step和dtype参数值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象c：\n&quot;</span>, c)<br><br><span class="hljs-comment"># ==== 代码2-3.py ====</span><br><br>a = np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, endpoint = <span class="hljs-literal">True</span>)  <span class="hljs-comment">#数组包含截止值3</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a：\n&quot;</span>, a)<br><br><br><span class="hljs-comment"># ==== 代码2-4.py ====</span><br><br>a = np.zeros((<span class="hljs-number">2</span>, <span class="hljs-number">3</span>), dtype = np.int32)   <span class="hljs-comment">#生成2×3形状的全0数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a：\n&quot;</span>, a)<br>a = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>])<br>b = np.zeros_like(b)     <span class="hljs-comment">#生成与数组a形状相同，数据类型也相同的全0数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象b：\n&quot;</span>, b)<br><br><br><span class="hljs-comment"># ==== 代码2-5.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.rand(<span class="hljs-number">4</span>)     <span class="hljs-comment">#生成有4个元素的一维随机数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a：\n&quot;</span>, a)<br>b = np.random.randn(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)  <span class="hljs-comment">#生成形状为2×3，符合正态分布的随机数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组的对象b：\n&quot;</span>, b)<br>c = np.random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, size = (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>))  <br><span class="hljs-comment"># 生成形状为2×3，符合均匀分布的随机整数数组，取值区间为[1,3)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象c：\n&quot;</span>, c)<br><br><br><span class="hljs-comment"># ==== 代码2-6.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.ones((<span class="hljs-number">2</span>, <span class="hljs-number">3</span>), dtype = np.float32)   <span class="hljs-comment">#生成2x3形状的float32型数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a的类型：\n&quot;</span>, a.dtype)<br>a = a.astype(np.int32)    <span class="hljs-comment">#将float32类型的数据转化为整型数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a的类型：\n&quot;</span>, a.dtype)<br><br><br><span class="hljs-comment"># ==== 代码2-7.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.ones((<span class="hljs-number">3</span>, <span class="hljs-number">4</span>), dtype = np.int32)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组a的维数：&quot;</span>, a.ndim)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组a的形状：&quot;</span>, a.shape)<br><br><br><span class="hljs-comment"># ==== 代码2-8.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.array([[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>]])<br>b = a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组a的第0行第1列元素为:\n&quot;</span>, b)<br><br><br><span class="hljs-comment"># ==== 代码2-9.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">24</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)  <span class="hljs-comment">#生成形状为(2,3,4)的数组</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a:\n&quot;</span>, a)<br>b = a[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">1</span>, <span class="hljs-number">0</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>, ...]    <span class="hljs-comment">#第1次切片：在第0和1个维度上进行切片</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n第1次切片的结果：\n&quot;</span>, b)<br>c = a[:<span class="hljs-number">1</span>, :<span class="hljs-number">2</span>]               <span class="hljs-comment">#第2次切片：更精简的切片方式</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n第2次切片的结果：\n&quot;</span>, c)<br><br><span class="hljs-comment"># ==== 代码2-10.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(-<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, size = (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a的原始值:\n&quot;</span>, a)<br>index = (a &lt;= <span class="hljs-number">0</span>)    <span class="hljs-comment">#单条件索引</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;单条件索引的布尔数组:\n&quot;</span>, index)<br>a[index] = <span class="hljs-number">0</span>      <span class="hljs-comment"># 将布尔索引取值为True的对应位置上的数据赋值为0 </span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数组对象a的新值:\n&quot;</span>, a)<br><br><br><span class="hljs-comment"># ==== 代码2-11.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(-<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, size = (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;排序前的数组对象a:\n&quot;</span>, a)<br>b = np.sort(a, axis = <span class="hljs-number">1</span>)   <span class="hljs-comment">#对数组对象a按行排序</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;对数组对象a行排序后的结果:\n&quot;</span>, b)<br><br><br><span class="hljs-comment"># ==== 代码2-12.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#1. Numpy数组与数值的算术运算的例子</span><br>a = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], dtype = np.int32)<br>b1 = a+<span class="hljs-number">2</span>            <span class="hljs-comment">#算术加</span><br>b2 = a*<span class="hljs-number">2</span>            <span class="hljs-comment">#算术乘</span><br>b3 = a**<span class="hljs-number">2</span>           <span class="hljs-comment">#算术乘方</span><br><span class="hljs-comment">#2. Numpy数组与数组的算术运算的例子</span><br>a = np.arange(<span class="hljs-number">24</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)         <span class="hljs-comment">#生成形状为(2,3,4)的3维数组</span><br>weight = np.random.random(size = (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>))  <span class="hljs-comment">#生成2维的权重数组 </span><br>b4 = a*weight                        <span class="hljs-comment">#利用广播特性实现数组和数组相乘</span><br><br><br><span class="hljs-comment"># ==== 代码2-13.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment">#使用python列表创建Series对象，并指定索引</span><br>s1 = pd.Series([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, np.nan], index = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>]) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用列表创建的Series对象s1：\n&quot;</span>, s1)<br>dic = &#123;<span class="hljs-string">&#x27;张三&#x27;</span>: <span class="hljs-number">97</span>, <span class="hljs-string">&#x27;李四&#x27;</span>: <span class="hljs-number">68</span>, <span class="hljs-string">&#x27;王五&#x27;</span>: <span class="hljs-number">88</span>&#125;<br>s2 = pd.Series(dic)              <span class="hljs-comment">#使用python字典创建Series对象</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用字典创建的Series对象s2：\n&quot;</span>, s2)<br>arr = np.arange(<span class="hljs-number">4</span>)               <span class="hljs-comment">#使用Numpy数组创建Series对象</span><br>s3 = pd.Series(arr)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用Numpy数组创建的Series对象s3：\n&quot;</span>, s3)<br><br><br><span class="hljs-comment"># ==== 代码2-14.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment">#使用二维列表创建</span><br>df1 = pd.DataFrame([[<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], [<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>]], columns = [<span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用二维列表创建DataFrame对象：\n&quot;</span>, df1)<br><span class="hljs-comment">#使用Numpy二维数组创建</span><br>df2 = pd.DataFrame(np.zeros((<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)), columns = [<span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用Numpy二维数组创建DataFrame对象:\n&quot;</span>, df2)<br><span class="hljs-comment">#使用字典创建</span><br>dic = &#123; <span class="hljs-string">&#x27;语文&#x27;</span>: [<span class="hljs-number">98</span>, <span class="hljs-number">88</span>, <span class="hljs-number">78</span>],<br>      <span class="hljs-string">&#x27;数学&#x27;</span>: [<span class="hljs-number">89</span>, <span class="hljs-number">72</span>, <span class="hljs-number">93</span>],<br>      <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">77</span>]&#125;<br>df3 = pd.DataFrame(dic,  index = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用字典创建DataFrame对象:\n&quot;</span>, df3)<br><br><br><span class="hljs-comment"># ==== 代码2-15.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>dic = &#123;<span class="hljs-string">&#x27;语文&#x27;</span>: [<span class="hljs-number">98</span>, <span class="hljs-number">88</span>, <span class="hljs-number">78</span>],<br>       <span class="hljs-string">&#x27;数学&#x27;</span>: [<span class="hljs-number">89</span>, <span class="hljs-number">72</span>, <span class="hljs-number">93</span>],<br>       <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">77</span>]&#125;<br>df = pd.DataFrame(dic,  index = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>])<br>df1 = df[<span class="hljs-string">&#x27;语文&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;获取DataFrame对象的一列:\n&quot;</span>, df1)<br>df2 = df[[<span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>]]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;获取DataFrame对象的多列:\n&quot;</span>, df2)<br>df3 = df.iloc[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用iloc函数获得DataFrame对象的一行:\n&quot;</span>, df3)<br>df4 = df.iloc[<span class="hljs-number">1</span>:, <span class="hljs-number">1</span>:]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用iloc函数获得DataFrame对象的多行多列（切片）:\n&quot;</span>, df4)<br>df5 = df.loc[<span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用loc函数获得DataFrame对象中的指定行列索引的一个数据:\n&quot;</span>, df5)<br>df6 = df[df[<span class="hljs-string">&#x27;语文&#x27;</span>] &gt; <span class="hljs-number">85</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用条件索引获得满足条件的行:\n&quot;</span>, df6)<br><br><br><span class="hljs-comment"># ==== 代码2-16.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df1 = pd.DataFrame(np.arange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>), index = [<span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>], columns = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>])<br>df2 = pd.DataFrame(np.arange(<span class="hljs-number">9</span>).reshape(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), index = [<span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>], columns = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c2&#x27;</span>])<br>df3 = df1 + df2<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用运算符相加的结果:\n&#x27;</span>, df3)<br>df4 = df1.add(df2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用add()函数相加的结果:\n&#x27;</span>, df4)<br><br><br><span class="hljs-comment"># ==== 代码2-17.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame([[<span class="hljs-number">98.2</span>,<span class="hljs-number">79.3</span>,<span class="hljs-number">28.7</span>], [<span class="hljs-number">78.3</span>,<span class="hljs-number">87.3</span>,<span class="hljs-number">54.7</span>], [<span class="hljs-number">77.7</span>,<span class="hljs-number">65.9</span>,<span class="hljs-number">34.2</span>]],<br>                  index = [<span class="hljs-string">&#x27;2022-3-1&#x27;</span>, <span class="hljs-string">&#x27;2022-3-2&#x27;</span>, <span class="hljs-string">&#x27;2022-3-3&#x27;</span>],<br>                  columns = [<span class="hljs-string">&#x27;商店A&#x27;</span>, <span class="hljs-string">&#x27;商店B&#x27;</span>, <span class="hljs-string">&#x27;商店C&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;三家商店三天的营业额数据为:\n&#x27;</span>, df)<br>s1 = df.<span class="hljs-built_in">sum</span>()  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每家商店在三天的总营业额:\n&quot;</span>, s1)<br>s2 = df.mean(axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每家商店每天的平均营业额:\n&quot;</span>, s2)<br>s3 = df.<span class="hljs-built_in">sum</span>(axis = <span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每天三家商店的营业额之和:\n&quot;</span>, s3)<br>s4 = df.idxmax(axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每家商店销售额最高的日期是：\n&quot;</span>, s4)<br>s5 = df.cumsum(axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;每家商店的销售额累计和：\n&quot;</span>, s5)<br>s6 = df.describe()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;销售数据的一般描述性统计情况（按商店）:\n&quot;</span>, s6)<br><br><br><span class="hljs-comment"># ==== 代码2-18.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>s0 = pd.Series([<span class="hljs-number">98</span>, <span class="hljs-number">79</span>, <span class="hljs-number">67</span>], index = [<span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;数学&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>])<br>s1 = s0.reindex(index = [<span class="hljs-string">&#x27;数学&#x27;</span>, <span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>, <span class="hljs-string">&#x27;计算机&#x27;</span>], fill_value=<span class="hljs-number">60.0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;行索引重排后的Series对象:\n&quot;</span>, s1)<br>s2 = pd.Series([<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>], index = [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])<br>s3 = s2.reindex(np.arange(<span class="hljs-number">5</span>), method = <span class="hljs-string">&#x27;ffill&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;行索引重排后的Series对象:\n&quot;</span>, s3)<br><br><br><span class="hljs-comment"># ==== 代码2-19.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>dic = &#123;<span class="hljs-string">&#x27;语文&#x27;</span>: [<span class="hljs-number">98</span>, <span class="hljs-number">88</span>, <span class="hljs-number">78</span>],<br>      <span class="hljs-string">&#x27;数学&#x27;</span>: [<span class="hljs-number">89</span>, <span class="hljs-number">72</span>, <span class="hljs-number">93</span>],<br>      <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">77</span>]&#125;<br>df = pd.DataFrame(dic,  index = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DataFrame的原始数据对象:\n&quot;</span>, df)<br>df1 = df.reindex(index = [<span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;陈六&#x27;</span>], <br>columns = [<span class="hljs-string">&#x27;数学&#x27;</span>, <span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>, <span class="hljs-string">&#x27;计算机&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;对df对象进行行列索引重排后的结果:\n&quot;</span>, df1)<br><br><br><br><br><br><span class="hljs-comment"># ==== 代码2-20.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>dic = &#123;<span class="hljs-string">&#x27;语文&#x27;</span>: [<span class="hljs-number">98</span>, <span class="hljs-number">88</span>, <span class="hljs-number">78</span>],<br>      <span class="hljs-string">&#x27;数学&#x27;</span>: [<span class="hljs-number">89</span>, <span class="hljs-number">72</span>, <span class="hljs-number">93</span>],<br>      <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">77</span>]&#125;<br>df = pd.DataFrame(dic, index = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DataFrame的原始对象:\n&quot;</span>, df)<br>df1 = df.drop(labels = [<span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>], axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;删除指定行后的DataFrame对象:\n&quot;</span>, df1)<br><br><br><span class="hljs-comment"># ==== 代码2-21.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>dic = &#123;<span class="hljs-string">&#x27;语文&#x27;</span>: [<span class="hljs-number">98</span>, <span class="hljs-number">88</span>, <span class="hljs-number">78</span>],<br>      <span class="hljs-string">&#x27;数学&#x27;</span>: [<span class="hljs-number">89</span>, <span class="hljs-number">72</span>, <span class="hljs-number">93</span>],<br>      <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">77</span>]&#125;<br>df = pd.DataFrame(dic, index = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DataFrame的原始对象df:\n&quot;</span>, df)<br>df1 = df.sort_index(axis = <span class="hljs-number">1</span>, ascending = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用sort_index函数对df对象沿水平轴降序排序的结果:\n&quot;</span>, df1)<br>df2 = df.sort_values(by = [<span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>], ascending = <span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用sort_values函数对df对象多列升序排序的结果:\n&quot;</span>, df2)<br><br><br><span class="hljs-comment"># ==== 代码2-22.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>x = np.arange(-<span class="hljs-number">2</span>*np.pi, <span class="hljs-number">2</span>*np.pi, <span class="hljs-number">0.01</span>)<br>y1, y2 = np.sin(x), np.cos(x)<br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>))<br>plt.plot(x, y1)<br>plt.plot(x, y2)<br>plt.xlim(-<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)      <span class="hljs-comment">#设置X轴和Y轴的显示范围</span><br>plt.ylim(-<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>plt.xlabel(<span class="hljs-string">&quot;x&quot;</span>)     <span class="hljs-comment">#设置X轴和Y轴的显示标签</span><br>plt.ylabel(<span class="hljs-string">u&quot;函数值&quot;</span>, fontproperties = <span class="hljs-string">&#x27;SimHei&#x27;</span>)<br><span class="hljs-comment">#设置Y轴的刻度及显示的刻度值</span><br>plt.yticks([-<span class="hljs-number">1</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-string">u&#x27;最小值&#x27;</span>, <span class="hljs-string">u&#x27;中间值&#x27;</span>, <span class="hljs-string">u&#x27;最大值&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>], fontproperties = <span class="hljs-string">&#x27;SimHei&#x27;</span>)<br><span class="hljs-comment">#设置图例</span><br>plt.legend(prop = &#123;<span class="hljs-string">&#x27;family&#x27;</span>: <span class="hljs-string">&#x27;SimHei&#x27;</span>, <span class="hljs-string">&#x27;size&#x27;</span>:<span class="hljs-number">16</span>&#125;,<br>         loc = <span class="hljs-string">&#x27;lower right&#x27;</span>, labels = [<span class="hljs-string">&#x27;正弦&#x27;</span>, <span class="hljs-string">&#x27;余弦&#x27;</span>])<br><span class="hljs-comment">#设置文本注释</span><br>plt.annotate(s = <span class="hljs-string">&#x27;sin(x)&#x27;</span>, xy = (<span class="hljs-number">0.5</span>, np.sin(<span class="hljs-number">0.5</span>)), xytext = (<span class="hljs-number">0</span>, <span class="hljs-number">1.5</span>), <br>             weight = <span class="hljs-string">&#x27;bold&#x27;</span>, color = <span class="hljs-string">&#x27;black&#x27;</span>,<br>             arrowprops = <span class="hljs-built_in">dict</span>(arrowstyle = <span class="hljs-string">&#x27;-|&gt;&#x27;</span>, connectionstyle = <span class="hljs-string">&#x27;arc3&#x27;</span>, color = <span class="hljs-string">&#x27;red&#x27;</span>),<br>             bbox = <span class="hljs-built_in">dict</span>(boxstyle = <span class="hljs-string">&#x27;round, pad = 0.5&#x27;</span>))<br>plt.text(-<span class="hljs-number">1</span>, np.cos(-<span class="hljs-number">1</span>), <span class="hljs-string">&#x27;cos(x)&#x27;</span>, family = <span class="hljs-string">&#x27;fantasy&#x27;</span>, fontsize = <span class="hljs-number">14</span>, style = <span class="hljs-string">&#x27;italic&#x27;</span>, color = <span class="hljs-string">&#x27;k&#x27;</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码2-23.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>x = np.arange(-<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">1</span>)          <span class="hljs-comment">#获得变量x和y的值</span><br>y = x**<span class="hljs-number">2</span><br><span class="hljs-comment">#绘制折线图</span><br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>), dpi = <span class="hljs-number">200</span>)<br>plt.plot(x, y, color = <span class="hljs-string">&#x27;r&#x27;</span>, linewidth = <span class="hljs-number">1.5</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, marker = <span class="hljs-string">&#x27;o&#x27;</span>, markersize = <span class="hljs-number">6</span>)<br>plt.xlim(-<span class="hljs-number">11</span>, <span class="hljs-number">11</span>)<br>plt.ylim(-<span class="hljs-number">3</span>, <span class="hljs-number">103</span>)<br>plt.xlabel(<span class="hljs-string">&quot;x&quot;</span>)                    <span class="hljs-comment">#设置X轴和Y轴标签</span><br>plt.ylabel(<span class="hljs-string">&quot;y&quot;</span>)<br>y_ticks = np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">101</span>, <span class="hljs-number">10</span>)      <span class="hljs-comment">#设置Y轴刻度</span><br>plt.yticks(y_ticks)<br>plt.title(<span class="hljs-string">u&#x27;折线图示例&#x27;</span>, fontproperties = <span class="hljs-string">&#x27;SimHei&#x27;</span>)     <span class="hljs-comment">#设置Title</span><br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码2-24.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>n = <span class="hljs-number">400</span>                         <span class="hljs-comment">#数据集的规模</span><br>point = np.random.randn(n, <span class="hljs-number">2</span>)<br><span class="hljs-comment">#绘制散点图</span><br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>), dpi = <span class="hljs-number">200</span>)<br>plt.scatter(point[:, <span class="hljs-number">0</span>], point[:, <span class="hljs-number">1</span>], s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;o&#x27;</span>, alpha = <span class="hljs-number">0.6</span>) <br>plt.xlim(-<span class="hljs-number">4</span>, <span class="hljs-number">4</span>)<br>plt.ylim(-<span class="hljs-number">4</span>, <span class="hljs-number">4</span>)<br>plt.xlabel(<span class="hljs-string">&quot;x&quot;</span>)                   <span class="hljs-comment">#设置X轴和Y轴标签</span><br>plt.ylabel(<span class="hljs-string">&quot;y&quot;</span>)<br>plt.title(<span class="hljs-string">u&#x27;散点图示例&#x27;</span>, fontproperties = <span class="hljs-string">&#x27;SimHei&#x27;</span>)  <br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码2-25.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment">#获得柱状图数据和标签</span><br>names = [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;陈六&#x27;</span>]<br>scores = [<span class="hljs-number">98</span>, <span class="hljs-number">67</span>, <span class="hljs-number">77</span>, <span class="hljs-number">56</span>]<br><span class="hljs-comment">#绘制柱状图</span><br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>), dpi = <span class="hljs-number">200</span>)<br>matplotlib.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]<br>plt.bar(x = names, height = scores, width = <span class="hljs-number">0.5</span>, color = <span class="hljs-string">&#x27;blue&#x27;</span>,<br>      edgecolor = <span class="hljs-string">&#x27;black&#x27;</span>, label = <span class="hljs-string">&#x27;成绩&#x27;</span>)<br><span class="hljs-keyword">for</span> xx, yy <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(names, scores):           <span class="hljs-comment">#绘制文本注释</span><br>    plt.text(xx, yy+<span class="hljs-number">1</span>, <span class="hljs-built_in">str</span>(yy))<br>plt.xlabel(<span class="hljs-string">&quot;姓名&quot;</span>)<br>plt.ylabel(<span class="hljs-string">&quot;分数&quot;</span>)<br>plt.title(<span class="hljs-string">u&#x27;柱状图示例&#x27;</span>, fontproperties = <span class="hljs-string">&#x27;SimHei&#x27;</span>)<br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码2-26.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> preprocessing<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> tree<br><span class="hljs-comment">#步骤1: 加载数据集</span><br>iris = datasets.load_iris()<br>n_samples, n_features = iris.data.shape<br>X = iris.data<br>Y = iris.target<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;步骤1：加载iris数据集&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;iris数据集中有%d个样本，%d个特征。&#x27;</span> % (n_samples, n_features))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;iris的前5个样本为:\n&#x27;</span>, X[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>])<br><span class="hljs-comment">#步骤2: 数据预处理</span><br>min_max_scaler = preprocessing.MinMaxScaler()<br>X_scale = min_max_scaler.fit_transform(X)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;步骤2：数据预处理&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;规范化后iris的前5个样本:\n&#x27;</span>, X_scale[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>])<br><span class="hljs-comment">#步骤3: 使用决策树算法构建分类器模型</span><br>classifier = tree.DecisionTreeClassifier()<br>classifier = classifier.fit(X, Y)   <span class="hljs-comment">#在训练集上训练</span><br>Y_predict = classifier.predict(X)  <span class="hljs-comment">#使用训练好的模型进行预测</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;步骤3：决策树模型构建…&#x27;</span>)<br><span class="hljs-comment">#步骤4:模型的评估</span><br>accuracy = (Y == Y_predict).<span class="hljs-built_in">sum</span>() / Y.shape[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;步骤4：模型评估&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;决策树在训练集上的分类准确度为: %.3f&quot;</span> % (accuracy*<span class="hljs-number">100</span>))<br><br><br><br><br><br><span class="hljs-comment"># ==== 代码3-1.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>iris = load_iris()<br>features = iris.data.T<br>plt.figure(figsize = (<span class="hljs-number">8</span>,<span class="hljs-number">6</span>), dpi=<span class="hljs-number">200</span>)<br>plt.scatter(features[<span class="hljs-number">2</span>], features[<span class="hljs-number">3</span>])       <span class="hljs-comment">#绘制散点图</span><br>plt.xlabel(iris.feature_names[<span class="hljs-number">2</span>])<br>plt.ylabel(iris.feature_names[<span class="hljs-number">3</span>])<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码3-2.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>iris = load_iris()<br>features = iris.data.T<br>plt.figure(figsize = (<span class="hljs-number">8</span>,<span class="hljs-number">6</span>), dpi = <span class="hljs-number">200</span>)<br>figure,axes = plt.subplots()                 <span class="hljs-comment">#得到画板、轴</span><br>axes.boxplot(features[<span class="hljs-number">1</span>], patch_artist = <span class="hljs-literal">True</span>)  <span class="hljs-comment">#描点上色</span><br>plt.ylabel(iris.feature_names[<span class="hljs-number">1</span>])<br>plt.show()                               <span class="hljs-comment">#图形展示</span><br><br><br><span class="hljs-comment"># ==== 代码3-3.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.style.use (<span class="hljs-string">&#x27;seaborn-white&#x27;</span>)    <span class="hljs-comment">#使用seaborn包设置white背景</span><br>iris = load_iris()<br>features = iris.data.T<br>data=np.rint(features[<span class="hljs-number">2</span>])        <span class="hljs-comment"># 四舍五入取整np.rint</span><br><span class="hljs-comment"># 也可以用其他取整方法</span><br><span class="hljs-comment"># 截取整数部分 np.trunc</span><br><span class="hljs-comment"># 向上取整 np.ceil</span><br><span class="hljs-comment"># 向下取整np.floor</span><br>plt.hist(data, bins = <span class="hljs-number">14</span>, density = <span class="hljs-literal">True</span>, color = <span class="hljs-string">&#x27;steelblue&#x27;</span>);<br><br><br><span class="hljs-comment"># ==== 代码3-4.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt  <br>iris = load_iris()<br>species = iris.target<br>cate_list = iris.target_names<br>lables, counts = np.unique(species, return_counts = <span class="hljs-literal">True</span>)<br>num_list = <span class="hljs-built_in">list</span>(counts)<br>num_list<br>plt.bar(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_list)), num_list)  <br>plt.xlabel(<span class="hljs-string">&quot;species&quot;</span>)              <span class="hljs-comment"># 指定X轴描述信息</span><br>plt.ylabel(<span class="hljs-string">&quot;numbers&quot;</span>)             <span class="hljs-comment"># 指定Y轴描述信息</span><br>plt.ylim(<span class="hljs-number">0</span>,<span class="hljs-number">60</span>)                   <span class="hljs-comment"># 指定Y轴的高度</span><br>idx = np.arange(<span class="hljs-built_in">len</span>(cate_list))<br>plt.xticks(idx,cate_list)<br>plt.show() <br><br><br><span class="hljs-comment"># ==== 代码3-5.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt  <br>iris = load_iris()<br>species = iris.target<br>cate_list = iris.target_names<br>lables, counts = np.unique(species, return_counts = <span class="hljs-literal">True</span>)<br>explode = [<span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>, <span class="hljs-number">0</span>]                      <span class="hljs-comment"># 用于突出显示一个品种</span><br>colors = [<span class="hljs-string">&#x27;#7FFFD4&#x27;</span>, <span class="hljs-string">&#x27;#458B74&#x27;</span>, <span class="hljs-string">&#x27;#FFE4C4&#x27;</span>]   <span class="hljs-comment">#自定义颜色</span><br>plt.axes(aspect=<span class="hljs-string">&#x27;equal&#x27;</span>)                 <span class="hljs-comment"># 将X,Y坐标轴标准化处理，设置饼图是正圆</span><br>plt.xlim(<span class="hljs-number">0</span>, <span class="hljs-number">3.8</span>)                           <span class="hljs-comment"># 控制X轴和Y轴的范围</span><br>plt.ylim(<span class="hljs-number">0</span>, <span class="hljs-number">3.8</span>)<br>plt.pie(x = counts,         <span class="hljs-comment"># 绘图数据</span><br>     explode = explode,    <span class="hljs-comment"># 用于突出显示一个品种</span><br>     labels = cate_list,     <span class="hljs-comment"># 添加鸢尾花品种标签</span><br>     colors = colors,       <span class="hljs-comment"># 设置饼图的自定义填充色</span><br>     autopct = <span class="hljs-string">&#x27;%0.1f%%&#x27;</span> )  <span class="hljs-comment"># 设置显示扇形所占的比例  </span><br>plt.show()                 <span class="hljs-comment"># 显示图形</span><br><br><br><span class="hljs-comment"># ==== 代码3-6.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br>iris = load_iris()<br>X_train, X_test, y_train, y_test  =  train_test_split(iris[<span class="hljs-string">&#x27;data&#x27;</span>], iris[<span class="hljs-string">&#x27;target&#x27;</span>], random_state=<span class="hljs-number">0</span>)<br>iris_dataframe = pd.DataFrame(X_train, columns = iris.feature_names)<br>grr = pd.plotting.scatter_matrix(iris_dataframe,<br>                        c = y_train,               <span class="hljs-comment"># 设置不同品种鸢尾花的颜色</span><br>                        alpha = <span class="hljs-number">.8</span>,<br>figsize = (<span class="hljs-number">15</span>,<span class="hljs-number">15</span>),<br>                        marker = <span class="hljs-string">&#x27;o&#x27;</span>,<br>                        hist_kwds = &#123;<span class="hljs-string">&#x27;bins&#x27;</span>:<span class="hljs-number">20</span>&#125;)     <span class="hljs-comment"># 频率直方图上的箱体数量</span><br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码3-7.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br>iris = load_iris()<br>features = pd.DataFrame(iris.data, columns = iris.feature_names)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;协方差的结果为:&#x27;</span>)<br><span class="hljs-built_in">print</span>(np.cov(features[<span class="hljs-string">&quot;petal length (cm)&quot;</span>], features[<span class="hljs-string">&quot;petal width (cm)&quot;</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;pearson相关系数的结果为:&#x27;</span>)<br><span class="hljs-built_in">print</span>(features.iloc[:, [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>]].corr(method = <span class="hljs-string">&quot;pearson&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;spearman相关系数的结果为:&#x27;</span>)<br><span class="hljs-built_in">print</span>(features.iloc[:, [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>]].corr(method = <span class="hljs-string">&quot;spearman&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;kendall相关系数的结果为:&#x27;</span>)<br><span class="hljs-built_in">print</span>(features.iloc[:, [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>]].corr(method = <span class="hljs-string">&quot;kendall&quot;</span>)) <br><br><br><span class="hljs-comment"># ==== 代码4-1.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>left = pd.DataFrame(&#123;<span class="hljs-string">&quot;A&quot;</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>], <span class="hljs-string">&quot;B&quot;</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>], <span class="hljs-string">&quot;C&quot;</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]&#125;)<br>right = pd.DataFrame(&#123;<span class="hljs-string">&quot;A&quot;</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>], <span class="hljs-string">&quot;B&quot;</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>], <span class="hljs-string">&quot;D&quot;</span>:[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]&#125;)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;左数据框对象: \n&quot;</span>, left)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;右数据框对象: \n&quot;</span>, right)<br>result1 = pd.merge(left, right, how = <span class="hljs-string">&quot;left&quot;</span>, on = [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>])    <span class="hljs-comment"># 左连接</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;（1）左连接数据结果: \n&quot;</span>, result1)<br>result2 = pd.merge(left, right, how = <span class="hljs-string">&quot;right&quot;</span>, on = [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>])   <span class="hljs-comment"># 右连接</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;（2）右连接数据结果: \n&quot;</span>, result2)<br>result3 = pd.merge(left, right, how = <span class="hljs-string">&quot;inner&quot;</span>, on = [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>])   <span class="hljs-comment"># 内连接</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;（3）内连接数据结果: \n&quot;</span>, result3)<br>result4 = pd.merge(left, right, how = <span class="hljs-string">&quot;outer&quot;</span>, on = [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>])   <span class="hljs-comment"># 外连接</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;（4）外连接数据结果: \n&quot;</span>, result4)<br><br><span class="hljs-comment"># ==== 代码4-2.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;张三&#x27;</span>],<br>        <span class="hljs-string">&#x27;语文&#x27;</span>: [ <span class="hljs-number">84</span>, <span class="hljs-number">92</span>, <span class="hljs-number">87</span>, <span class="hljs-number">84</span>],<br>    <span class="hljs-string">&#x27;数学&#x27;</span>: [ <span class="hljs-number">89</span>, <span class="hljs-number">90</span>, <span class="hljs-number">95</span>, <span class="hljs-number">89</span>],<br>        <span class="hljs-string">&#x27;英语&#x27;</span>: [ <span class="hljs-number">90</span>, <span class="hljs-number">81</span>, <span class="hljs-number">75</span>, <span class="hljs-number">92</span>],<br>    <span class="hljs-string">&#x27;计算机&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;检验重复的记录：\n&quot;</span>, df.duplicated(subset = [<span class="hljs-string">&#x27;姓名&#x27;</span>]))<br>df_drop = df.drop_duplicates(subset = [<span class="hljs-string">&#x27;姓名&#x27;</span>], keep = <span class="hljs-string">&#x27;first&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;去重的数据为：\n&quot;</span>, df_drop )<br><br><br><span class="hljs-comment"># ==== 代码4-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;张三&#x27;</span>],<br>    <span class="hljs-string">&#x27;语文&#x27;</span>: [ <span class="hljs-number">84</span>, <span class="hljs-number">92</span>, <span class="hljs-number">87</span>, <span class="hljs-number">84</span>],<br>    <span class="hljs-string">&#x27;数学&#x27;</span>: [ <span class="hljs-number">89</span>, <span class="hljs-number">90</span>, <span class="hljs-number">95</span>, <span class="hljs-number">89</span>],<br>        <span class="hljs-string">&#x27;英语&#x27;</span>: [ <span class="hljs-number">90</span>, <span class="hljs-number">81</span>, <span class="hljs-number">75</span>, <span class="hljs-number">92</span>],<br>    <span class="hljs-string">&#x27;计算机&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>],<br>    <span class="hljs-string">&#x27;计算机基础&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br><span class="hljs-built_in">print</span>(df.corr(method = <span class="hljs-string">&#x27;pearson&#x27;</span>))<br><br><br><span class="hljs-comment"># ==== 代码4-4.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;刘一&#x27;</span>],<br>        <span class="hljs-string">&#x27;语文&#x27;</span>: [ <span class="hljs-number">84</span>, <span class="hljs-number">92</span>, <span class="hljs-number">87</span>, <span class="hljs-number">84</span>],<br>    <span class="hljs-string">&#x27;数学&#x27;</span>: [ <span class="hljs-number">89</span>, np.NaN, <span class="hljs-number">95</span>, <span class="hljs-number">89</span>],<br>        <span class="hljs-string">&#x27;英语&#x27;</span>: [ <span class="hljs-number">90</span>, <span class="hljs-number">81</span>, np.NaN, <span class="hljs-number">92</span>],<br>    <span class="hljs-string">&#x27;计算机&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;成绩数据对象的特征缺失值情况:&#x27;</span>)<br><span class="hljs-built_in">print</span>(df.isnull().<span class="hljs-built_in">sum</span>())          <span class="hljs-comment">#判断每列是否有缺失值</span><br><br><br><span class="hljs-comment"># ==== 代码4-5.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;刘一&#x27;</span>],<br>        <span class="hljs-string">&#x27;语文&#x27;</span>: [ <span class="hljs-number">84</span>, <span class="hljs-number">92</span>, <span class="hljs-number">87</span>, <span class="hljs-number">84</span>],<br>        <span class="hljs-string">&#x27;数学&#x27;</span>: [ <span class="hljs-number">89</span>, pd.NA, <span class="hljs-number">95</span>, <span class="hljs-number">89</span>],<br>        <span class="hljs-string">&#x27;英语&#x27;</span>: [ <span class="hljs-number">90</span>, <span class="hljs-number">81</span>, pd.NA, <span class="hljs-number">92</span>],<br>    <span class="hljs-string">&#x27;计算机&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br>df.dropna(axis = <span class="hljs-number">0</span>, how = <span class="hljs-string">&#x27;any&#x27;</span>, inplace = <span class="hljs-literal">True</span>)       <span class="hljs-comment"># 删除所有包含缺失值的行</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;删除包含缺失值记录后的数据为：\n&#x27;</span>, df)<br><br><br><span class="hljs-comment"># ==== 代码4-6.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#生成包含缺失值的数据</span><br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>, <span class="hljs-string">&#x27;刘一&#x27;</span>],<br>    <span class="hljs-string">&#x27;语文&#x27;</span>: [ <span class="hljs-number">84</span>, <span class="hljs-number">92</span>, <span class="hljs-number">87</span>, <span class="hljs-number">84</span>],<br>        <span class="hljs-string">&#x27;数学&#x27;</span>: [ <span class="hljs-number">89</span>, pd.NA, <span class="hljs-number">95</span>, <span class="hljs-number">89</span>],<br>    <span class="hljs-string">&#x27;英语&#x27;</span>: [ <span class="hljs-number">90</span>, <span class="hljs-number">81</span>, pd.NA, <span class="hljs-number">92</span>],<br>        <span class="hljs-string">&#x27;计算机&#x27;</span>: [ <span class="hljs-number">85</span>, <span class="hljs-number">92</span>, <span class="hljs-number">90</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br><span class="hljs-comment"># 1.均值替换</span><br>df_mean = df[<span class="hljs-string">&#x27;数学&#x27;</span>].fillna(value = df[<span class="hljs-string">&#x27;数学&#x27;</span>].mean(), inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用均值替换: \n&#x27;</span>, df_mean)<br><span class="hljs-comment"># 2.中位数替换</span><br>df_median = df[<span class="hljs-string">&#x27;数学&#x27;</span>].fillna(df[<span class="hljs-string">&#x27;数学&#x27;</span>].median(), inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用中位数替换: \n&#x27;</span>, df_median)<br><span class="hljs-comment"># 3.使用固定值0替换</span><br>df_zero = df[<span class="hljs-string">&#x27;数学&#x27;</span>].fillna(value = <span class="hljs-number">0</span>, inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用0替换: \n&#x27;</span>,df_zero)<br><span class="hljs-comment"># 4.使用缺失值前一个值进行填充(按照相应index前后填充)</span><br>df_ffill = df[<span class="hljs-string">&#x27;数学&#x27;</span>].fillna(method = <span class="hljs-string">&#x27;ffill&#x27;</span>, inplace = <span class="hljs-literal">False</span>, axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用缺失值前一个值替换: \n&#x27;</span>, df_ffill)<br><span class="hljs-comment"># 5.使用缺失值后一个值进行填充(按照相应columns前后填充)</span><br>df_bfill = df[<span class="hljs-string">&#x27;数学&#x27;</span>].fillna(method = <span class="hljs-string">&#x27;bfill&#x27;</span>, inplace = <span class="hljs-literal">False</span>, axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用缺失值后一个值替换: \n&#x27;</span>, df_bfill)<br><span class="hljs-comment"># 6.使用线性插值法进行填充</span><br>df[<span class="hljs-string">&#x27;数学&#x27;</span>] = pd.to_numeric(df[<span class="hljs-string">&#x27;数学&#x27;</span>], errors = <span class="hljs-string">&#x27;coerce&#x27;</span>)<br>df_linear = df[<span class="hljs-string">&#x27;数学&#x27;</span>].interpolate(method = <span class="hljs-string">&#x27;linear&#x27;</span>, inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用线性插值法进行填充: \n&#x27;</span>, df_linear)<br><span class="hljs-comment"># 7.使用多项式插值插值法进行填充</span><br>df_poly = df[<span class="hljs-string">&#x27;数学&#x27;</span>].interpolate(method = <span class="hljs-string">&#x27;polynomial&#x27;</span>, order = <span class="hljs-number">2</span>, inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用多项式插值插值法进行填充: \n&#x27;</span>, df_poly)<br><span class="hljs-comment"># 8.使用样条插值法进行填充</span><br>df_spline = df[<span class="hljs-string">&#x27;数学&#x27;</span>].interpolate(method = <span class="hljs-string">&#x27;spline&#x27;</span>, order = <span class="hljs-number">2</span>, inplace = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;(6)使用样条插值法进行填充: \n&#x27;</span>, df_spline) <br><br><br><span class="hljs-comment"># ==== 代码4-7.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment">#生成原始数据</span><br>scores = &#123;<span class="hljs-string">&#x27;姓名&#x27;</span>: [<span class="hljs-string">&#x27;S1&#x27;</span>, <span class="hljs-string">&#x27;S2&#x27;</span>, <span class="hljs-string">&#x27;S3&#x27;</span>, <span class="hljs-string">&#x27;S4&#x27;</span>, <span class="hljs-string">&#x27;S5&#x27;</span>, <span class="hljs-string">&#x27;S6&#x27;</span>], <span class="hljs-string">&#x27;英语&#x27;</span>: [<span class="hljs-number">90</span>, <span class="hljs-number">81</span>, <span class="hljs-number">110</span>, <span class="hljs-number">92</span>, <span class="hljs-number">83</span>, <span class="hljs-number">85</span>]&#125;<br>df = pd.DataFrame(scores)<br><span class="hljs-comment"># 绘制箱线图</span><br>plt.figure(figsize = (<span class="hljs-number">8</span>, <span class="hljs-number">6</span>), dpi = <span class="hljs-number">200</span>)<br>axes = plt.boxplot(df[<span class="hljs-string">&#x27;英语&#x27;</span>], notch = <span class="hljs-literal">True</span>, patch_artist = <span class="hljs-literal">True</span>)        <span class="hljs-comment">#箱线图</span><br>outlier = axes[<span class="hljs-string">&#x27;fliers&#x27;</span>][<span class="hljs-number">0</span>].get_ydata()                          <span class="hljs-comment">#获取异常值</span><br>plt.show()                                               <span class="hljs-comment">#图形展示</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;异常值为：\n&#x27;</span>, outlier)<br><br><br><span class="hljs-comment"># ==== 代码4-8.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>iris = load_iris().data<br><span class="hljs-comment">#使用离差标准化对数据进行预处理</span><br>m_scaler = MinMaxScaler()              <span class="hljs-comment">#创建一个min-max规范化对象</span><br>iris_scale = m_scaler.fit_transform(iris)<br>iris_scale= pd.DataFrame(data = iris_scale,<br> columns = [<span class="hljs-string">&quot;petal_len&quot;</span>, <span class="hljs-string">&quot;petal_wid&quot;</span>, <span class="hljs-string">&quot;sepal_len&quot;</span>, <span class="hljs-string">&quot;sepal_wid&quot;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;规范化后的前5条iris数据:\n&quot;</span>,  iris_scale[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] )<br><br><br><span class="hljs-comment"># ==== 代码4-9.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler <br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>iris = load_iris().data<br><span class="hljs-comment">#使用标准差规范化对数据进行处理 </span><br>iris_scale = StandardScaler()                   <span class="hljs-comment">#创建一个标准差规范化对象</span><br>iris_scale = iris_scale.fit_transform(iris)<br>iris_scale= pd.DataFrame(data = iris_scale,<br> columns = [<span class="hljs-string">&quot;petal_len&quot;</span>, <span class="hljs-string">&quot;petal_wid&quot;</span>, <span class="hljs-string">&quot;sepal_len&quot;</span>, <span class="hljs-string">&quot;sepal_wid&quot;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;规范化后的前5条iris数据:\n&quot;</span>,  iris_scale[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] ) <br><br><span class="hljs-comment"># ==== 代码4-10.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>x = np.array([[ <span class="hljs-number">0.</span>, -<span class="hljs-number">3.</span>, <span class="hljs-number">1.</span>],              <span class="hljs-comment"># 初始化数据</span><br>           [ <span class="hljs-number">3.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],<br>           [ <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, -<span class="hljs-number">1.</span>]])<br>j = np.ceil(np.log10(np.<span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(x))))     <span class="hljs-comment"># 获取小数点移动最大位数</span><br>sc_C = x/(<span class="hljs-number">10</span>**j)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;标准化后的数据为: \n&#x27;</span>, sc_C)<br><br><br><span class="hljs-comment"># ==== 代码4-11.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> Binarizer<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>price= np.array([<span class="hljs-number">1000</span>, <span class="hljs-number">2530</span>, <span class="hljs-number">3500</span>, <span class="hljs-number">6000</span>, <span class="hljs-number">200</span>, <span class="hljs-number">8200</span>])<br>b = Binarizer(threshold = <span class="hljs-number">3000</span>)            <span class="hljs-comment">#创建二值化对象，阙值为3000</span><br>b_price = b.fit_transform(price.reshape(<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二值化后的价格:\n&quot;</span>, b_price)<br><br><br><span class="hljs-comment"># ==== 代码4-12.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment">#生成销量数据</span><br>sale_df = pd.DataFrame(&#123;<span class="hljs-string">&#x27;sale&#x27;</span>: [<span class="hljs-number">400</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">450</span>, <span class="hljs-number">500</span>, <span class="hljs-number">320</span>, <span class="hljs-number">160</span>, <span class="hljs-number">280</span>, <br>                          <span class="hljs-number">320</span>, <span class="hljs-number">380</span>, <span class="hljs-number">200</span>, <span class="hljs-number">460</span>]&#125;)<br><span class="hljs-comment"># 等宽离散化</span><br>sale_df[<span class="hljs-string">&#x27;sale_fixedwid&#x27;</span>] = pd.cut(sale_df[<span class="hljs-string">&quot;sale&quot;</span>], bins = <span class="hljs-number">3</span>)<br><span class="hljs-comment"># 等频离散化</span><br>sale_df[<span class="hljs-string">&#x27;sale_fixedfreq&#x27;</span>] = pd.qcut(sale_df[<span class="hljs-string">&quot;sale&quot;</span>], q = <span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(sale_df) <br><br><br><span class="hljs-comment"># ==== 代码4-13.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> OneHotEncoder,LabelEncoder<br><span class="hljs-comment">#原始数据</span><br>weather_df = pd.DataFrame(&#123;<span class="hljs-string">&#x27;天气&#x27;</span>: [<span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;雨天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>], <span class="hljs-string">&#x27;销量&#x27;</span>: [<span class="hljs-number">400</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">450</span>]&#125;)<br><span class="hljs-comment">#独热编码</span><br>oneHot_weather = OneHotEncoder().fit_transform(weather_df[[<span class="hljs-string">&quot;天气&quot;</span>]])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;独热编码的结果为：&#x27;</span>)<br><span class="hljs-built_in">print</span>(oneHot_weather)<br><span class="hljs-comment">#哑变量编码</span><br>dummy_weather = pd.get_dummies(weather_df[[<span class="hljs-string">&quot;天气&quot;</span>]], drop_first = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;哑变量的结果为：&#x27;</span>)<br><span class="hljs-built_in">print</span>(dummy_weather)<br><span class="hljs-comment">#标签编码</span><br>label_weather = LabelEncoder().fit_transform(weather_df[[<span class="hljs-string">&quot;天气&quot;</span>]])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;标签编码的结果为：&#x27;</span>)<br><span class="hljs-built_in">print</span>(label_weather)<br><br><br><span class="hljs-comment"># ==== 代码4-14.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>sale_df = pd.DataFrame(<br>&#123;<span class="hljs-string">&#x27;weather&#x27;</span>: [<span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;雨天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;雨天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>,<span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;雨天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;阴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>, <span class="hljs-string">&#x27;晴天&#x27;</span>],<br><span class="hljs-string">&#x27;sale&#x27;</span>:[<span class="hljs-number">400</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">450</span>, <span class="hljs-number">620</span>, <span class="hljs-number">325</span>, <span class="hljs-number">170</span>, <span class="hljs-number">280</span>, <span class="hljs-number">710</span>, <span class="hljs-number">330</span>, <span class="hljs-number">500</span>, <span class="hljs-number">320</span>, <span class="hljs-number">160</span>, <span class="hljs-number">280</span>, <span class="hljs-number">175</span>, <span class="hljs-number">240</span>, <span class="hljs-number">605</span>, <span class="hljs-number">270</span>, <span class="hljs-number">250</span>, <span class="hljs-number">510</span>, <span class="hljs-number">320</span>, <span class="hljs-number">380</span>, <span class="hljs-number">200</span>, <span class="hljs-number">460</span>, <span class="hljs-number">380</span>, <span class="hljs-number">420</span>, <span class="hljs-number">560</span>, <span class="hljs-number">80</span>, <span class="hljs-number">240</span>, <span class="hljs-number">630</span>]&#125;<br>)<br><span class="hljs-comment">#1.简单随机抽样</span><br>random_sample = sale_df.sample(<span class="hljs-number">10</span>, random_state = <span class="hljs-number">124</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;简单随机抽样方法的结果：\n&#x27;</span>, random_sample)<br><span class="hljs-comment">#2.分层抽样</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> StratifiedShuffleSplit<br>split = StratifiedShuffleSplit(n_splits = <span class="hljs-number">1</span>, train_size = <span class="hljs-number">10</span>, random_state = <span class="hljs-number">124</span>)<br><span class="hljs-keyword">for</span> train_index, test_index <span class="hljs-keyword">in</span> split.split(sale_df, sale_df[<span class="hljs-string">&#x27;weather&#x27;</span>]):<br>    strat_sample_set = sale_df.loc[train_index]<br>    strat_test_set = sale_df.loc[test_index] <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;分层抽样方法的结果：\n&#x27;</span>, strat_sample_set)<br><br><br><span class="hljs-comment"># ==== 代码4-15.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_iris<br><span class="hljs-keyword">from</span> sklearn.decomposition <span class="hljs-keyword">import</span> PCA<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><span class="hljs-keyword">from</span> sklearn.discriminant_analysis <span class="hljs-keyword">import</span> LinearDiscriminantAnalysis<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br>iris = load_iris()<br>X = iris.data<br>y = iris.target<br>sc = StandardScaler()<br>X_scaled = sc.fit_transform(X)<br>pca = PCA(n_components = <span class="hljs-number">2</span>)<br>X_pca = pca.fit_transform(X_scaled)<br>lda = LinearDiscriminantAnalysis(n_components = <span class="hljs-number">2</span>, solver = <span class="hljs-string">&#x27;svd&#x27;</span>)<br>X_lda = lda.fit_transform(X, y)<br>fig, ax = plt.subplots(nrows = <span class="hljs-number">1</span>, ncols = <span class="hljs-number">2</span>, figsize = (<span class="hljs-number">13.5</span> ,<span class="hljs-number">4</span>))<br>sns.scatterplot(X_pca[:, <span class="hljs-number">0</span>], X_pca[:, <span class="hljs-number">1</span>], hue = y, palette = <span class="hljs-string">&#x27;Set1&#x27;</span>, ax = ax[<span class="hljs-number">0</span>])<br>sns.scatterplot(X_lda[:, <span class="hljs-number">0</span>], X_lda[:, <span class="hljs-number">1</span>], hue = y, palette = <span class="hljs-string">&#x27;Set1&#x27;</span>, ax = ax[<span class="hljs-number">1</span>])<br>ax[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">&quot;PCA of IRIS dataset&quot;</span>, fontsize = <span class="hljs-number">15</span>, pad = <span class="hljs-number">15</span>)<br>ax[<span class="hljs-number">1</span>].set_title(<span class="hljs-string">&quot;LDA of IRIS dataset&quot;</span>, fontsize = <span class="hljs-number">15</span>, pad = <span class="hljs-number">15</span>)<br>ax[<span class="hljs-number">0</span>].set_xlabel(<span class="hljs-string">&quot;PC1&quot;</span>, fontsize = <span class="hljs-number">12</span>)<br>ax[<span class="hljs-number">0</span>].set_ylabel(<span class="hljs-string">&quot;PC2&quot;</span>, fontsize = <span class="hljs-number">12</span>)<br>ax[<span class="hljs-number">1</span>].set_xlabel(<span class="hljs-string">&quot;LD1&quot;</span>, fontsize = <span class="hljs-number">12</span>)<br>ax[<span class="hljs-number">1</span>].set_ylabel(<span class="hljs-string">&quot;LD2&quot;</span>, fontsize = <span class="hljs-number">12</span>)<br>plt.savefig(<span class="hljs-string">&#x27;PCA vs LDA.png&#x27;</span>, dpi = <span class="hljs-number">80</span>)<br><br><br><span class="hljs-comment"># ==== 代码5-1.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> VarianceThreshold<br><span class="hljs-comment">#模拟数据集</span><br>X = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>]]) <br>selector = VarianceThreshold(<span class="hljs-number">1.0</span>)         <span class="hljs-comment">#阈值设置为1</span><br>selector.fit(X)                         <span class="hljs-comment">#训练</span><br>transformed_X = selector.transform(X)     <span class="hljs-comment"># 特征选择</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征的方差:&quot;</span>, selector.variances_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征选择后的数据集&quot;</span>, transformed_X)<br><br><br><span class="hljs-comment"># ==== 代码5-2.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> chi2<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest<br><span class="hljs-comment"># 模拟数据集</span><br>X = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">7</span>]]) <br>Y = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>])<br>selector = SelectKBest(chi2, k = <span class="hljs-number">2</span>) <br>selector.fit(X, Y)                      <span class="hljs-comment"># 训练</span><br>transformed_X = selector.transform(X)    <span class="hljs-comment"># 特征选择</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征的卡方统计量值：&quot;</span>, selector.scores_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征选择后的数据集：&quot;</span>, transformed_X)<br><br><br><span class="hljs-comment"># ==== 代码5-3.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> mutual_info_classif<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest<br>X = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>]]) <br>Y = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>])<br>selector = SelectKBest(mutual_info_classif, k = <span class="hljs-number">2</span>) <br>selector.fit(X, Y)                            <span class="hljs-comment"># 训练</span><br>transformed_X = selector.transform(X)          <span class="hljs-comment"># 特征选择</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征和目标变量的互信息值：&quot;</span>, selector.scores_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征选择后的数据集：&quot;</span>, transformed_X)<br><br><br><span class="hljs-comment"># ==== 代码5-4.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> f_classif<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest<br>X = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>]])<br>Y = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>])<br>selector = SelectKBest(f_classif, k = <span class="hljs-number">2</span>)<br>selector.fit(X, Y)                        <span class="hljs-comment"># 训练</span><br>transformed_X = selector.transform(X)      <span class="hljs-comment"># 特征选择</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征F-统计量值：&quot;</span>, selector.scores_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征选择后的数据集：&quot;</span>, transformed_X)<br><br><br><span class="hljs-comment"># ==== 代码5-5.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> tarfile<br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> pearsonr<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">with</span> tarfile.<span class="hljs-built_in">open</span>(mode=<span class="hljs-string">&quot;r:gz&quot;</span>, name=<span class="hljs-string">&#x27;cal_housing.tgz&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    cal_housing= np.loadtxt(f.extractfile(<span class="hljs-string">&#x27;CaliforniaHousing/cal_housing.data&#x27;</span>),delimiter=<span class="hljs-string">&#x27;,&#x27;</span>)<br>cols=[<span class="hljs-string">&#x27;longitude&#x27;</span>, <span class="hljs-string">&#x27;latitude&#x27;</span>, <span class="hljs-string">&#x27;housingMedianAge&#x27;</span>, <span class="hljs-string">&#x27;totalRooms&#x27;</span>, <span class="hljs-string">&#x27;totalBedrooms&#x27;</span>, <span class="hljs-string">&#x27;population&#x27;</span>, <span class="hljs-string">&#x27;households&#x27;</span>, <span class="hljs-string">&#x27;medianIncome&#x27;</span>] <br>X=cal_housing[:,<span class="hljs-number">0</span>:<span class="hljs-number">8</span>]<br>Y=cal_housing[: ,<span class="hljs-number">8</span>]<br><span class="hljs-comment">#封装的皮尔森相关系数计算函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ud_pearsonr</span>(<span class="hljs-params">X, y</span>):  <br>    result = np.array([pearsonr(x, y) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> X.T])     <span class="hljs-comment">#返回皮尔森相关系数, p值</span><br>    <span class="hljs-keyword">return</span> np.absolute(result[:, <span class="hljs-number">0</span>]), result[:, <span class="hljs-number">1</span>] <br>selector = SelectKBest(ud_pearsonr, k = <span class="hljs-number">4</span>) <br>selector.fit(X,Y)                                 <span class="hljs-comment"># 训练</span><br>transformed_X = selector.transform(X) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征的皮尔森相关系数值:\n&quot;</span>, pd.Series(selector.scores_, index=cols))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择的特征为：\n&quot;</span>, np.array(cols)[selector.get_support(indices=<span class="hljs-literal">True</span>)])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特征选择后的数据集：\n&quot;</span>, transformed_X)<br><br><br><span class="hljs-comment"># ==== 代码5-6.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> mrmr <span class="hljs-keyword">import</span> mrmr_classif<br>X = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>]]) <br>Y = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>])<br>X = pd.DataFrame(X, columns=[<span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>])<br>F = mrmr_classif(X = X, y = Y, K = <span class="hljs-number">2</span>)       <span class="hljs-comment">#特征选择                            </span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择的特征索引为：&quot;</span>, F)<br><br><br><span class="hljs-comment"># ==== 代码5-7.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_wine               <span class="hljs-comment"># 导入红酒数据集</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split <br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> VarianceThreshold, chi2, SelectKBest<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> mutual_info_classif,f_classif<br><span class="hljs-keyword">from</span> mrmr <span class="hljs-keyword">import</span> mrmr_classif<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier <span class="hljs-keyword">as</span> DTC<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment"># 1. 获得数据</span><br>wine = load_wine()<br>X, Y = wine.data, wine.target<br>num_class = <span class="hljs-number">5</span>                            <span class="hljs-comment">#待选取的特征子集的大小</span><br><span class="hljs-comment"># 2. 特征选择过程</span><br>vt_sel = VarianceThreshold(<span class="hljs-number">1.0</span>)            <span class="hljs-comment">#方差阈值法（阈值为1）</span><br>vt_sel.fit(X) <br>vt_trans_X = vt_sel.transform(X) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;方差阈值法选择的特征：&quot;</span>, vt_sel.get_support(<span class="hljs-literal">True</span>))<br>chi_sel = SelectKBest(chi2, k=num_class)    <span class="hljs-comment"># 卡方统计量法</span><br>chi_sel.fit(X, Y)  <br>chi_trans_X = chi_sel.transform(X)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;卡方统计量方法选择的特征：&quot;</span>, chi_sel.get_support(<span class="hljs-literal">True</span>))<br>mi_sel = SelectKBest(mutual_info_classif, k = num_class)       <span class="hljs-comment"># 互信息法</span><br>mi_sel.fit(X, Y)  <br>mi_trans_X = mi_sel.transform(X)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;互信息法选择的特征：&quot;</span>, mi_sel.get_support(<span class="hljs-literal">True</span>))<br>F_sel = SelectKBest(f_classif, k =  num_class)                <span class="hljs-comment"># F统计量法</span><br>F_sel.fit(X, Y)  <br>F_trans_X = F_sel.transform(X) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;F统计量法选择的特征：&quot;</span>, F_sel.get_support(<span class="hljs-literal">True</span>))<br>dfX = pd.DataFrame(X, columns = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(wine.feature_names))])<br>F = mrmr_classif(dfX, Y, num_class)          <span class="hljs-comment">#mRMR方法</span><br>mrmr_trans_X = X[:, F]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;mRMR方法选择的特征：&quot;</span>, np.sort(F).tolist( ))<br><span class="hljs-comment"># 3. 函数：调用统一的决策树分类模型</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ClassifyingModel</span>(<span class="hljs-params">X, Y</span>):<br>    <span class="hljs-comment"># 分割数据集</span><br>    X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = <span class="hljs-number">9</span>)<br>    tree = DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)  <span class="hljs-comment"># 决策树模型</span><br>    tree.fit(X_train, y_train)<br>    score = tree.score(X_test, y_test, sample_weight = <span class="hljs-literal">None</span>)           <span class="hljs-comment"># 计算测试精度</span><br>    <span class="hljs-keyword">return</span> score<br><span class="hljs-comment"># 4. 不同特征选择结果能达到的测试精度(accuracy)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;决策树模型在不同的特征选择方法选取的子集上取得的测试精度：&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;方差阈值法：&quot;</span>, ClassifyingModel(vt_trans_X, Y))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;卡方统计量法：&quot;</span>, ClassifyingModel(chi_trans_X, Y))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;互信息法：&quot;</span>, ClassifyingModel(mi_trans_X, Y))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;F统计量法：&quot;</span>, ClassifyingModel(F_trans_X, Y))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;mRMR法：&quot;</span>, ClassifyingModel(mrmr_trans_X, Y))<br><br><br><span class="hljs-comment"># ==== 代码5-8.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_wine <br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier <span class="hljs-keyword">as</span> DTC<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> RFE, RFECV<br><span class="hljs-comment"># 1. 获得数据</span><br>wine = load_wine()<br>X,Y = wine.data, wine.target<br>X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = <span class="hljs-number">9</span>)<br><span class="hljs-comment">#2. RFE特征选择结果</span><br>tree = DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)     <span class="hljs-comment">#决策树模型</span><br>RFE_selector = RFE(estimator = tree, n_features_to_select = <span class="hljs-number">5</span>, step = <span class="hljs-number">1</span>) <br>RFE_selector.fit(X_train, y_train)                                 <span class="hljs-comment">#训练</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RFE选择的特征&quot;</span>, RFE_selector.get_support(<span class="hljs-literal">True</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RFE方法选取特征所获得的测试精度&quot;</span>, RFE_selector.score(X_test, y_test))<br><span class="hljs-comment">#3. RFECV特征选择结果</span><br>RFECV_selector = RFECV(estimator = tree, cv = <span class="hljs-number">5</span>, step = <span class="hljs-number">1</span>) <br>RFECV_selector.fit(X_train, y_train)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RFECV选择的特征&quot;</span>, RFECV_selector.get_support(<span class="hljs-literal">True</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;RFECV方法选取特征所获得的测试精度&quot;</span>, RFECV_selector.score(X_test, y_test))<br><br><br><span class="hljs-comment"># ==== 代码5-9.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SequentialFeatureSelector<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_wine <br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier <span class="hljs-keyword">as</span> DTC<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <br><span class="hljs-comment">#辅助函数：特征子集的性能评价函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">evaluate_select_subset</span>(<span class="hljs-params">Xtrain, y_train, X_test, y_test, feature_index</span>):<br>    Xtrain= X_train[: , feature_index]<br>    Xtest= X_test[: , feature_index]<br>    tree =DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)<br>    tree.fit(Xtrain, y_train)  <br>    <span class="hljs-keyword">return</span> tree.score(Xtest, y_test)<br><span class="hljs-comment"># 1. 获得数据</span><br>wine = load_wine()<br>X, Y = wine.data, wine.target<br>X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = <span class="hljs-number">9</span>)<br><span class="hljs-comment">#2. SFS特征选择结果</span><br>tree =DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)     <span class="hljs-comment">#决策树模型</span><br>SFS_selector = SequentialFeatureSelector(estimator = tree, <br>                            n_features_to_select = <span class="hljs-number">5</span>, direction = <span class="hljs-string">&#x27;forward&#x27;</span>) <br>SFS_selector.fit(X_train, y_train)                                <span class="hljs-comment"># 训练</span><br>sd_feat = SFS_selector.get_support(<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SFS选择的特征&quot;</span>, SFS_selector.get_support(<span class="hljs-literal">True</span>))  <br>SFS_score = evaluate_select_subset(X_train, y_train, X_test, y_test, sd_feat)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SFS选择的特征子集上获得的测试精度：&quot;</span>, SFS_score)<br><span class="hljs-comment">#2. SBS特征选择结果</span><br>tree = DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)     <span class="hljs-comment">#决策树模型</span><br>SBS_selector = SequentialFeatureSelector(estimator = tree, <br>                            n_features_to_select = <span class="hljs-number">5</span>, direction = <span class="hljs-string">&#x27;backward&#x27;</span>) <br>SBS_selector.fit(X_train, y_train)                                 <span class="hljs-comment"># 训练</span><br>sd_feat = SBS_selector.get_support(<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SBS选择的特征&quot;</span>, SBS_selector.get_support(<span class="hljs-literal">True</span>))<br>SBS_score = evaluate_select_subset(X_train, y_train, X_test, y_test, sd_feat)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SBS选择的特征子集上获得的测试精度：&quot;</span>, SBS_score)<br><br><span class="hljs-comment"># ==== 代码5-10.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_wine  <br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectFromModel<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LogisticRegression<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br><span class="hljs-comment"># 1. 获得数据</span><br>wine = load_wine()<br>X,Y = wine.data, wine.target<br><span class="hljs-comment">#对X进行规范化</span><br>normalize_model = StandardScaler().fit(X) <br>X=normalize_model.transform(X)<br>X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = <span class="hljs-number">9</span>)<br><span class="hljs-comment">#2. L1正则化Logitsitc回归模型进行特征选择</span><br><span class="hljs-comment">#logistic分类模型: 正则参数C控制正则效果的大小，C越大，正则效果越弱</span><br>logistic_model = LogisticRegression(penalty = <span class="hljs-string">&#x27;l1&#x27;</span>, C = <span class="hljs-number">0.5</span>, solver = <span class="hljs-string">&#x27;liblinear&#x27;</span>,<br>                                   random_state = <span class="hljs-number">1234</span>)<br><span class="hljs-comment">#嵌入式特征选择模型</span><br>selector = SelectFromModel(estimator = logistic_model, max_features = <span class="hljs-number">5</span>)<br>selector.fit(X_train, y_train)<br><span class="hljs-comment">#特征选择结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;L1正则嵌入法选择的特征：&quot;</span>, selector.get_support(<span class="hljs-literal">True</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;L1正则化Logistic回归模型获得的测试精度&quot;</span>,<br>      selector.estimator_.score(X_test, y_test))<br><br><br><span class="hljs-comment"># ==== 代码5-11.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_wine <br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split  <br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectFromModel<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier <span class="hljs-keyword">as</span> DTC<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment"># 1. 获得数据</span><br>wine = load_wine()<br>X,Y = wine.data, wine.target<br>X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = <span class="hljs-number">9</span>)<br><span class="hljs-comment">#2. 决策树模型进行嵌入式特征选择</span><br>tree = DTC(criterion = <span class="hljs-string">&quot;entropy&quot;</span>, max_depth = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">9</span>)      <span class="hljs-comment">#决策树模型</span><br><span class="hljs-comment">#嵌入式特征选择</span><br>selector = SelectFromModel(estimator = tree, threshold = <span class="hljs-string">&#x27;mean&#x27;</span>)<br>selector.fit(X_train, y_train)<br><span class="hljs-comment">#特征选择结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;决策树嵌入法选择的特征：&quot;</span>, selector.get_support(<span class="hljs-literal">True</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;决策树输出的特征重要性系数&quot;</span>,   <br>np.<span class="hljs-built_in">round</span>(selector.estimator_.feature_importances_, <span class="hljs-number">3</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;决策树嵌入法获得的测试精度&quot;</span>, selector.estimator_.score(X_test, y_test))<br><br><span class="hljs-comment"># ==== 代码6-1.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.naive_bayes <span class="hljs-keyword">import</span> GaussianNB<br><span class="hljs-comment">#1. 读入数据</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. 训练高斯朴素贝叶斯模型</span><br>gnb = GaussianNB()<br>gnb.fit(X_train, y_train)<br><span class="hljs-comment"># 3. 评估模型</span><br>y_pred = gnb.predict(X_test)<br>acc = gnb.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;GaussianNB模型的准确度: %s&#x27;</span>%acc)<br>y_pred = gnb.predict_proba(X_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据对象0的预测结果（概率）:&#x27;</span>, y_pred[<span class="hljs-number">0</span>])<br><br><br><span class="hljs-comment"># ==== 代码6-2.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.naive_bayes <span class="hljs-keyword">import</span> MultinomialNB<br><span class="hljs-comment"># 1. 读入数据</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df[[<span class="hljs-string">&#x27;Family&#x27;</span>, <span class="hljs-string">&#x27;Education&#x27;</span>, <span class="hljs-string">&#x27;Securities Account&#x27;</span>, <br><span class="hljs-string">&#x27;CD Account&#x27;</span>, <span class="hljs-string">&#x27;Online&#x27;</span>, <span class="hljs-string">&#x27;CreditCard&#x27;</span>]]              <span class="hljs-comment">#只选用6个特征</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. 训练多项式朴素贝叶斯模型</span><br>mnb = MultinomialNB()<br>mnb.fit(X_train, y_train)<br>acc = mnb.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;MultinomialNB模型的准确度: %s&#x27;</span>%acc)<br><br><br><span class="hljs-comment"># ==== 代码6-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.naive_bayes <span class="hljs-keyword">import</span> MultinomialNB<br><span class="hljs-keyword">from</span> sklearn.naive_bayes <span class="hljs-keyword">import</span> GaussianNB<br><span class="hljs-comment"># 1. 读入数据，建立两个数据集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>df = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>ccol = [<span class="hljs-string">&#x27;Family&#x27;</span>, <span class="hljs-string">&#x27;Education&#x27;</span>, <span class="hljs-string">&#x27;Securities Account&#x27;</span>, <br><span class="hljs-string">&#x27;CD Account&#x27;</span>, <span class="hljs-string">&#x27;Online&#x27;</span>, <span class="hljs-string">&#x27;CreditCard&#x27;</span>]           <span class="hljs-comment">#类别特征的索引</span><br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X_mul = df[ccol]                                  <span class="hljs-comment">#多项式朴素贝叶斯使用的数据</span><br>X_gau = df.drop(ccol + [<span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)       <span class="hljs-comment">#高斯朴素贝叶斯使用的数据</span><br>X_mul_train, X_mul_test,X_gau_train, X_gau_test, y_train, y_test =\<br> train_test_split(X_mul, X_gau, y, test_size=<span class="hljs-number">0.1</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment"># 2. 使用类别特征训练多项式朴素贝叶斯分类器</span><br>mnb = MultinomialNB()<br>mnb.fit(X_mul_train, y_train)<br>m_train_pred = mnb.predict_proba(X_mul_train)<br>m_test_pred = mnb.predict_proba(X_mul_test)<br>acc=mnb.score(X_mul_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;MultinomialNB模型的准确度: %s&#x27;</span>%acc)<br><span class="hljs-comment"># 3. 使用数值特征训练高斯朴素贝叶斯模型</span><br>gnb = GaussianNB()<br>gnb.fit(X_gau_train, y_train)<br>g_train_pred = gnb.predict_proba(X_gau_train)<br>g_test_pred = gnb.predict_proba(X_gau_test)<br>acc = gnb.score(X_gau_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;GaussianNB模型的准确度: %s&#x27;</span>%acc)<br><span class="hljs-comment"># 4. 集成两个模型</span><br>acc=<span class="hljs-built_in">sum</span>(((m_test_pred[: , <span class="hljs-number">1</span>] + g_test_pred[ : , <span class="hljs-number">1</span>]) &gt;= <span class="hljs-number">1</span>) == (y_test == <span class="hljs-number">1</span>)) / <span class="hljs-built_in">len</span>(y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;集成模型的准确度: %s&#x27;</span>%acc)<br><br><br><span class="hljs-comment"># ==== 代码6-4.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neighbors <span class="hljs-keyword">import</span> KNeighborsClassifier<br><span class="hljs-comment"># 1. 建立数据集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br>n_neighbors = <span class="hljs-number">5</span>                                <span class="hljs-comment">#K值</span><br><span class="hljs-comment"># 2. 采用两种weights参数建立KNN模型，并评估</span><br><span class="hljs-keyword">for</span> weights <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;uniform&#x27;</span>, <span class="hljs-string">&#x27;distance&#x27;</span>]:<br>    knn = KNeighborsClassifier(n_neighbors, weights = weights)<br>    knn.fit(X_train, y_train)<br>    acc = knn.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s 准确度:  %s&#x27;</span>%(weights, acc))<br><br><br><span class="hljs-comment"># ==== 代码6-5.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br>np.random.seed(<span class="hljs-number">10</span>)<br><span class="hljs-comment"># 1. 建立数据集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. 使用默认参数训练CART模型</span><br>model1 = DecisionTreeClassifier()<br>model2 = model1.fit(X_train, y_train)<br>acc1 = model1.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;默认参数的CART决策树的准确度: \n&#x27;</span>, acc1)<br><span class="hljs-comment"># 3. 设置sample_weight参数后训练CART模型</span><br>sample_weight = np.ones((y_train.shape[<span class="hljs-number">0</span>],))<br>sample_weight[y_train == <span class="hljs-number">1</span>] = np.ceil(<span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">1</span>))<br>model2 = DecisionTreeClassifier(max_depth = <span class="hljs-number">10</span>)   <span class="hljs-comment">#设置模型的max_depth参数</span><br>model2 = model2.fit(X_train, y_train, sample_weight)<br>acc2 = model2.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;设置参数后的CART决策树的准确度:\n&#x27;</span>, acc2)<br><span class="hljs-comment">#4. 可视化决策树</span><br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> export_graphviz<br><span class="hljs-keyword">import</span> graphviz<br>dot_data = export_graphviz(model2, out_file = <span class="hljs-literal">None</span>,<br>                           feature_names = X.columns,<br>                           class_names=[<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>],<br>                           filled=<span class="hljs-literal">True</span>)  <span class="hljs-comment">#指定是否为节点上色</span><br>graph = graphviz.Source(dot_data)<br>graph.render(<span class="hljs-string">r&#x27;wine&#x27;</span>)<br>graph.view() <br><br><br><span class="hljs-comment"># ==== 代码6-6.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span>  sklearn.neural_network <span class="hljs-keyword">import</span> MLPClassifier<br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#构建BP神经网络模型</span><br>model = MLPClassifier(hidden_layer_sizes = (<span class="hljs-number">1000</span>, <span class="hljs-number">10</span>), activation = <span class="hljs-string">&#x27;logistic&#x27;</span>, verbose = <span class="hljs-number">1</span>)<br>model.fit(X_train, y_train)<br>acc = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;BP神经网络的准确度：%s&#x27;</span>%acc)<br><br><br><span class="hljs-comment"># ==== 代码6-7.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> make_pipeline<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVC, NuSVC<br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment"># 1. 在规范化数据集上训练SVC模型</span><br>model = make_pipeline(StandardScaler(), SVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, C=<span class="hljs-number">3</span>, class_weight=&#123;<span class="hljs-number">0</span>:<span class="hljs-number">1</span>,<span class="hljs-number">1</span>:<span class="hljs-number">2</span>&#125;))<br>model.fit(X_train, y_train)<br>acc = model.score(X_test,y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;在规范化数据集上训练SVC模型的准确度: \n&#x27;</span>, acc)<br><span class="hljs-comment"># 2. 在未规范化数据集上训练SVC模型</span><br>model = SVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, C = <span class="hljs-number">3</span>)<br>model.fit(X_train, y_train)<br>acc = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;在未规范化数据集上训练SVC模型的准确度:\n&#x27;</span>, acc)<br><span class="hljs-comment"># 3. 在规范化数据集上训练Nu-SVC模型</span><br>model = make_pipeline(StandardScaler(), NuSVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, nu = <span class="hljs-number">0.07</span>, <br>class_weight = <span class="hljs-string">&#x27;balanced&#x27;</span>))<br>model.fit(X_train, y_train)<br>acc = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;在规范化数据集上训练Nu-SVC模型的准确度: \n&#x27;</span>, acc)<br><br><br><span class="hljs-comment"># ==== 代码6-8.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neighbors <span class="hljs-keyword">import</span> KNeighborsClassifier<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> KFold<br><span class="hljs-comment"># 1. 准备数据集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df[[<span class="hljs-string">&#x27;Age&#x27;</span>, <span class="hljs-string">&#x27;Experience&#x27;</span>,<span class="hljs-string">&#x27;Income&#x27;</span>, <span class="hljs-string">&#x27;CCAvg&#x27;</span>, <span class="hljs-string">&#x27;Mortgage&#x27;</span>]]<br>n_neighbors = <span class="hljs-number">5</span><br>X2 = np.array(X)   <br>y2 = np.array(y)<br><span class="hljs-comment">#2. 在5折交叉验证数据集上测试KNN的准确度</span><br>kf = KFold(n_splits = <span class="hljs-number">5</span>)<br>acc = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> train_index, test_index <span class="hljs-keyword">in</span> kf.split(X2):<br>    knn = KNeighborsClassifier(n_neighbors)         <span class="hljs-comment">#构建KNN分类模型</span><br>    knn.fit(X2[train_index], y2[train_index])<br>    acc += knn.score(X2[test_index], y2[test_index])  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用KFold实现交叉验证计算KNN的准确度: %s&#x27;</span>% (acc/kf.get_n_splits()))<br><span class="hljs-comment">#3. 使用cross_val_score函数实现5折交叉验证，计算KNN的准确度</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> cross_val_score<br>knn = KNeighborsClassifier(n_neighbors)   <br>acc = cross_val_score(knn, X, y, cv = <span class="hljs-number">5</span>)  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用cross_val_score实现交叉验证计算KNN的准确度：%s&#x27;</span>% np.mean(acc))<br><br><br><span class="hljs-comment"># ==== 代码6-9.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>f_train = <span class="hljs-string">&#x27;cs-training.csv&#x27;</span><br>f_test = <span class="hljs-string">&#x27;cs-test.csv&#x27;</span><br>f_target = <span class="hljs-string">&#x27;sampleEntry.csv&#x27;</span><br>df_train = pd.read_csv(f_train, header = <span class="hljs-number">0</span>)<br>df_test = pd.read_csv(f_test, header = <span class="hljs-number">0</span>)<br>df_target = pd.read_csv(f_target, header = <span class="hljs-number">0</span>)<br>df_train = df_train.iloc[:, <span class="hljs-number">1</span>:]<br>df_test = df_test.iloc[:, <span class="hljs-number">1</span>:]<br><span class="hljs-comment"># 类的分布情况</span><br>pos = <span class="hljs-built_in">sum</span>(df_train[<span class="hljs-string">&#x27;SeriousDlqin2yrs&#x27;</span>] &gt; <span class="hljs-number">0.5</span>)<br>neg = <span class="hljs-built_in">len</span>(df_train) - pos<br>plt.figure(figsize=(<span class="hljs-number">14</span>,<span class="hljs-number">10</span>))<br><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&#x27;POS&#x27;</span>: pos, <span class="hljs-string">&#x27;NEG&#x27;</span>: neg&#125;<br>size = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">dict</span>)<br><span class="hljs-keyword">for</span> i, key <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(<span class="hljs-built_in">dict</span>): <br>    plt.bar(i, <span class="hljs-built_in">dict</span>[key], width=<span class="hljs-number">0.2</span>)<br>    plt.text(i-<span class="hljs-number">0.05</span>, <span class="hljs-built_in">dict</span>[key] + <span class="hljs-number">0.01</span>, <span class="hljs-built_in">dict</span>[key],fontsize=<span class="hljs-number">24</span>)<br>plt.xticks(np.arange(size), <span class="hljs-built_in">dict</span>.keys(), fontsize=<span class="hljs-number">24</span>)<br>plt.yticks([<span class="hljs-number">10000</span>, <span class="hljs-number">70000</span>, <span class="hljs-number">130000</span>],fontsize=<span class="hljs-number">24</span>)<br><br><span class="hljs-comment"># ==== 代码6-10.py ====</span><br><br><span class="hljs-comment">#绘制缺失值柱状图</span><br>plt.figure(figsize=(<span class="hljs-number">14</span>,<span class="hljs-number">10</span>))<br>loc = []<br>s = pd.isnull(df_train).<span class="hljs-built_in">sum</span>() / <span class="hljs-built_in">len</span>(df_train)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, df_train.shape[<span class="hljs-number">1</span>]):<br>    <span class="hljs-keyword">if</span> s[i] != <span class="hljs-number">0</span>:<br>        plt.bar(i, s[i],width=<span class="hljs-number">1</span>)<br>        plt.text(i-<span class="hljs-number">0.1</span>, s[i]+<span class="hljs-number">0.005</span>, <span class="hljs-string">&#x27;%.3f&#x27;</span>%s[i], fontsize=<span class="hljs-number">24</span>)<br>        loc.append(i)<br>plt.xticks(loc, s.index[loc],fontsize=<span class="hljs-number">24</span>)<br>plt.yticks([<span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>,<span class="hljs-number">0.2</span>],fontsize=<span class="hljs-number">24</span>)  <br>plt.ylim(<span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>)<br><span class="hljs-comment"># 处理缺失值  </span><br>df_train = df_train.drop([<span class="hljs-string">&#x27;MonthlyIncome&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>df_test = df_test.drop([<span class="hljs-string">&#x27;MonthlyIncome&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>df_train[<span class="hljs-string">&#x27;NumberOfDependents&#x27;</span>].fillna(df_train[<span class="hljs-string">&#x27;NumberOfDependents&#x27;</span>].mean(),<br> inplace = <span class="hljs-literal">True</span>)<br>df_test[<span class="hljs-string">&#x27;NumberOfDependents&#x27;</span>].fillna(df_train[<span class="hljs-string">&#x27;NumberOfDependents&#x27;</span>].mean(), inplace = <span class="hljs-literal">True</span>)<br><br><br><span class="hljs-comment"># ==== 代码6-11.py ====</span><br><br>fig = plt.figure(figsize=(<span class="hljs-number">14</span>,<span class="hljs-number">8</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(df_train.shape[<span class="hljs-number">1</span>]):<br>    fig.add_subplot(<span class="hljs-number">5</span>, <span class="hljs-number">2</span>, i+<span class="hljs-number">1</span>)<br>    plt.title(df_train.columns[i], fontsize = <span class="hljs-number">16</span>)<br>    dat = df_train.iloc[:, i]<br>    plt.scatter(np.arange(<span class="hljs-built_in">len</span>(dat)), dat, s = <span class="hljs-number">1</span>)  <br>    plt.xticks([])<br>    plt.yticks(fontsize=<span class="hljs-number">16</span>)<br>fig.tight_layout()<br><span class="hljs-comment"># 删除异常值数据</span><br>index = df_train[<span class="hljs-string">&#x27;RevolvingUtilizationOfUnsecuredLines&#x27;</span>] &lt;= <span class="hljs-number">1</span><br>df_train2 = df_train[index]<br>index = df_train[<span class="hljs-string">&#x27;age&#x27;</span>] &gt; <span class="hljs-number">18</span><br>df_train2 = df_train2[index]<br><br><br><span class="hljs-comment"># ==== 代码6-12.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> KFold<br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> make_pipeline<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVC<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br><span class="hljs-keyword">from</span>  sklearn.neural_network <span class="hljs-keyword">import</span> MLPClassifier<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> cross_validate<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>np.random.seed(<span class="hljs-number">10</span>)<br>X = np.array(df_train2.iloc[:, <span class="hljs-number">1</span>:])<br>y = np.array(df_train2.iloc[:, <span class="hljs-number">0</span>])<br>weight = <span class="hljs-built_in">sum</span>(y == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y == <span class="hljs-number">1</span>)<br>class_weight =&#123;<span class="hljs-number">0</span>:<span class="hljs-number">1</span>, <span class="hljs-number">1</span>:weight&#125;<br>scoring = [<span class="hljs-string">&#x27;accuracy&#x27;</span>, <span class="hljs-string">&#x27;balanced_accuracy&#x27;</span>, <span class="hljs-string">&#x27;roc_auc&#x27;</span>]<br><span class="hljs-comment"># 创建CART决策树模型</span><br>cart = DecisionTreeClassifier(class_weight = class_weight,<br>                              min_samples_leaf = <span class="hljs-number">80</span>,<br>                              max_depth = <span class="hljs-number">8</span>)<br>scores = cross_validate(cart, X, y, cv = <span class="hljs-number">10</span>, scoring = scoring)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;CART决策树模型的信用评分结果:&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;accuracy: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;balanced_accuracy: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_roc_auc&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;AUC: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码6-13.py ====</span><br><br>svm = make_pipeline(StandardScaler(), SVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, C = <span class="hljs-number">100</span>,<br> class_weight = class_weight))<br>scores = cross_validate(svm, X, y, cv =<span class="hljs-number">2</span>, scoring = scoring)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; SVM模型的性能评价结果:&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;accuracy: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;balanced_accuracy: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_roc_auc&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;AUC: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码6-14.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> KFold<br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> make_pipeline<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVC<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br><span class="hljs-keyword">from</span>  sklearn.neural_network <span class="hljs-keyword">import</span> MLPClassifier<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> cross_validate<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> accuracy_score<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> balanced_accuracy_score<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> roc_auc_score<br>weight = <span class="hljs-built_in">sum</span>(y == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y == <span class="hljs-number">1</span>)<br>class_weight =&#123;<span class="hljs-number">0</span>:<span class="hljs-number">1</span>, <span class="hljs-number">1</span>:weight&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">evaluate</span>(<span class="hljs-params">model, name, X_test, y_true</span>):     <span class="hljs-comment">#自定义评价函数</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; %s模型的信用评分结果：&#x27;</span>% name)<br>    y_pred = model.predict(X_test)<br>    score = accuracy_score(y_true, y_pred)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;accuracy: %s&#x27;</span>%score)<br>    score = balanced_accuracy_score(y_true, y_pred)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;balanced accuracy: %s&#x27;</span>%score)<br>    score = roc_auc_score(y_true, y_pred)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;AUC: %s&#x27;</span>%score)<br>X_test= np.array(df_test.iloc[:,<span class="hljs-number">1</span>:])<br>y_test= df_target[<span class="hljs-string">&#x27;Probability&#x27;</span>].gt(<span class="hljs-number">0.5</span>).astype(np.short)<br><span class="hljs-comment">#使用最优参数训练CART决策树</span><br>cart = DecisionTreeClassifier(class_weight = class_weight,<br>                        min_samples_leaf = <span class="hljs-number">80</span>,<br>                        max_depth = <span class="hljs-number">8</span>)<br>cart.fit(X, y)<br>evaluate(cart, <span class="hljs-string">&#x27;CART&#x27;</span>, X_test, y_test)<br><span class="hljs-comment">#使用最优参数训练SVM模型</span><br>svm = make_pipeline(StandardScaler(), SVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, C = <span class="hljs-number">100</span>,<br> class_weight = class_weight))<br>svm.fit(X, y)<br>evaluate(svm, <span class="hljs-string">&#x27;SVM&#x27;</span>, X_test, y_test)<br><br><br><span class="hljs-comment"># ==== 代码6-15.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br>df = pd.read_csv(<span class="hljs-string">&#x27;winequality-white.csv&#x27;</span>, delimiter = <span class="hljs-string">&#x27;;&#x27;</span>)<br>y = np.array(df[<span class="hljs-string">&#x27;quality&#x27;</span>]) <br>X = df.drop([<span class="hljs-string">&#x27;quality&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br>reg = LinearRegression().fit(X_train, y_train)           <span class="hljs-comment">#线性回归模型</span><br>pred = reg.predict(X_test)<br>mae = np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(pred - y_test)) / <span class="hljs-built_in">len</span>(y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;线性回归模型的MAE为：&#x27;</span>, mae)<br><br><br><span class="hljs-comment"># ==== 代码6-16.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeRegressor<br>df = pd.read_csv(<span class="hljs-string">&#x27;winequality-white.csv&#x27;</span>, delimiter = <span class="hljs-string">&#x27;;&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;quality&#x27;</span>] <br>X = df.drop([<span class="hljs-string">&#x27;quality&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#建立CART决策回归树模型，训练并做性能评价</span><br>regressor = DecisionTreeRegressor(random_state = <span class="hljs-number">0</span>)<br>regressor.fit(X_train, y_train)<br>pred = regressor.predict(X_test)<br>mae = np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(pred - y_test)) / <span class="hljs-built_in">len</span>(y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;CART决策回归树模型的MAE为：&#x27;</span>, mae)<br>mse = regressor.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;CART决策回归树模型的MSE为：&#x27;</span>, mse)<br><br><br><span class="hljs-comment"># ==== 代码6-17.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span>  sklearn.neural_network <span class="hljs-keyword">import</span> MLPRegressor<br>df = pd.read_csv(<span class="hljs-string">&#x27;winequality-white.csv&#x27;</span>, delimiter = <span class="hljs-string">&#x27;;&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;quality&#x27;</span>] <br>X = df.drop([<span class="hljs-string">&#x27;quality&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#建立MLP模型，训练并做性能评价</span><br>regressor = MLPRegressor(hidden_layer_sizes = (<span class="hljs-number">100</span>,<span class="hljs-number">10</span>) , solver = <span class="hljs-string">&#x27;adam&#x27;</span>, <br>                         activation = <span class="hljs-string">&#x27;logistic&#x27;</span>, random_state = <span class="hljs-number">0</span>)<br>regressor.fit(X_train, y_train)<br>pred = regressor.predict(X_test)<br>mae = np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(pred - y_test)) / <span class="hljs-built_in">len</span>(y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;BPNN模型的MAE为：&#x27;</span>, mae)<br>mse = regressor.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;BPNN模型的MSE为：&#x27;</span>, mse)<br><br><br><span class="hljs-comment"># ==== 代码6-18.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVR <br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> make_pipeline<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br>df = pd.read_csv(<span class="hljs-string">&#x27;winequality-white.csv&#x27;</span>, delimiter = <span class="hljs-string">&#x27;;&#x27;</span>)<br>y = np.array(df[<span class="hljs-string">&#x27;quality&#x27;</span>])<br>X = df.drop([<span class="hljs-string">&#x27;quality&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment"># 创建SVR模型，训练并预测</span><br>regressor = SVR(C = <span class="hljs-number">100</span>)<br>model = make_pipeline(StandardScaler(), regressor)<br>model.fit(X_train, y_train)<br>pred = model.predict(X_test)<br>mae = np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(pred - y_test)) / <span class="hljs-built_in">len</span>(y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;SVR模型的MAE为：&#x27;</span>, mae)<br>mse = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;SVR模型的MSE为：&#x27;</span>, mse)<br><br><span class="hljs-comment"># ==== 代码7-1.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neighbors <span class="hljs-keyword">import</span> KNeighborsClassifier<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> BaggingClassifier<br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#建立KNN模型和装袋模型</span><br>knn = KNeighborsClassifier(<span class="hljs-number">5</span>, weights = <span class="hljs-string">&#x27;distance&#x27;</span>)<br>bagging_model = BaggingClassifier(base_estimator = knn, n_estimators = <span class="hljs-number">10</span>)<br><span class="hljs-comment"># 模型训练和评估</span><br>knn.fit(X_train, y_train)<br>acc = knn.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;KNN模型的准确度: %s&#x27;</span>%(acc))<br>bagging_model.fit(X_train, y_train)<br>acc = bagging_model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Bagging模型的准确度: %s&#x27;</span>%(acc))<br><br><br><br><span class="hljs-comment"># ==== 代码7-2.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> AdaBoostClassifier<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#建立CART决策树基模型和提升模型</span><br>cart = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">5</span>, max_depth = <span class="hljs-number">6</span>)<br>ada_model = AdaBoostClassifier(base_estimator = cart, n_estimators = <span class="hljs-number">50</span>,<br> random_state = <span class="hljs-number">10</span>)<br><span class="hljs-comment">#模型训练和测试</span><br>cart.fit(X_train, y_train)<br>acc = cart.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;CART决策树模型的准确度: %s&#x27;</span>%(acc))<br>ada_model.fit(X_train, y_train)<br>acc = ada_model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Adaboost模型的准确度: %s&#x27;</span>%(acc))<br><br><br><span class="hljs-comment"># ==== 代码7-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> StackingClassifier<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVC, NuSVC<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> make_pipeline<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LogisticRegression<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> KFold<br><span class="hljs-comment"># 1. 读入数据，建立训练集和测试集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment"># 2. 建立基模型、元模型和堆叠模型</span><br>cart = DecisionTreeClassifier()<br>svm = make_pipeline(StandardScaler(),<br> NuSVC(gamma = <span class="hljs-string">&#x27;auto&#x27;</span>, nu = <span class="hljs-number">0.07</span>, class_weight = <span class="hljs-string">&#x27;balanced&#x27;</span>))<br>lr = LogisticRegression()                  <span class="hljs-comment">#元模型</span><br>estimators = [(<span class="hljs-string">&#x27;cart&#x27;</span>, cart), (<span class="hljs-string">&#x27;svm&#x27;</span>, svm)]       <span class="hljs-comment">#基模型</span><br>kf = KFold(n_splits = <span class="hljs-number">10</span>)<br>stacking_model = StackingClassifier(estimators = estimators,       <span class="hljs-comment">#堆叠模型</span><br>                           final_estimator = lr, cv = kf)<br><span class="hljs-comment">#3. 训练和测试模型</span><br>cart.fit(X_train, y_train)<br>acc = cart.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;CART决策树模型的准确度: %s&#x27;</span>%(acc))<br>svm.fit(X_train, y_train)<br>acc = svm.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;支持向量机模型的准确度: %s&#x27;</span>%(acc))<br>stacking_model.fit(X_train, y_train)<br>acc = stacking_model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;堆叠(Stacking)模型的准确度: %s&#x27;</span>%(acc))<br><br><br><span class="hljs-comment"># ==== 代码7-4.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestClassifier<br><span class="hljs-comment">#1. 读数据，建立训练集和测试集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>,<span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. 计算样本权重</span><br>sample_weights = np.ones((y_train.shape[<span class="hljs-number">0</span>],))<br>sample_weights[y_train == <span class="hljs-number">1</span>] = np.ceil(<span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">1</span>))<br><span class="hljs-comment">#3. 构建随机森林</span><br>model = RandomForestClassifier(n_estimators = <span class="hljs-number">400</span>, max_depth = <span class="hljs-number">8</span>,<br>                            min_samples_split = <span class="hljs-number">3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#4. 训练和测试模型</span><br>model = model.fit(X_train, y_train, sample_weights)<br>acc = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机森林模型的准确度: %s&#x27;</span> % acc)<br><br><br><span class="hljs-comment"># ==== 代码7-5.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> GradientBoostingClassifier<br><span class="hljs-comment">#1. 读入数据，建立训练集和测试集</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = <span class="hljs-number">0.3</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. 计算样本权重</span><br>sample_weights = np.ones((y_train.shape[<span class="hljs-number">0</span>],))<br>sample_weights[y_train == <span class="hljs-number">1</span>] = np.ceil(<span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">1</span>))<br><span class="hljs-comment">#3. 建立提升树模型</span><br>model = GradientBoostingClassifier(n_estimators = <span class="hljs-number">200</span>, learning_rate = <span class="hljs-number">0.3</span>,<br>                           max_depth = <span class="hljs-number">5</span>, min_samples_leaf = <span class="hljs-number">4</span>, random_state = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#4. 训练和评估模型</span><br>model.fit(X_train, y_train, sample_weights)<br>acc = model.score(X_test, y_test)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;提升树模型的准确度: %s&#x27;</span> % acc)<br><br><br><span class="hljs-comment"># ==== 代码7-6.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> LabelEncoder<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> OneHotEncoder<br>df = pd.read_csv(<span class="hljs-string">&#x27;churn.csv&#x27;</span>)<br><span class="hljs-comment">#处理TotalCharges特征上的缺失值</span><br>idx = df[<span class="hljs-string">&#x27;TotalCharges&#x27;</span>] == <span class="hljs-string">&#x27; &#x27;</span><br>df[<span class="hljs-string">&#x27;TotalCharges&#x27;</span>][idx] = df[<span class="hljs-string">&#x27;MonthlyCharges&#x27;</span>][idx]<br>df[<span class="hljs-string">&#x27;TotalCharges&#x27;</span>] = pd.to_numeric(df[<span class="hljs-string">&#x27;TotalCharges&#x27;</span>], downcast = <span class="hljs-string">&quot;float&quot;</span>)<br><span class="hljs-comment">#对Churn特征进行编码</span><br>le = LabelEncoder()<br>le.fit(df[<span class="hljs-string">&#x27;Churn&#x27;</span>])<br>y = le.transform(df[<span class="hljs-string">&#x27;Churn&#x27;</span>])<br>df = df.drop([<span class="hljs-string">&#x27;customerID&#x27;</span>, <span class="hljs-string">&#x27;Churn&#x27;</span>], axis=<span class="hljs-number">1</span>)<br><br><br><span class="hljs-comment"># ==== 代码7-7.py ====</span><br><br>excluded_cols = [<span class="hljs-string">&#x27;SeniorCitizen&#x27;</span>, <span class="hljs-string">&#x27;tenure&#x27;</span>, <span class="hljs-string">&#x27;MonthlyCharges&#x27;</span>, <span class="hljs-string">&#x27;TotalCharges&#x27;</span>]<br>cates = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(df.columns) - <span class="hljs-built_in">set</span>(excluded_cols))<br>encoder = OneHotEncoder(drop = <span class="hljs-string">&#x27;first&#x27;</span>)<br>df2 = encoder.fit_transform(df[cates]).toarray()<br>X = np.concatenate((df2, df[excluded_cols]), axis = <span class="hljs-number">1</span>)<br><br><br><span class="hljs-comment"># ==== 代码7-8.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> GradientBoostingClassifier<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> StratifiedKFold <br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> KFold <br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestClassifier<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> AdaBoostClassifier<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> balanced_accuracy_score<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> accuracy_score<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>np.random.seed(<span class="hljs-number">10</span>)<br>skf = StratifiedKFold(n_splits =<span class="hljs-number">10</span>, shuffle = <span class="hljs-literal">True</span>, random_state = <span class="hljs-number">10</span>) <br><br><br><span class="hljs-comment"># ==== 代码7-9.py ====</span><br><br><span class="hljs-comment"># step 1: 设置初始准确度和平衡准确度</span><br>acc_rf, acc_gbt, acc_ada = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>     <span class="hljs-comment">#设置三种模型的初始准确度</span><br>bacc_rf, bacc_gbt, bacc_ada = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>  <span class="hljs-comment">#设置三种模型的初始平衡准确度</span><br><span class="hljs-keyword">for</span> train_index, test_index <span class="hljs-keyword">in</span> skf.split(df, y):<br>    X_train = X[train_index]<br>    y_train = y[train_index]<br>    X_test = X[test_index]<br>    y_test = y[test_index]<br><span class="hljs-comment"># step 2: 计算样本权重</span><br>sample_weights = np.ones((<span class="hljs-built_in">len</span>(y_train), ))<br>sample_weights[y_train == <span class="hljs-number">1</span>] = np.ceil(<span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y_train == <span class="hljs-number">1</span>))<br><span class="hljs-comment"># step 3: 提升树模型的训练与评估</span><br>gbt = GradientBoostingClassifier(n_estimators = <span class="hljs-number">200</span>, <br>                            learning_rate = <span class="hljs-number">0.3</span>,<br>                            max_depth = <span class="hljs-number">5</span>, <br>                            min_samples_leaf = <span class="hljs-number">4</span>,<br>                            random_state = <span class="hljs-number">0</span>)<br>gbt.fit(X_train, y_train, sample_weights)<br>y_pred = gbt.predict(X_test)<br>acc_gbt += accuracy_score(y_test, y_pred)<br>bacc_gbt += balanced_accuracy_score(y_test, y_pred)<br><span class="hljs-comment"># step 4: 随机森林的训练与评估</span><br>rf = RandomForestClassifier(n_estimators = <span class="hljs-number">1000</span>,<br>                        max_depth = <span class="hljs-number">8</span>,<br>                        min_samples_split = <span class="hljs-number">3</span>, <br>                        random_state = <span class="hljs-number">0</span>)<br>rf.fit(X_train, y_train,sample_weights)<br>y_pred = rf.predict(X_test)<br>acc_rf += accuracy_score(y_test, y_pred)<br>bacc_rf += balanced_accuracy_score(y_test, y_pred)<br><span class="hljs-comment"># step 5: Adaboost的训练与评估</span><br>cart = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">15</span>, max_depth = <span class="hljs-number">15</span>)<br>ada = AdaBoostClassifier(base_estimator = cart, n_estimators = <span class="hljs-number">1000</span>, random_state = <span class="hljs-number">10</span>)<br>ada.fit(X_train, y_train, sample_weights)<br>y_pred = ada.predict(X_test)<br>acc_ada += accuracy_score(y_test, y_pred)<br>bacc_ada += balanced_accuracy_score(y_test, y_pred)<br><span class="hljs-comment"># step 6: 显示分类结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;提升树的准确度:%s, 平衡准确度: %s&#x27;</span>%(acc_gbt/<span class="hljs-number">10</span>, bacc_gbt/<span class="hljs-number">10</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机森林的准确度:%s, 平衡准确度: %s&#x27;</span>% (acc_rf/<span class="hljs-number">10</span>,bacc_rf/<span class="hljs-number">10</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Adaboost的准确度:%s, 平衡准确度: %s&#x27;</span>%(acc_ada/<span class="hljs-number">10</span>, bacc_ada/<span class="hljs-number">10</span>))<br><br><span class="hljs-comment"># ==== 代码7-10.py ====</span><br><br><span class="hljs-keyword">from</span> numpy <span class="hljs-keyword">import</span> mean<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> RepeatedStratifiedKFold<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeClassifier<br><span class="hljs-keyword">from</span> imblearn.pipeline <span class="hljs-keyword">import</span> Pipeline<br><span class="hljs-keyword">from</span> imblearn.over_sampling <span class="hljs-keyword">import</span> SMOTE, ADASYN<br><span class="hljs-keyword">from</span> imblearn.under_sampling <span class="hljs-keyword">import</span> RandomUnderSampler<br><span class="hljs-keyword">from</span> imblearn.over_sampling <span class="hljs-keyword">import</span> RandomOverSampler<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neighbors <span class="hljs-keyword">import</span> KNeighborsClassifier<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> cross_validate<br><span class="hljs-keyword">from</span> imblearn.ensemble <span class="hljs-keyword">import</span> EasyEnsembleClassifier <br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> AdaBoostClassifier<br>np.random.seed(<span class="hljs-number">10</span>)<br>k = <span class="hljs-number">5</span> <br>df = pd.read_csv(<span class="hljs-string">&#x27;UniversalBank.csv&#x27;</span>)<br>y = df[<span class="hljs-string">&#x27;Personal Loan&#x27;</span>]<br>X = df.drop([<span class="hljs-string">&#x27;ID&#x27;</span>, <span class="hljs-string">&#x27;ZIP Code&#x27;</span>, <span class="hljs-string">&#x27;Personal Loan&#x27;</span>], axis = <span class="hljs-number">1</span>)<br>scorings = [<span class="hljs-string">&#x27;accuracy&#x27;</span>, <span class="hljs-string">&#x27;balanced_accuracy&#x27;</span>]<br><br><br><span class="hljs-comment"># ==== 代码7-11.py ====</span><br><br>model = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">7</span>)<br>scores = cross_validate(model, X, y, cv = <span class="hljs-number">10</span>, scoring = scorings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;不处理不平衡问题的CART决策树模型：&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平衡准确度: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;准确度: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码7-12.py ====</span><br><br>class_weight = &#123;<span class="hljs-number">0</span>:<span class="hljs-number">1</span>, <span class="hljs-number">1</span>:<span class="hljs-built_in">sum</span>(y == <span class="hljs-number">0</span>) / <span class="hljs-built_in">sum</span>(y == <span class="hljs-number">1</span>)&#125;        <span class="hljs-comment">#设置类别权重</span><br>model = DecisionTreeClassifier(class_weight = class_weight, min_samples_leaf = <span class="hljs-number">7</span>)<br>scores = cross_validate(model, X, y, cv = <span class="hljs-number">10</span>, scoring = scorings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;设置类别权重后的CART决策树模型: &#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平衡准确度: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;准确度: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码7-13.py ====</span><br><br>smote = SMOTE(sampling_strategy = <span class="hljs-string">&#x27;minority&#x27;</span>, k_neighbors = k)<br>X_res, y_res = smote.fit_resample(X, y)<br>model = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">7</span>)<br>scores = cross_validate(model, X_res, y_res, cv = <span class="hljs-number">10</span>, scoring = scorings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用SMOTE过采样处理不平衡数据后的CART决策树模型：&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平衡准确度: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;准确度: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码7-14.py ====</span><br><br>adasyn = ADASYN(sampling_strategy = <span class="hljs-string">&#x27;minority&#x27;</span>)<br>model = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">7</span>)<br>X_res, y_res = adasyn.fit_resample(X, y)<br>scores = cross_validate(model, X_res, y_res, cv = <span class="hljs-number">10</span>, scoring = scorings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用ADASYN过采样处理不平衡数据后的CART决策树模型：&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平衡准确度: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;准确度: %s&#x27;</span>% s)<br><br><br><span class="hljs-comment"># ==== 代码7-15.py ====</span><br><br>cart = DecisionTreeClassifier(min_samples_leaf = <span class="hljs-number">5</span>, max_depth = <span class="hljs-number">6</span>)<br>ada = AdaBoostClassifier(base_estimator = cart, n_estimators = <span class="hljs-number">100</span>)<br>eec = EasyEnsembleClassifier(base_estimator = ada, <br>sampling_strategy = <span class="hljs-string">&#x27;all&#x27;</span>, replacement = <span class="hljs-literal">True</span>)<br>scores = cross_validate(eec, X, y, cv = <span class="hljs-number">10</span>, scoring = scorings)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;处理不平衡问题的Easy Ensemble集成模型：&#x27;</span>)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_balanced_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平衡准确度: %s&#x27;</span>% s)<br>s = np.mean(scores[<span class="hljs-string">&#x27;test_accuracy&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;准确度: %s&#x27;</span>% s)<br><br><span class="hljs-comment"># ==== 代码8-1.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> sklearn.cluster <span class="hljs-keyword">import</span> KMeans<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> make_blobs   <br><span class="hljs-comment">#1. 获得数据集</span><br>n_samples = <span class="hljs-number">200</span>                         <span class="hljs-comment">#样本数量</span><br>X, y = make_blobs(n_samples = n_samples,<br> random_state = <span class="hljs-number">9</span>, centers = <span class="hljs-number">4</span>, cluster_std = <span class="hljs-number">1</span>)<br><span class="hljs-comment">#2. KMeans模型创建和训练预测</span><br>model = KMeans(n_clusters = <span class="hljs-number">4</span>, random_state = <span class="hljs-number">12345</span>)<br>y_pred = model.fit_predict(X)<br><span class="hljs-comment">#3. 聚类结果及评价</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;聚类后的SSE值:&quot;</span>, model.inertia_)     <span class="hljs-comment"># SSE值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;聚类质心：&quot;</span>, model.cluster_centers_)<br><span class="hljs-comment">#4. 绘图显示聚类结果</span><br>plt.figure(figsize = (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>))<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]      <span class="hljs-comment">#显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span><br>plt.scatter(X[y_pred == <span class="hljs-number">0</span>][:, <span class="hljs-number">0</span>], X[y_pred == <span class="hljs-number">0</span>][:, <span class="hljs-number">1</span>], marker = <span class="hljs-string">&#x27;D&#x27;</span>, color = <span class="hljs-string">&#x27;g&#x27;</span>)<br>plt.scatter(X[y_pred == <span class="hljs-number">1</span>][:, <span class="hljs-number">0</span>], X[y_pred == <span class="hljs-number">1</span>][:, <span class="hljs-number">1</span>], marker = <span class="hljs-string">&#x27;o&#x27;</span>, color = <span class="hljs-string">&#x27;b&#x27;</span>)<br>plt.scatter(X[y_pred == <span class="hljs-number">2</span>][:, <span class="hljs-number">0</span>], X[y_pred == <span class="hljs-number">2</span>][:, <span class="hljs-number">1</span>], marker = <span class="hljs-string">&#x27;s&#x27;</span>, color = <span class="hljs-string">&#x27;m&#x27;</span>)<br>plt.scatter(X[y_pred == <span class="hljs-number">3</span>][:, <span class="hljs-number">0</span>], X[y_pred == <span class="hljs-number">3</span>][:, <span class="hljs-number">1</span>], marker = <span class="hljs-string">&#x27;v&#x27;</span>, color = <span class="hljs-string">&#x27;r&#x27;</span>)<br>plt.title(<span class="hljs-string">&quot;k-means算法的聚类结果， k = 4&quot;</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码8-2.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> metrics<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1.内部度量指标&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; 轮廓系数: %0.3f&quot;</span> % metrics.silhouette_score(X, y_pred))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; CH指数: %0.3f&quot;</span> % metrics.calinski_harabasz_score(X, y_pred))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2.外部度量指标&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; ARI指数: %0.3f&quot;</span> % metrics.adjusted_rand_score(y, y_pred))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; NMI指数: %0.3f&quot;</span> % metrics.normalized_mutual_info_score(y, y_pred))<br><br><br><span class="hljs-comment"># ==== 代码8-3.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.cluster <span class="hljs-keyword">import</span> DBSCAN<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> make_moons<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> metrics<br><span class="hljs-comment"># 1. 获得数据集</span><br>n_samples = <span class="hljs-number">200</span>                   <span class="hljs-comment">#样本数量</span><br>X, y = make_moons(n_samples = n_samples, random_state = <span class="hljs-number">9</span>,noise = <span class="hljs-number">0.1</span>)<br><span class="hljs-comment">#添加噪声（若无需噪声，此步骤可删除）</span><br>X = np.insert(X, <span class="hljs-number">0</span>, values = np.array([[<span class="hljs-number">1.5</span>, <span class="hljs-number">0.5</span>], [-<span class="hljs-number">0.5</span>, <span class="hljs-number">0</span>]]), axis = <span class="hljs-number">0</span>)<br>y = np.insert(y, <span class="hljs-number">0</span>, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>], axis = <span class="hljs-number">0</span>)<br><span class="hljs-comment">#2. DBSCAN模型创建和训练</span><br>model = DBSCAN( eps = <span class="hljs-number">0.2</span>, min_samples = <span class="hljs-number">4</span>)<br>y_pred = model.fit_predict(X)        <span class="hljs-comment"># -1代表噪声,其余值代表预测的簇标号,0,1</span><br><span class="hljs-comment"># 统计聚类后的簇数量</span><br>n_clusters_ = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">set</span>(y_pred)) - (<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> -<span class="hljs-number">1</span> <span class="hljs-keyword">in</span> y_pred <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>)<br><span class="hljs-comment">#3. 聚类模型评价</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;聚类的簇数: %d&#x27;</span> % n_clusters_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;轮廓系数: %0.3f&#x27;</span> % metrics.silhouette_score(X, y_pred))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;调整兰德指数AMI: %0.3f&#x27;</span> % metrics.adjusted_rand_score(y, y_pred))<br><span class="hljs-comment"># 4. 绘图显示聚类结果</span><br>core_samples_mask = np.zeros_like(model.labels_, dtype = <span class="hljs-built_in">bool</span>)    <span class="hljs-comment">#获得核心对象的掩码</span><br>core_samples_mask[model.core_sample_indices_] = <span class="hljs-literal">True</span><br><span class="hljs-comment">#绘制原始数据集</span><br>set_marker = [<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;&lt;&#x27;</span>]<br>set_color = [<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;tan&#x27;</span>]<br>plt.figure(figsize = (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n_clusters_):<br>    plt.scatter(X[y == i][:, <span class="hljs-number">0</span>], X[y == i][:, <span class="hljs-number">1</span>], marker = set_marker[i],<br>             color = <span class="hljs-string">&#x27;none&#x27;</span>, edgecolors = set_color[i])<br>plt.title(<span class="hljs-string">&#x27; Moons数据集(带2个噪声点)&#x27;</span>, fontsize = <span class="hljs-number">14</span>)<br><span class="hljs-comment">#绘制DBSCAN的聚类结果</span><br>plt.figure(figsize = (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>))<br>unique_labels = <span class="hljs-built_in">set</span>(y_pred)<br>i = -<span class="hljs-number">1</span>               <span class="hljs-comment">#flag变量</span><br><span class="hljs-keyword">for</span> k, col <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(unique_labels, set_color[<span class="hljs-number">0</span>: <span class="hljs-built_in">len</span>(unique_labels)]):<br>    <span class="hljs-keyword">if</span> k == -<span class="hljs-number">1</span>:<br>        col = <span class="hljs-string">&#x27;k&#x27;</span>     <span class="hljs-comment"># 黑色表示标记噪声点.</span><br>    class_member_mask = (y_pred == k)<br>    i += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> (i&gt;=<span class="hljs-built_in">len</span>(unique_labels)):  i = <span class="hljs-number">0</span><br>    <span class="hljs-comment">#绘制核心对象</span><br>    xcore = X[class_member_mask &amp; core_samples_mask]<br>    plt.plot(xcore[:, <span class="hljs-number">0</span>], xcore[:, <span class="hljs-number">1</span>], set_marker[i], markerfacecolor = col,<br>          markeredgecolor = <span class="hljs-string">&#x27;k&#x27;</span>, markersize = <span class="hljs-number">8</span>)<br>    <span class="hljs-comment">#绘制边界对象和噪声</span><br>    xncore = X[class_member_mask &amp; ~core_samples_mask]<br>    plt.plot(xncore[:, <span class="hljs-number">0</span>], xncore[:, <span class="hljs-number">1</span>], set_marker[i], markerfacecolor = col,<br>          markeredgecolor = <span class="hljs-string">&#x27;k&#x27;</span>, markersize = <span class="hljs-number">4</span>)<br>plt.title(<span class="hljs-string">&#x27;DBSCAN算法的聚类结果: 识别的簇= %d&#x27;</span> % n_clusters_, fontsize = <span class="hljs-number">14</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码8-4.py ====</span><br><br><span class="hljs-keyword">from</span> sklearn.mixture <span class="hljs-keyword">import</span> GaussianMixture<br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> make_blobs    <span class="hljs-comment"># 用于生成数据集的库</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> metrics<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> utils <span class="hljs-keyword">import</span> draw_ellipse, BIC         <span class="hljs-comment"># 引用辅助函数</span><br><span class="hljs-comment"># 1. 获得数据集</span><br>n_samples = <span class="hljs-number">200</span>                        <span class="hljs-comment"># 样本数量</span><br>X, y = make_blobs(n_samples = n_samples, random_state = <span class="hljs-number">9</span>, centers = <span class="hljs-number">4</span>, cluster_std = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 2. GMM模型的创建和训练</span><br>K = <span class="hljs-number">4</span>                                  <span class="hljs-comment"># 簇的数量</span><br>model = GaussianMixture(n_components = K, covariance_type = <span class="hljs-string">&#x27;full&#x27;</span>, random_state = <span class="hljs-number">15</span>)<br>y_pred = model.fit_predict(X)<br><span class="hljs-comment"># 3. 聚类模型评价</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; 轮廓系数: %0.3f&quot;</span> % metrics.silhouette_score(X, y_pred))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; 调整兰德指数AMI: %0.3f&quot;</span> % metrics.adjusted_rand_score(y, y_pred))<br><span class="hljs-comment"># 4绘图显示GMM的聚类结果</span><br>plt.figure(figsize = (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>))<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]             <span class="hljs-comment">#显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(K):<br>    plt.scatter(X[y_pred == i][:, <span class="hljs-number">0</span>], X[y_pred == i][:, <span class="hljs-number">1</span>],   <br>marker=set_marker[i], color=set_color[i])<br>    <span class="hljs-comment"># 为簇绘制椭圆阴影区域</span><br>    <span class="hljs-keyword">for</span> p, c, w <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(model.means_, model.covariances_, model.weights_):<br>        draw_ellipse(p, c, alpha = <span class="hljs-number">0.05</span>)<br>plt.title(<span class="hljs-string">&quot; GMM的聚类结果, K=%d&quot;</span>% K, fontsize = <span class="hljs-number">14</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码8-5.py ====</span><br><br><span class="hljs-keyword">from</span> matplotlib.patches <span class="hljs-keyword">import</span> Ellipse<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.mixture <span class="hljs-keyword">import</span> GaussianMixture<br><span class="hljs-comment"># 函数： 给定的位置画一个椭圆</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_ellipse</span>(<span class="hljs-params">position, covariance, ax = <span class="hljs-literal">None</span>, **kwargs</span>):<br>    ax = ax <span class="hljs-keyword">or</span> plt.gca()<br>    <span class="hljs-comment"># 将协方差转换为主轴</span><br>    <span class="hljs-keyword">if</span> covariance.shape == (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>):<br>        U, s, Vt = np.linalg.svd(covariance)<br>        angle = np.degrees(np.arctan2(U[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>], U[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]))<br>        width, height = <span class="hljs-number">2</span> * np.sqrt(s)<br>    <span class="hljs-keyword">else</span>:<br>        angle = <span class="hljs-number">0</span><br>        width, height = <span class="hljs-number">2</span> * np.sqrt(covariance)<br>    ax.add_patch(Ellipse(position, <span class="hljs-number">3</span> * width, <span class="hljs-number">3</span> * height, angle, **kwargs))<br><span class="hljs-comment"># 函数： 计算BIC准则</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">BIC</span>(<span class="hljs-params">X</span>):<br>    lowest_bic = np.infty<br>    bic = []<br>    n_components_range = <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>)<br>    <span class="hljs-keyword">for</span> n_components <span class="hljs-keyword">in</span> n_components_range:<br>        gmm_model = GaussianMixture(n_components = n_components)<br>        gmm_model.fit(X)<br>        bic.append(gmm_model.bic(X))<br>        <span class="hljs-keyword">if</span> bic[-<span class="hljs-number">1</span>] &lt; lowest_bic:<br>            lowest_bic = bic[-<span class="hljs-number">1</span>]<br>    bic = np.array(bic)<br>    <span class="hljs-keyword">return</span> bic.argmin() + <span class="hljs-number">1</span><br><br><br><span class="hljs-comment"># ==== 代码9-1.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> mlxtend.frequent_patterns <span class="hljs-keyword">import</span> apriori<br><span class="hljs-keyword">from</span> mlxtend.preprocessing <span class="hljs-keyword">import</span> TransactionEncoder<br>itemSetList = [[<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>]]<br><span class="hljs-comment">#数据预处理——编码</span><br>te = TransactionEncoder()<br>te_array = te.fit(itemSetList).transform(itemSetList)<br>df = pd.DataFrame(te_array, columns = te.columns_)<br><span class="hljs-comment">#挖掘频繁项集（最小支持度为0.5）</span><br>frequent_itemsets = apriori(df, min_support = <span class="hljs-number">0.5</span>, use_colnames = <span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;发现的频繁项集包括：\n&quot;</span>, frequent_itemsets)<br><br><br><span class="hljs-comment"># ==== 代码9-2.py ====</span><br><br><span class="hljs-keyword">from</span> mlxtend.frequent_patterns <span class="hljs-keyword">import</span> association_rules<br>rules = association_rules(frequent_itemsets, metric = <span class="hljs-string">&#x27;confidence&#x27;</span>, <br>                     min_threshold = <span class="hljs-number">0.5</span>, <br>                     support_only = <span class="hljs-literal">False</span>)<br>rules= rules[ rules[<span class="hljs-string">&#x27;lift&#x27;</span>]&gt;<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;生成的强关联规则为：\n&quot;</span>, rules)<br><br><br><span class="hljs-comment"># ==== 代码9-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> mlxtend.preprocessing <span class="hljs-keyword">import</span> TransactionEncoder<br><span class="hljs-keyword">from</span> mlxtend.frequent_patterns <span class="hljs-keyword">import</span> fpgrowth, association_rules<br>itemSetList = [[<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>]]<br><span class="hljs-comment">#数据预处理——编码</span><br>te = TransactionEncoder()<br>te_array = te.fit(itemSetList).transform(itemSetList)<br>df = pd.DataFrame(te_array, columns = te.columns_)<br><span class="hljs-comment">#利用FP-Growth算法发现频繁项集，最小支持度为0.5</span><br>frequent_itemsets = fpgrowth(df, min_support = <span class="hljs-number">0.5</span>, use_colnames = <span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;发现的频繁项集包括：\n&quot;</span>, frequent_itemsets)<br><span class="hljs-comment">#生成强规则(最小置信度为0.5, 提升度&gt;1)</span><br>rules = association_rules(frequent_itemsets, metric = <span class="hljs-string">&#x27;confidence&#x27;</span>, <br>                          min_threshold = <span class="hljs-number">0.5</span>, support_only = <span class="hljs-literal">False</span>)<br>rules= rules[ rules[<span class="hljs-string">&#x27;lift&#x27;</span>] &gt; <span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;生成的强关联规则为：\n&quot;</span>, rules)<br><br><br><span class="hljs-comment"># ==== 代码9-4.py ====</span><br><br><span class="hljs-comment">#Eclat类的定义</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Eclat</span>:   <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, min_support = <span class="hljs-number">3</span>, min_confidence = <span class="hljs-number">0.6</span>, min_lift = <span class="hljs-number">1</span></span>):<br>        self.min_support = min_support<br>        self.min_confidence = min_confidence<br>        self.min_lift = min_lift<br>    <span class="hljs-comment">#函数：倒排数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">invert</span>(<span class="hljs-params">self, data</span>):<br>        invert_data = &#123;&#125;<br>        fq_item = []<br>        sup = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>            <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> data[i]:<br>                <span class="hljs-keyword">if</span> invert_data.get(item) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                    invert_data[item].append(i)<br>                <span class="hljs-keyword">else</span>:<br>                    invert_data[item] = [i]<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> invert_data.keys():<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(invert_data[item]) &gt;= self.min_support:<br>                fq_item.append([item])<br>                sup.append(invert_data[item])<br>        fq_item = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">frozenset</span>, fq_item))<br>        <span class="hljs-keyword">return</span> fq_item, sup<br>    <span class="hljs-comment">#函数：取交集</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">getIntersection</span>(<span class="hljs-params">self, fq_item, sup</span>):<br>        sub_fq_item = []<br>        sub_sup = []<br>        k = <span class="hljs-built_in">len</span>(fq_item[<span class="hljs-number">0</span>]) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fq_item)):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(fq_item)):<br>                L1 = <span class="hljs-built_in">list</span>(fq_item[i])[: k-<span class="hljs-number">2</span>]<br>                L2 = <span class="hljs-built_in">list</span>(fq_item[j])[: k-<span class="hljs-number">2</span>]<br>                <span class="hljs-keyword">if</span> L1 == L2:<br>                    flag = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(sup[i]).intersection(<span class="hljs-built_in">set</span>(sup[j]))))<br>                    <span class="hljs-keyword">if</span> flag &gt;= self.min_support:<br>                        sub_fq_item.append(fq_item[i] | fq_item[j])<br>                        sub_sup.append(<br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(sup[i]).intersection(<span class="hljs-built_in">set</span>(sup[j]))))<br>        <span class="hljs-keyword">return</span> sub_fq_item, sub_sup<br>    <span class="hljs-comment">#函数：获得频繁项</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">findFrequentItem</span>(<span class="hljs-params">self, fq_item, sup, fq_set,sup_set</span>):<br>        fq_set.append(fq_item)<br>        sup_set.append(sup)<br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(fq_item) &gt;= <span class="hljs-number">2</span>:<br>            fq_item, sup = self.getIntersection(fq_item, sup)<br>            fq_set.append(fq_item)<br>            sup_set.append(sup)<br><span class="hljs-comment">#函数，生成关联规则</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">generateRules</span>(<span class="hljs-params">self, fq_set, rules, len_data</span>):<br>        <span class="hljs-keyword">for</span> fq_item <span class="hljs-keyword">in</span> fq_set:<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(fq_item) &gt; <span class="hljs-number">1</span>:<br>                self.getRules(fq_item, fq_item, fq_set, rules, len_data)<br>    <span class="hljs-comment">#辅助函数，删除项目</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">removeItem</span>(<span class="hljs-params">self, current_item, item</span>):<br>        tempSet = []<br>        <span class="hljs-keyword">for</span> elem <span class="hljs-keyword">in</span> current_item:<br>            <span class="hljs-keyword">if</span> elem != item:<br>                tempSet.append(elem)<br>        tempFrozenSet = <span class="hljs-built_in">frozenset</span>(tempSet)<br>        <span class="hljs-keyword">return</span> tempFrozenSet<br>    <span class="hljs-comment">#辅助函数：生成关联规则</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">getRules</span>(<span class="hljs-params">self, fq_item, cur_item, fq_set, rules,len_data</span>):<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> cur_item:<br>            subset = self.removeItem(cur_item, item)<br>            confidence = fq_set[fq_item] / fq_set[subset]<br>            supp = fq_set[fq_item] / len_data<br>            lift = confidence / (fq_set[fq_item - subset] / len_data)<br>            <span class="hljs-keyword">if</span> confidence &gt;= self.min_confidence <span class="hljs-keyword">and</span> lift &gt; self.min_lift:<br>                flag = <span class="hljs-literal">False</span><br>                <span class="hljs-keyword">for</span> rule <span class="hljs-keyword">in</span> rules:<br>                    <span class="hljs-keyword">if</span> (rule[<span class="hljs-number">0</span>] == subset) <span class="hljs-keyword">and</span> (rule[<span class="hljs-number">1</span>] == fq_item-subset):<br>                        flag = <span class="hljs-literal">True</span><br>                <span class="hljs-keyword">if</span> flag == <span class="hljs-literal">False</span>:<br>                    rules.append((<span class="hljs-string">&quot;%s --&gt; %s,support=%5.3f, confidence=%5.3f,  lift = %5.3f&quot;</span>%(<span class="hljs-built_in">list</span>(subset), <span class="hljs-built_in">list</span>(fq_item - subset),<br>                          supp, confidence, lift)))<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(subset) &gt;= <span class="hljs-number">2</span>:<br>                    self.getRules(fq_item, subset, fq_set, rules, len_data)<br>    <span class="hljs-comment">#函数：Eclat模型训练</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fit</span>(<span class="hljs-params">self, data, display = <span class="hljs-literal">True</span></span>):<br>        frequent_item, support = self.invert(data)<br>        frequent_set = []<br>        support_set = []<br>        len_data= <span class="hljs-built_in">len</span>(data)<br>        self.findFrequentItem(frequent_item, support, frequent_set, support_set)<br>        data = &#123;&#125;<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(frequent_set)):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(frequent_set[i])):<br>                data[frequent_set[i][j]] = <span class="hljs-built_in">len</span>(support_set[i][j])<br>        rules = []<br>        self.generateRules(data, rules, len_data)<br>        <span class="hljs-keyword">if</span> display:     <br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Association Rules:&quot;</span>)<br>            <span class="hljs-keyword">for</span> rule <span class="hljs-keyword">in</span> rules:<br>                <span class="hljs-built_in">print</span>(rule)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;发现的规则数量：&quot;</span>, <span class="hljs-built_in">len</span>(rules))<br>        <span class="hljs-keyword">return</span> frequent_set, rules<br><span class="hljs-comment">#用Eclat类创建一个关联规则模型，训练后生成关联规则</span><br>itemSetList = [[<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>],<br>            [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>]]<br>et = Eclat(min_support = <span class="hljs-number">2</span>, min_confidence = <span class="hljs-number">0.5</span>, min_lift = <span class="hljs-number">1</span>)<br>et.fit(itemSetList, <span class="hljs-literal">True</span>)<br><br><br><span class="hljs-comment"># ==== 代码9-5.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> mlxtend.frequent_patterns <span class="hljs-keyword">import</span> apriori, association_rules<br>inputfile = <span class="hljs-string">&#x27;Online_Retail.xlsx&#x27;</span>          <span class="hljs-comment"># 输入的数据文件</span><br>data = pd.read_excel(inputfile)<br><span class="hljs-comment">#步骤1：数据探索</span><br>data.info()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不同的国家名称:\n&quot;</span>, data.Country.unique())<br><span class="hljs-comment">#步骤2：预处理</span><br>data[<span class="hljs-string">&#x27;Description&#x27;</span>] = data[<span class="hljs-string">&#x27;Description&#x27;</span>].<span class="hljs-built_in">str</span>.strip()             <span class="hljs-comment">#去除空格</span><br>data.dropna(axis = <span class="hljs-number">0</span>,subset = [<span class="hljs-string">&#x27;CustomerID&#x27;</span>], inplace = <span class="hljs-literal">True</span>)   <span class="hljs-comment">#删除含缺失值的行</span><br>data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>] = data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>].astype(<span class="hljs-string">&#x27;str&#x27;</span>)<br>data = data[~data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>].<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;C&#x27;</span>)]              <span class="hljs-comment">#删除所有已取消交易</span><br><span class="hljs-comment">#步骤3:数据分割和转换</span><br>basket_France = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] == <span class="hljs-string">&quot;France&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br>basket_Por = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] == <span class="hljs-string">&quot;Portugal&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br>basket_Sweden = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] == <span class="hljs-string">&quot;Sweden&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hot_encode</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span>(x&lt;= <span class="hljs-number">0</span>):  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span>(x&gt;= <span class="hljs-number">1</span>):  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>basket_France = basket_France.applymap(hot_encode)       <span class="hljs-comment">#0/1编码数据</span><br>basket_Por = basket_Por.applymap(hot_encode)<br>basket_Sweden = basket_Sweden.applymap(hot_encode)<br><br><br><span class="hljs-comment"># ==== 代码9-6.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> mlxtend.frequent_patterns <span class="hljs-keyword">import</span> apriori, association_rules<br>inputfile = <span class="hljs-string">&#x27;./Online_Retail.xlsx&#x27;</span>   <span class="hljs-comment"># 输入的数据文件</span><br>data = pd.read_excel(inputfile)<br><span class="hljs-comment">#步骤1：数据探索</span><br>data.info()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不同的国家名称:\n&quot;</span>, data.Country.unique())<br><span class="hljs-comment">#步骤2：预处理</span><br>data[<span class="hljs-string">&#x27;Description&#x27;</span>] = data[<span class="hljs-string">&#x27;Description&#x27;</span>].<span class="hljs-built_in">str</span>.strip() <span class="hljs-comment">#去除空格</span><br>data.dropna(axis = <span class="hljs-number">0</span>,subset =[<span class="hljs-string">&#x27;CustomerID&#x27;</span>],inplace = <span class="hljs-literal">True</span>) <span class="hljs-comment">#删除含缺失值的行</span><br>data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>] = data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>].astype(<span class="hljs-string">&#x27;str&#x27;</span>)<br>data = data[~data[<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>].<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;C&#x27;</span>)]   <span class="hljs-comment">#删除所有已取消交易</span><br><span class="hljs-built_in">print</span>(data.head(<span class="hljs-number">5</span>))<br><span class="hljs-comment">#步骤3:数据分割和转换</span><br>basket_France = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] ==<span class="hljs-string">&quot;France&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br>basket_Por = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] ==<span class="hljs-string">&quot;Portugal&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br>basket_Sweden = (data[data[<span class="hljs-string">&#x27;Country&#x27;</span>] ==<span class="hljs-string">&quot;Sweden&quot;</span>]<br>          .groupby([<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>, <span class="hljs-string">&#x27;Description&#x27;</span>])[<span class="hljs-string">&#x27;Quantity&#x27;</span>]<br>          .<span class="hljs-built_in">sum</span>().unstack().reset_index().fillna(<span class="hljs-number">0</span>)<br>          .set_index(<span class="hljs-string">&#x27;InvoiceNo&#x27;</span>))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hot_encode</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span>(x&lt;= <span class="hljs-number">0</span>):  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span>(x&gt;= <span class="hljs-number">1</span>):  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>basket_France = basket_France.applymap(hot_encode)   <span class="hljs-comment">#0/1编码数据</span><br>basket_Por = basket_Por.applymap(hot_encode)<br>basket_Sweden = basket_Sweden.applymap(hot_encode)<br><span class="hljs-comment"># (1)法国数据集的关联规则挖掘</span><br>frq_items = apriori(basket_France, min_support = <span class="hljs-number">0.1</span>, use_colnames = <span class="hljs-literal">True</span>)<br>rules =association_rules(frq_items, metric =<span class="hljs-string">&quot;confidence&quot;</span>, min_threshold= <span class="hljs-number">0.3</span>)<br>rules= rules[ rules[<span class="hljs-string">&#x27;lift&#x27;</span>]&gt;=<span class="hljs-number">1.5</span>]            <span class="hljs-comment">#设置最小提升度</span><br>rules = rules.sort_values([<span class="hljs-string">&#x27;confidence&#x27;</span>, <span class="hljs-string">&#x27;lift&#x27;</span>], ascending =[<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>])<br><span class="hljs-built_in">print</span>(rules.head())                                 <span class="hljs-comment">#显示前5条强关联规则</span><br><span class="hljs-comment">#（2）葡萄牙数据集的关联规则挖掘</span><br>frq_items = apriori(basket_Por, min_support = <span class="hljs-number">0.1</span>, use_colnames = <span class="hljs-literal">True</span>)<br>rules =association_rules(frq_items, metric =<span class="hljs-string">&quot;confidence&quot;</span>, min_threshold= <span class="hljs-number">0.3</span>)<br>rules= rules[ rules[<span class="hljs-string">&#x27;lift&#x27;</span>]&gt;=<span class="hljs-number">1.5</span>]            <span class="hljs-comment">#设置最小提升度</span><br>rules = rules.sort_values([<span class="hljs-string">&#x27;confidence&#x27;</span>, <span class="hljs-string">&#x27;lift&#x27;</span>], ascending =[<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>])<br><span class="hljs-built_in">print</span>(rules.head())                                 <span class="hljs-comment">#显示前5条强关联规则</span><br><span class="hljs-comment">#（3） 瑞典数据集的关联规则挖掘</span><br>frq_items = apriori(basket_Sweden, min_support = <span class="hljs-number">0.05</span>, use_colnames = <span class="hljs-literal">True</span>)<br>rules =association_rules(frq_items, metric =<span class="hljs-string">&quot;confidence&quot;</span>, min_threshold= <span class="hljs-number">0.3</span>)<br>rules= rules[ rules[<span class="hljs-string">&#x27;lift&#x27;</span>]&gt;=<span class="hljs-number">1.5</span>]            <span class="hljs-comment">#设置最小提升度</span><br>rules = rules.sort_values([<span class="hljs-string">&#x27;confidence&#x27;</span>, <span class="hljs-string">&#x27;lift&#x27;</span>], ascending =[<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>])<br><span class="hljs-built_in">print</span>(rules.head())                                 <span class="hljs-comment">#显示前5条强关联规则</span><br><br><br><br><span class="hljs-comment"># ==== 代码10-1.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> datetime<br>file = <span class="hljs-string">&#x27;./data/shampoo.csv&#x27;</span>          <span class="hljs-comment">#该数据放置在data文件夹下，读者可以自行定义</span><br><span class="hljs-comment">#函数：日期数据解析</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">date_parser</span> (x):<br>    <span class="hljs-keyword">return</span> datetime.strptime(<span class="hljs-string">&#x27;190&#x27;</span>+x, <span class="hljs-string">&#x27;%Y-%m&#x27;</span>)<br>data = pd.read_csv(file, header = <span class="hljs-number">0</span>, parse_dates = [<span class="hljs-number">0</span>], index_col = <span class="hljs-number">0</span>, squeeze = <span class="hljs-literal">True</span>, <br>date_parser = date_parser)<br><br><br><span class="hljs-comment"># ==== 代码10-2.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> datetime<br>file = <span class="hljs-string">&#x27;./data/shampoo.csv&#x27;</span>          <span class="hljs-comment">#该数据放置在data文件夹下，读者可以自行定义</span><br><span class="hljs-comment">#函数：日期数据解析</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">date_parser</span> (x):<br>    <span class="hljs-keyword">return</span> datetime.strptime(<span class="hljs-string">&#x27;190&#x27;</span>+x, <span class="hljs-string">&#x27;%Y-%m&#x27;</span>)<br>data = pd.read_csv(file, header = <span class="hljs-number">0</span>, parse_dates = [<span class="hljs-number">0</span>], index_col = <span class="hljs-number">0</span>, squeeze = <span class="hljs-literal">True</span>, <br>date_parser = date_parser)<br><span class="hljs-comment"># 时序图</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]     <span class="hljs-comment"># 用来正常显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>    <span class="hljs-comment"># 用来正常显示负号</span><br>plt.plot(data)<br>plt.legend()<br>plt.show()<br><span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_acf<br>plot_acf(data).show()<br>plt.show()<br><span class="hljs-comment"># ADF单位根检测方法</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.stattools <span class="hljs-keyword">import</span> adfuller <span class="hljs-keyword">as</span> ADF<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始序列的ADF检验结果为：&#x27;</span>, ADF(data))      <span class="hljs-comment"># 返回值依次为adf、p值等</span><br><br><br><span class="hljs-comment"># ==== 代码10-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> datetime<br>file = <span class="hljs-string">&#x27;./data/shampoo.csv&#x27;</span>          <span class="hljs-comment">#该数据放置在data文件夹下，读者可以自行定义</span><br><span class="hljs-comment">#函数：日期数据解析</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">date_parser</span> (x):<br>    <span class="hljs-keyword">return</span> datetime.strptime(<span class="hljs-string">&#x27;190&#x27;</span>+x, <span class="hljs-string">&#x27;%Y-%m&#x27;</span>)<br>data = pd.read_csv(file, header = <span class="hljs-number">0</span>, parse_dates = [<span class="hljs-number">0</span>], index_col = <span class="hljs-number">0</span>, squeeze = <span class="hljs-literal">True</span>, <br>date_parser = date_parser)<br><span class="hljs-comment"># 时序图</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]     <span class="hljs-comment"># 用来正常显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>    <span class="hljs-comment"># 用来正常显示负号</span><br>plt.plot(data)<br>plt.legend()<br>plt.show()<br><span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_acf<br>plot_acf(data).show()<br>plt.show()<br><span class="hljs-comment"># ADF单位根检测方法</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.stattools <span class="hljs-keyword">import</span> adfuller <span class="hljs-keyword">as</span> ADF<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始序列的ADF检验结果为：&#x27;</span>, ADF(data))      <span class="hljs-comment"># 返回值依次为adf、p值等</span><br><span class="hljs-comment"># 差分操作</span><br>Date_data = data.diff().dropna()<br>plt.plot(Date_data)               <span class="hljs-comment"># 差分序列的时序图</span><br>plt.show()<br><span class="hljs-comment">#差分序列的平稳性检验</span><br>plot_acf(Date_data).show()       <span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_pacf<br>plot_pacf(Date_data).show()     <span class="hljs-comment"># 偏自相关图</span><br>plt.show()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;差分序列的ADF检验结果为：&#x27;</span>, ADF(Date_data))     <span class="hljs-comment">#ADF单位根检测方法</span><br><br><br><span class="hljs-comment"># ==== 代码10-4.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> datetime<br>file = <span class="hljs-string">&#x27;./data/shampoo.csv&#x27;</span>          <span class="hljs-comment">#该数据放置在data文件夹下，读者可以自行定义</span><br><span class="hljs-comment">#函数：日期数据解析</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">date_parser</span> (x):<br>    <span class="hljs-keyword">return</span> datetime.strptime(<span class="hljs-string">&#x27;190&#x27;</span>+x, <span class="hljs-string">&#x27;%Y-%m&#x27;</span>)<br>data = pd.read_csv(file, header = <span class="hljs-number">0</span>, parse_dates = [<span class="hljs-number">0</span>], index_col = <span class="hljs-number">0</span>, squeeze = <span class="hljs-literal">True</span>, <br>date_parser = date_parser)<br><span class="hljs-comment"># 时序图</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]     <span class="hljs-comment"># 用来正常显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>    <span class="hljs-comment"># 用来正常显示负号</span><br>plt.plot(data)<br>plt.legend()<br>plt.show()<br><span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_acf<br>plot_acf(data).show()<br>plt.show()<br><span class="hljs-comment"># ADF单位根检测方法</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.stattools <span class="hljs-keyword">import</span> adfuller <span class="hljs-keyword">as</span> ADF<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始序列的ADF检验结果为：&#x27;</span>, ADF(data))      <span class="hljs-comment"># 返回值依次为adf、p值等</span><br><span class="hljs-comment"># 差分操作</span><br>Date_data = data.diff().dropna()<br>plt.plot(Date_data)               <span class="hljs-comment"># 差分序列的时序图</span><br>plt.show()<br><span class="hljs-comment">#差分序列的平稳性检验</span><br>plot_acf(Date_data).show()       <span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_pacf<br>plot_pacf(Date_data).show()     <span class="hljs-comment"># 偏自相关图</span><br>plt.show()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;差分序列的ADF检验结果为：&#x27;</span>, ADF(Date_data))     <span class="hljs-comment">#ADF单位根检测方法</span><br><span class="hljs-comment"># 纯随机性检验</span><br><span class="hljs-keyword">from</span> statsmodels.stats.diagnostic <span class="hljs-keyword">import</span> acorr_ljungbox<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;差分序列的白噪声检验结果为：&#x27;</span>, acorr_ljungbox(Date_data, lags = <span class="hljs-number">1</span>))  <br><span class="hljs-comment"># 分别返回LB统计量和p值</span><br><br><br><span class="hljs-comment"># ==== 代码10-5.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> datetime<br>file = <span class="hljs-string">&#x27;./data/shampoo.csv&#x27;</span>          <span class="hljs-comment">#该数据放置在data文件夹下，读者可以自行定义</span><br><span class="hljs-comment">#函数：日期数据解析</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">date_parser</span> (x):<br>    <span class="hljs-keyword">return</span> datetime.strptime(<span class="hljs-string">&#x27;190&#x27;</span>+x, <span class="hljs-string">&#x27;%Y-%m&#x27;</span>)<br>data = pd.read_csv(file, header = <span class="hljs-number">0</span>, parse_dates = [<span class="hljs-number">0</span>], index_col = <span class="hljs-number">0</span>, squeeze = <span class="hljs-literal">True</span>, <br>date_parser = date_parser)<br><span class="hljs-comment"># 时序图</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]     <span class="hljs-comment"># 用来正常显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span>    <span class="hljs-comment"># 用来正常显示负号</span><br>plt.plot(data)<br>plt.legend()<br>plt.show()<br><span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_acf<br>plot_acf(data).show()<br>plt.show()<br><span class="hljs-comment"># ADF单位根检测方法</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.stattools <span class="hljs-keyword">import</span> adfuller <span class="hljs-keyword">as</span> ADF<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始序列的ADF检验结果为：&#x27;</span>, ADF(data))      <span class="hljs-comment"># 返回值依次为adf、p值等</span><br><span class="hljs-comment"># 差分操作</span><br>Date_data = data.diff().dropna()<br>plt.plot(Date_data)               <span class="hljs-comment"># 差分序列的时序图</span><br>plt.show()<br><span class="hljs-comment">#差分序列的平稳性检验</span><br>plot_acf(Date_data).show()       <span class="hljs-comment"># 自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_pacf<br>plot_pacf(Date_data).show()     <span class="hljs-comment"># 偏自相关图</span><br>plt.show()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;差分序列的ADF检验结果为：&#x27;</span>, ADF(Date_data))     <span class="hljs-comment">#ADF单位根检测方法</span><br><span class="hljs-comment"># 纯随机性检验</span><br><span class="hljs-keyword">from</span> statsmodels.stats.diagnostic <span class="hljs-keyword">import</span> acorr_ljungbox<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;差分序列的白噪声检验结果为：&#x27;</span>, acorr_ljungbox(Date_data, lags = <span class="hljs-number">1</span>))  <br><span class="hljs-comment"># 分别返回LB统计量和p值</span><br><span class="hljs-comment"># 模型定阶：相对最优模型法</span><br><span class="hljs-comment">#from statsmodels.tsa.arima.model import ARIMA</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.arima_model <span class="hljs-keyword">import</span> ARIMA<br>data = data.astype(<span class="hljs-built_in">float</span>)<br>pmax = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(Date_data) /<span class="hljs-number">10</span>)     <span class="hljs-comment"># 阶数p不超过序列长度的1/10</span><br>qmax = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(Date_data) /<span class="hljs-number">10</span>)     <span class="hljs-comment"># 阶数q不超过序列长度的1/10</span><br>bic_matrix = []                  <span class="hljs-comment"># BIC矩阵</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(pmax + <span class="hljs-number">1</span>):<br>  tmp = []<br>  <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(qmax + <span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">try</span>:                       <span class="hljs-comment"># 错误处理块</span><br>      tmp.append(ARIMA(data.values, order=(x,<span class="hljs-number">1</span>,y)).fit().bic)<br>    <span class="hljs-keyword">except</span>:<br>      tmp.append(<span class="hljs-literal">None</span>)<br>  bic_matrix.append(tmp)<br>bic_matrix = pd.DataFrame(bic_matrix) <br><span class="hljs-built_in">print</span>(bic_matrix)<br>p,q = bic_matrix.stack().idxmin()      <span class="hljs-comment">#找出最小值位置</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;BIC最小的p值和q值为：%s、%s&#x27;</span> % (p,q))<br><br><br><span class="hljs-comment"># ==== 代码11-1.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.datasets._samples_generator <span class="hljs-keyword">import</span>  make_blobs<br><span class="hljs-comment">#函数：生成数据集</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_data</span>(<span class="hljs-params">n_normal = <span class="hljs-number">500</span>, n_anomaly = <span class="hljs-number">20</span></span>):<br>    X_normal, Y_normal = make_blobs(n_samples = n_normal, centers = [[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]],<br>                                    cluster_std = <span class="hljs-number">0.8</span>, random_state = <span class="hljs-number">5</span>)  <br>    X_anomaly = np.random.rand(n_anomaly, <span class="hljs-number">2</span>) * <span class="hljs-number">10</span> - <span class="hljs-number">5</span><br>    Y_anomaly = np.zeros(n_anomaly)<br>    X = np.vstack([X_normal, X_anomaly])<br>    Y = np.hstack([Y_normal, [<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(X_anomaly.shape[<span class="hljs-number">0</span>])]])<br>    <span class="hljs-keyword">return</span> X, Y<br><span class="hljs-comment">#函数：计算数据在正态分布上的概率值</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">multivariate_Gaussian</span>(<span class="hljs-params">X, mu, sigma</span>):<br>    d = <span class="hljs-built_in">len</span>(mu)                      <span class="hljs-comment">#特征维度</span><br>    X -= mu.T<br>    cov_mat_inv = np.linalg.pinv(sigma)<br>    cov_mat_det = np.linalg.det(sigma)<br>    p = (np.exp(-<span class="hljs-number">0.5</span> * np.dot(X, np.dot(cov_mat_inv, X.T)))<br>        / (<span class="hljs-number">2.</span> * np.pi) ** (d/<span class="hljs-number">2.</span>) / np.sqrt(cov_mat_det))<br>    <span class="hljs-keyword">return</span> p<br><span class="hljs-comment">#获得人工合成数据集</span><br>X, Y = generate_data()<br><span class="hljs-comment">#计算均值和协方差，设置全局阈值（经验给定）</span><br>mu = X.mean(axis = <span class="hljs-number">0</span>)<br>sigma = np.cov(X.T)<br>threshold = <span class="hljs-number">0.0025</span><br><span class="hljs-comment">#计算每个训练样本的概率</span><br>pro = []<br><span class="hljs-keyword">for</span> i, _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(X):<br>    p = multivariate_Gaussian(X[i], mu, sigma)<br>    pro += [p]<br>pro = np.array(pro)<br><span class="hljs-comment">#识别异常对象，并绘图显示</span><br>anomaly_index = (pro &lt;= threshold)<br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>))<br>predict_anomaly = X[anomaly_index]<br>predict_normal = X[~anomaly_index]<br>plt.scatter(predict_normal[:, <span class="hljs-number">0</span>], predict_normal[:, <span class="hljs-number">1</span>],<br>            s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;o&#x27;</span>, alpha = <span class="hljs-number">0.6</span>)<br>plt.scatter(predict_anomaly[:, <span class="hljs-number">0</span>], predict_anomaly[:, <span class="hljs-number">1</span>], <br>            s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;x&#x27;</span>, c = <span class="hljs-string">&#x27;r&#x27;</span>)<br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码11-2.py ====</span><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.datasets._samples_generator <span class="hljs-keyword">import</span>  make_blobs<br><span class="hljs-comment">#函数：生成数据集</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_data</span>(<span class="hljs-params">n_normal = <span class="hljs-number">500</span>, n_anomaly = <span class="hljs-number">20</span></span>):<br>    X_normal, Y_normal = make_blobs(n_samples = n_normal, centers = [[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]],<br>                                    cluster_std = <span class="hljs-number">0.8</span>, random_state = <span class="hljs-number">5</span>)  <br>    X_anomaly = np.random.rand(n_anomaly, <span class="hljs-number">2</span>) * <span class="hljs-number">10</span> - <span class="hljs-number">5</span><br>    Y_anomaly = np.zeros(n_anomaly)<br>    X = np.vstack([X_normal, X_anomaly])<br>    Y = np.hstack([Y_normal, [<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(X_anomaly.shape[<span class="hljs-number">0</span>])]])<br>    <span class="hljs-keyword">return</span> X, Y<br><span class="hljs-comment">#函数：计算数据在正态分布上的概率值</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">multivariate_Gaussian</span>(<span class="hljs-params">X, mu, sigma</span>):<br>    d = <span class="hljs-built_in">len</span>(mu)                      <span class="hljs-comment">#特征维度</span><br>    X -= mu.T<br>    cov_mat_inv = np.linalg.pinv(sigma)<br>    cov_mat_det = np.linalg.det(sigma)<br>    p = (np.exp(-<span class="hljs-number">0.5</span> * np.dot(X, np.dot(cov_mat_inv, X.T)))<br>        / (<span class="hljs-number">2.</span> * np.pi) ** (d/<span class="hljs-number">2.</span>) / np.sqrt(cov_mat_det))<br>    <span class="hljs-keyword">return</span> p<br><span class="hljs-comment">#获得人工合成数据集</span><br>X, Y = generate_data()<br><span class="hljs-comment">#计算均值和协方差，设置全局阈值（经验给定）</span><br>mu = X.mean(axis = <span class="hljs-number">0</span>)<br>sigma = np.cov(X.T)<br>threshold = <span class="hljs-number">0.0025</span><br><span class="hljs-comment">#计算每个训练样本的概率</span><br>pro = []<br><span class="hljs-keyword">for</span> i, _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(X):<br>    p = multivariate_Gaussian(X[i], mu, sigma)<br>    pro += [p]<br>pro = np.array(pro)<br><span class="hljs-comment">#识别异常对象，并绘图显示</span><br>anomaly_index = (pro &lt;= threshold)<br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>))<br>predict_anomaly = X[anomaly_index]<br>predict_normal = X[~anomaly_index]<br>plt.scatter(predict_normal[:, <span class="hljs-number">0</span>], predict_normal[:, <span class="hljs-number">1</span>],<br>            s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;o&#x27;</span>, alpha = <span class="hljs-number">0.6</span>)<br>plt.scatter(predict_anomaly[:, <span class="hljs-number">0</span>], predict_anomaly[:, <span class="hljs-number">1</span>], <br>            s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;x&#x27;</span>, c = <span class="hljs-string">&#x27;r&#x27;</span>)<br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><span class="hljs-keyword">from</span> sklearn.cluster <span class="hljs-keyword">import</span> DBSCAN<br>model = DBSCAN(eps = <span class="hljs-number">0.4</span>, min_samples = <span class="hljs-number">4</span>)     <span class="hljs-comment"># DBSCAN聚类建模</span><br><span class="hljs-comment"># 根据DBSCAN的聚类结果识别异常点（DBSCAN将-1类作为异常点的）</span><br>Y_pred = model.fit_predict(X)<br>anomaly_index = (Y_pred == -<span class="hljs-number">1</span>)<br>X_anomaly = X[anomaly_index]<br>X_normal = X[~anomaly_index]<br><span class="hljs-comment">#绘图</span><br>plt.figure(figsize = (<span class="hljs-number">6</span>, <span class="hljs-number">4</span>))<br>plt.scatter(X_normal[:, <span class="hljs-number">0</span>], X_normal[:, <span class="hljs-number">1</span>],  s=<span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;o&#x27;</span>, alpha = <span class="hljs-number">0.6</span>)<br>plt.scatter(X_anomaly[:, <span class="hljs-number">0</span>], X_anomaly[:, <span class="hljs-number">1</span>],  s = <span class="hljs-number">60</span>, marker = <span class="hljs-string">&#x27;x&#x27;</span>, c = <span class="hljs-string">&#x27;r&#x27;</span>)<br>plt.grid(<span class="hljs-literal">True</span>, which = <span class="hljs-string">&#x27;major&#x27;</span>, linestyle = <span class="hljs-string">&#x27;--&#x27;</span>, linewidth = <span class="hljs-number">1</span>)<br>plt.show()<br><br><br><span class="hljs-comment"># ==== 代码11-3.py ====</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>data = pd.read_csv(<span class="hljs-string">&#x27;./creditcard.csv&#x27;</span>,encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>)<br><span class="hljs-comment"># 绘制柱状图，查看两个类别的数量</span><br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;SimHei&#x27;</span>]<br>count_classes = pd.value_counts(data[<span class="hljs-string">&#x27;Class&#x27;</span>], sort = <span class="hljs-literal">False</span>)<br>plt.figure(figsize=(<span class="hljs-number">12</span>,<span class="hljs-number">8</span>))<br>plt.bar([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>], count_classes, width=<span class="hljs-number">0.6</span>)<br>plt.xticks([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>], [<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>], fontsize=<span class="hljs-number">20</span>)<br>plt.yticks(fontsize=<span class="hljs-number">20</span>)<br>plt.title (<span class="hljs-string">&quot;不同类别的数量&quot;</span>,fontsize=<span class="hljs-number">20</span>)<br>plt.xlabel (<span class="hljs-string">&quot;Class&quot;</span>,fontsize=<span class="hljs-number">20</span>)<br>plt.ylabel (<span class="hljs-string">&quot;Frequency&quot;</span>,fontsize=<span class="hljs-number">20</span>)<br>plt.show()<br><span class="hljs-comment">#查看是否有缺失值</span><br><span class="hljs-built_in">print</span>(data.isnull().<span class="hljs-built_in">sum</span>())<br><span class="hljs-comment">#查看数据的描述性统计信息</span><br><span class="hljs-built_in">print</span>(data.describe())<br><br><br><span class="hljs-comment"># ==== 代码11-4.py ====</span><br><br><span class="hljs-keyword">from</span> pyod.models.iforest <span class="hljs-keyword">import</span> IForest  <span class="hljs-comment">#孤立森林</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> confusion_matrix<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><span class="hljs-comment">#划分训练集和测试</span><br>X = data.iloc[:, data.columns != <span class="hljs-string">&#x27;Class&#x27;</span>]<br>y = data.iloc[:, data.columns == <span class="hljs-string">&#x27;Class&#x27;</span>]<br>X_train, X_test, y_train, y_test = train_test_split (X, y, test_size = <span class="hljs-number">0.3</span>, <br>random_state= <span class="hljs-number">123456</span>, stratify = y)<br><span class="hljs-comment">#创建IForest模型</span><br>iforest = IForest(n_estimators = <span class="hljs-number">300</span>, contamination = <span class="hljs-number">0.00172</span>)<br>iforest.fit(X_train)<br><span class="hljs-comment"># 得到测试结果</span><br>y_test_pred = iforest.predict(X_test)            <span class="hljs-comment"># 预测的类别标签</span><br>y_test_scores = iforest.decision_function(X_test)  <span class="hljs-comment">#预测的属于异常的概率</span><br><span class="hljs-comment"># 混淆矩阵绘图函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_confusion_matrix</span>(<span class="hljs-params">cm, title = <span class="hljs-string">&quot;Confusion Matrix&quot;</span></span>):<br>    sns.<span class="hljs-built_in">set</span>()<br>    f,ax=plt.subplots()<br>    sns.heatmap(cm, annot = <span class="hljs-literal">True</span>, ax = ax, cmap = <span class="hljs-string">&quot;Blues&quot;</span>, fmt = <span class="hljs-string">&quot;4d&quot;</span>)<br>    ax.set_title(<span class="hljs-string">&quot;confusion matrix&quot;</span>)<br>    ax.set_xlabel(<span class="hljs-string">&quot;predict&quot;</span>)<br>    ax.set_ylabel(<span class="hljs-string">&quot;true&quot;</span>)  <br>    plt.show()<br><span class="hljs-comment">#绘制混淆矩阵</span><br>cm= confusion_matrix(y_test, y_test_pred1, labels = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>])<br>plot_confusion_matrix(cm)<br><br><br><span class="hljs-comment"># ==== 代码12-1.py ====</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-comment">#评分数据读取</span><br>file_path = <span class="hljs-string">&#x27;./ml-1m/&#x27;</span><br>file_rating = <span class="hljs-built_in">open</span>(file_path+<span class="hljs-string">&#x27;ratings.dat&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,encoding = <span class="hljs-string">&quot;ISO-8859-1&quot;</span>)<br>data = file_rating.read()<br>data = data.split(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>file_rating.close()<br>train_data, test_data = train_test_split(data, test_size = <span class="hljs-number">0.2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;训练数据数据量：&#x27;</span>+ <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(train_data)))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据数据量：&#x27;</span>+ <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(test_data)))<br>CF_matrix = np.zeros((<span class="hljs-number">6040</span>,<span class="hljs-number">3952</span>))      <span class="hljs-comment">#最大用户ID为6040 ,最大电影ID为3952</span><br><span class="hljs-keyword">for</span> each_data <span class="hljs-keyword">in</span> train_data:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(each_data) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">break</span><br>    str_temp = each_data.split(<span class="hljs-string">&#x27;::&#x27;</span>)      <span class="hljs-comment">#分割数据</span><br>    user_id_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">0</span>]) - <span class="hljs-number">1</span>   <span class="hljs-comment">#将用户ID从0开始编码</span><br>    movies_id_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span> <span class="hljs-comment">#将电影ID从0开始编码</span><br>    rating_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">2</span>])       <span class="hljs-comment">#读取评分</span><br>    CF_matrix[user_id_temp][movies_id_temp] = rating_temp   <span class="hljs-comment">#填充矩阵</span><br><span class="hljs-comment">#余弦相似度函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sim_cosine</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">if</span> np.linalg.norm(x) == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> np.linalg.norm(y) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> np.<span class="hljs-built_in">sum</span>(x*y) / np.linalg.norm(x) / np.linalg.norm(y)<br><span class="hljs-comment">#计算用户相似度</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;计算用户相似度矩阵：&quot;</span>)<br>user_cross_sim = np.zeros((<span class="hljs-number">6040</span>, <span class="hljs-number">6040</span>))      <span class="hljs-comment">#矩阵初始化</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(CF_matrix.shape[<span class="hljs-number">0</span>])):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, CF_matrix.shape[<span class="hljs-number">0</span>]):<br>        user_cross_sim[i, j] = sim_cosine(CF_matrix[i, :], CF_matrix[j, :]) <span class="hljs-comment">#使用余弦相似度</span><br>        user_cross_sim[j, i] = user_cross_sim[i, j]<br><span class="hljs-comment">#评分预测函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">predict_rating</span>(<span class="hljs-params">user_id, movies_id</span>):<br>    sum_w = <span class="hljs-number">0</span><br>    sum_w_rating = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6040</span>):<br>        <span class="hljs-keyword">if</span> CF_matrix[i, movies_id] != <span class="hljs-number">0</span>:<br>            sum_w += user_cross_sim[user_id, i]<br>            sum_w_rating += user_cross_sim[user_id, i]*CF_matrix[i, movies_id]<br>    <span class="hljs-keyword">return</span> sum_w_rating / sum_w<br>mae = <span class="hljs-number">0</span><br><span class="hljs-comment">#在测试集上对推荐模型的性能进行评价（MAE）</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(test_data)):<br>    temp_i = train_data[i]<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(temp_i) == <span class="hljs-number">0</span>:              <span class="hljs-comment">#结束</span><br>        <span class="hljs-keyword">break</span><br>    str_temp = temp_i.split(<span class="hljs-string">&#x27;::&#x27;</span>)<br>    user_id_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">0</span>]) - <span class="hljs-number">1</span><br>    movies_id_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span><br>    rating_temp = <span class="hljs-built_in">int</span>(str_temp[<span class="hljs-number">2</span>])<br>    rating_pre = predict_rating(user_id_temp, movies_id_temp)<br>    rating_pre = <span class="hljs-built_in">int</span>(rating_pre + <span class="hljs-number">0.5</span>)<br>    mae += <span class="hljs-built_in">abs</span>(rating_temp-rating_pre)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;推荐模型的平均绝对误差:&#x27;</span> + <span class="hljs-built_in">str</span>(mae / (i + <span class="hljs-number">1</span>)))<br><span class="hljs-comment">#对用户1进行电影推荐</span><br>rating_pre_list = []<br>user_id_1 = <span class="hljs-number">0</span><br><span class="hljs-comment">#通过预测的评分矩阵对用户1的评分序列排序，选取前五只属性为其未观看的电影。</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">3952</span>):<br>    <span class="hljs-comment">#最大电影ID为3952</span><br>    rating_pre = predict_rating(user_id_1, i)<br>rating_pre_list.append(rating_pre)<br>rating_pre_list_1 = <span class="hljs-built_in">sorted</span>(rating_pre_list, reverse = <span class="hljs-literal">True</span>)<br><span class="hljs-comment">#输出评分top5的未观看电影</span><br>top5 = []<br>count_num = <span class="hljs-number">5</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> rating_pre_list_1:<br>    movies_id_temp = rating_pre_list.index(i)<br>    <span class="hljs-keyword">if</span> CF_matrix[user_id_1, movies_id_temp] == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">try</span>:<br>            top5.index(movies_id_temp)<br>        <span class="hljs-keyword">except</span> ValueError:<br>            top5.append(movies_id_temp)<br>            count_num -= <span class="hljs-number">1</span><br>            rating_pre_list.pop(movies_id_temp)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> count_num &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">break</span>  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;为用户1推荐的评分前五未观看电影为：&quot;</span>, top5)  <br><br><br><br></code></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="1-ud-pearsonr-X-y"><a href="#1-ud-pearsonr-X-y" class="headerlink" title="1.ud_pearsonr(X, y)"></a>1.ud_pearsonr(X, y)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 封装的皮尔森相关系数计算函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ud_pearsonr</span>(<span class="hljs-params">X, y</span>):  <br>    result = np.array([pearsonr(x, y) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> X.T])     <span class="hljs-comment"># 返回皮尔森相关系数, p值</span><br>    <span class="hljs-keyword">return</span> np.absolute(result[:, <span class="hljs-number">0</span>]), result[:, <span class="hljs-number">1</span>] <br></code></pre></td></tr></table></figure><p>这段代码定义了一个名为 <code>ud_pearsonr</code> 的函数，用于计算特征矩阵 <code>X</code> 中的每一列与目标变量 <code>y</code> 之间的皮尔森相关系数。以下是对代码的详细解释：</p><p>代码解释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 封装的皮尔森相关系数计算函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ud_pearsonr</span>(<span class="hljs-params">X, y</span>):  <br>    result = np.array([pearsonr(x, y) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> X.T])     <span class="hljs-comment"># 返回皮尔森相关系数, p值</span><br>    <span class="hljs-keyword">return</span> np.absolute(result[:, <span class="hljs-number">0</span>]), result[:, <span class="hljs-number">1</span>] <br></code></pre></td></tr></table></figure><ol><li>函数定义</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">ud_pearsonr</span>(<span class="hljs-params">X, y</span>):<br></code></pre></td></tr></table></figure><ul><li><code>ud_pearsonr</code> 是函数的名称。</li><li><code>X</code> 是特征矩阵，形状为 <code>(n_samples, n_features)</code>，其中 <code>n_samples</code> 是样本数量，<code>n_features</code> 是特征数量。</li><li><code>y</code> 是目标变量，形状为 <code>(n_samples,)</code>。</li></ul><ol start="2"><li>计算皮尔森相关系数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">result = np.array([pearsonr(x, y) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> X.T])<br></code></pre></td></tr></table></figure><ul><li><code>X.T</code> 是特征矩阵 <code>X</code> 的转置，形状为 <code>(n_features, n_samples)</code>。这样做是为了方便对每一列（即每个特征）进行操作。</li><li><code>pearsonr(x, y)</code> 是 <code>scipy.stats</code> 模块中的函数，用于计算两个变量之间的皮尔森相关系数及其 p 值。</li><li><code>[pearsonr(x, y) for x in X.T]</code> 是一个列表推导式，对 <code>X.T</code> 中的每一列 <code>x</code> 计算其与 <code>y</code> 的皮尔森相关系数和 p 值。</li><li><code>np.array(...)</code> 将列表转换为 NumPy 数组，形状为 <code>(n_features, 2)</code>，其中每行包含一个特征的皮尔森相关系数和 p 值。</li></ul><ol start="3"><li>返回结果</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">return</span> np.absolute(result[:, <span class="hljs-number">0</span>]), result[:, <span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><ul><li><code>result[:, 0]</code> 提取皮尔森相关系数，形状为 <code>(n_features,)</code>。</li><li><code>np.absolute(...)</code> 计算相关系数的绝对值，因为相关系数的正负只表示方向，绝对值表示相关性的强度。</li><li><code>result[:, 1]</code> 提取 p 值，形状为 <code>(n_features,)</code>。</li><li>函数返回两个数组：一个是皮尔森相关系数的绝对值，另一个是 p 值。</li></ul><p>总结</p><p>这个函数的主要作用是计算特征矩阵 <code>X</code> 中的每一列与目标变量 <code>y</code> 之间的皮尔森相关系数，并返回相关系数的绝对值和对应的 p 值。这些值可以用于特征选择，帮助识别哪些特征与目标变量最相关。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Python数据挖掘实战&quot;&gt;&lt;a href=&quot;#Python数据挖掘实战&quot; class=&quot;headerlink&quot; title=&quot;Python数据挖掘实战&quot;&gt;&lt;/a&gt;Python数据挖掘实战&lt;/h1&gt;&lt;h2 id=&quot;课本代码&quot;&gt;&lt;a href=&quot;#课本代码&quot; cla</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="数据挖掘" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop大数据技术与应用</title>
    <link href="http://example.com/2024/09/02/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2024/09/02/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2024-09-02T05:39:00.000Z</published>
    <updated>2025-02-13T03:38:47.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hadoop课本代码讲解"><a href="#hadoop课本代码讲解" class="headerlink" title="hadoop课本代码讲解"></a>hadoop课本代码讲解</h1><h2 id="第2章-Hadoop集群的搭建及配置"><a href="#第2章-Hadoop集群的搭建及配置" class="headerlink" title="第2章 Hadoop集群的搭建及配置"></a>第2章 Hadoop集群的搭建及配置</h2><h3 id="任务2-1示例代码"><a href="#任务2-1示例代码" class="headerlink" title="任务2.1示例代码"></a>任务2.1示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">2</span>-<span class="hljs-number">1</span> ifcfg-ens33文件原有的内容<br>TYPE=<span class="hljs-string">&quot;Ethernet&quot;</span><br>PROXY_METHOD=<span class="hljs-string">&quot;none&quot;</span><br>BROWSER_ONLY=<span class="hljs-string">&quot;no&quot;</span><br>BOOTPROTO=<span class="hljs-string">&quot;dhcp&quot;</span><br>DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV4_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6INIT=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_AUTOCONF=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6_ADDR_GEN_MODE=<span class="hljs-string">&quot;stable-privacy&quot;</span><br>NAME=<span class="hljs-string">&quot;ens33&quot;</span><br>UUID=<span class="hljs-string">&quot;6c2a466f-a4b0-4f29-aeee-8ea96252aee4&quot;</span><br>DEVICE=<span class="hljs-string">&quot;ens33&quot;</span><br>ONBOOT=<span class="hljs-string">&quot;no&quot;</span><br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">2</span> 修改ifcfg-ens33文件后的内容<br>TYPE=<span class="hljs-string">&quot;Ethernet&quot;</span><br>PROXY_METHOD=<span class="hljs-string">&quot;none&quot;</span><br>BROWSER_ONLY=<span class="hljs-string">&quot;no&quot;</span><br>BOOTPROTO=<span class="hljs-string">&quot;static&quot;</span><br>DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV4_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6INIT=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_AUTOCONF=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6_ADDR_GEN_MODE=<span class="hljs-string">&quot;stable-privacy&quot;</span><br>NAME=<span class="hljs-string">&quot;ens33&quot;</span><br>UUID=<span class="hljs-string">&quot;6c2a466f-a4b0-4f29-aeee-8ea96252aee4&quot;</span><br>DEVICE=<span class="hljs-string">&quot;ens33&quot;</span><br>ONBOOT=<span class="hljs-string">&quot;yes&quot;</span><br># 添加内容<br>IPADDR=<span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.130</span><br>GATEWAY=<span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.2</span><br>NETMASK=<span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span><br>DNS1=<span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">3</span> 将除yum本地源以外的其他yum源禁用<br>mv CentOS-Base.repo CentOS-Base.repo.bak<br>mv CentOS-Debuginfo.repo CentOS-Debuginfo.repo.bak<br>mv CentOS-fasttrack.repo CentOS-fasttrack.repo.bak<br>mv CentOS-Vault.repo CentOS-Vault.repo.bak<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">4</span> CentOS-Media.repo修改前的内容<br>[c7-media]<br>name=CentOS-$releasever - Media<br>baseurl=file:<span class="hljs-comment">///media/CentOS/</span><br>        file:<span class="hljs-comment">///media/cdrom/</span><br>        file:<span class="hljs-comment">///media/cdrecorder/</span><br>gpgcheck=<span class="hljs-number">1</span><br>enabled=<span class="hljs-number">0</span><br>gpgkey=file:<span class="hljs-comment">///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">5</span> CentOS-Media.repo修改后的内容<br>[c7-media]<br>name=CentOS-$releasever - Media<br>baseurl=file:<span class="hljs-comment">///media/</span><br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br>gpgkey=file:<span class="hljs-comment">///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></code></pre></td></tr></table></figure><h3 id="任务2-2示例代码"><a href="#任务2-2示例代码" class="headerlink" title="任务2.2示例代码"></a>任务2.2示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">2</span>-<span class="hljs-number">6</span> 修改core-site.xml<br>&lt;configuration&gt;<br>    &lt;property&gt;<br>    &lt;name&gt;fs.defaultFS&lt;/name&gt;<br>      &lt;value&gt;hdfs:<span class="hljs-comment">//master:8020&lt;/value&gt;</span><br>      &lt;/property&gt;<br>    &lt;property&gt;<br>      &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;<br>      &lt;value&gt;/<span class="hljs-keyword">var</span>/log/hadoop/tmp&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">7</span> 修改hadoop-env.sh<br>export JAVA_HOME=/usr/java/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_281</span>-amd64<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">8</span> 修改yarn-env.sh文件<br># export JAVA_HOME=/home/y/libexec/jdk1<span class="hljs-number">.6</span><span class="hljs-number">.0</span>/<br>export JAVA_HOME=/usr/java/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_281</span>-amd64<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">9</span> mapred-site.xml文件添加的内容<br>&lt;configuration&gt;<br>&lt;property&gt;<br>    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;<br>    &lt;value&gt;yarn&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;!-- jobhistory properties --&gt;<br>&lt;property&gt;<br>    &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;<br>    &lt;value&gt;master:<span class="hljs-number">10020</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>     &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;<br>     &lt;value&gt;master:<span class="hljs-number">19888</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">10</span> yarn-site.xml文件修改的内容<br>&lt;configuration&gt;<br>&lt;!-- Site specific YARN configuration properties --&gt;<br>&lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;<br>    &lt;value&gt;master&lt;/value&gt;<br>  &lt;/property&gt;    <br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8032</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8030</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8088</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8090</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8031</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;<br>    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:<span class="hljs-number">8033</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.nodemanager.local-dirs&lt;/name&gt;<br>    &lt;value&gt;/data/hadoop/yarn/local&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.nodemanager.remote-app-log-dir&lt;/name&gt;<br>    &lt;value&gt;/data/tmp/logs&lt;/value&gt;<br>  &lt;/property&gt;<br>&lt;property&gt; <br> &lt;name&gt;yarn.log.server.url&lt;/name&gt; <br> &lt;value&gt;http:<span class="hljs-comment">//master:19888/jobhistory/logs/&lt;/value&gt;</span><br> &lt;description&gt;URL <span class="hljs-keyword">for</span> job history server&lt;/description&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>   &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">false</span>&lt;/value&gt;<br>  &lt;/property&gt;<br> &lt;property&gt;<br>    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;<br>    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;<br>      &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;<br>      &lt;/property&gt;<br>&lt;property&gt;  <br>        &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;  <br>        &lt;value&gt;<span class="hljs-number">2048</span>&lt;/value&gt;  <br> &lt;/property&gt;  <br> &lt;property&gt;  <br>        &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt;  <br>        &lt;value&gt;<span class="hljs-number">512</span>&lt;/value&gt;  <br> &lt;/property&gt;   <br> &lt;property&gt;  <br>        &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;  <br>        &lt;value&gt;<span class="hljs-number">4096</span>&lt;/value&gt;  <br> &lt;/property&gt; <br> &lt;property&gt; <br>    &lt;name&gt;mapreduce.map.memory.mb&lt;/name&gt; <br>    &lt;value&gt;<span class="hljs-number">2048</span>&lt;/value&gt; <br> &lt;/property&gt; <br> &lt;property&gt; <br>    &lt;name&gt;mapreduce.reduce.memory.mb&lt;/name&gt; <br>    &lt;value&gt;<span class="hljs-number">2048</span>&lt;/value&gt; <br> &lt;/property&gt; <br> &lt;property&gt; <br>    &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt; <br>    &lt;value&gt;<span class="hljs-number">1</span>&lt;/value&gt; <br> &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">11</span> 修改workers文件<br>slave1<br>slave2<br>slave3<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">12</span> 修改hdfs-site.xml文件<br>&lt;configuration&gt;<br>&lt;property&gt;<br>    &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;<br>    &lt;value&gt;file:<span class="hljs-comment">///data/hadoop/hdfs/name&lt;/value&gt;</span><br>&lt;/property&gt;<br>&lt;property&gt;<br>    &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;<br>    &lt;value&gt;file:<span class="hljs-comment">///data/hadoop/hdfs/data&lt;/value&gt;</span><br>&lt;/property&gt;<br>&lt;property&gt;<br>     &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;<br>     &lt;value&gt;master:<span class="hljs-number">50090</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>     &lt;name&gt;dfs.replication&lt;/name&gt;<br>     &lt;value&gt;<span class="hljs-number">3</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">13</span> 修改start-dfs.sh和stop-dfs.sh文件<br>HDFS_DATANODE_USER=root<br>HADOOP_SECURE_DN_USER=hdfs<br>HDFS_NAMENODE_USER=root<br>HDFS_SECONDARYNAMENODE_USER=root<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">14</span> 修改start-yarn.sh和stop-yarn.sh文件<br>YARN_RESOURCEMANAGER_USER=root<br>HADOOP_SECURE_DN_USER=yarn<br>YARN_NODEMANAGER_USER=root<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">15</span> 修改/etc/hosts文件<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.130</span> master master.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.131</span> slave1 slave1.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.132</span> slave2 slave2.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.133</span> slave3 slave3.centos.com<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">16</span> 修改slave1的ifcfg-ens33文件的IPADDR<br>IPADDR=<span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.131</span><br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">17</span> 重启网络服务和查看IP<br># 重启网络服务<br>systemctl restart network<br># 查看IP<br>ip addr<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">18</span> 修改slave1的主机名称<br># 修改slave1的主机名称<br>hostnamectl set-hostname slave1<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">19</span> 将公钥复制到远程机器中的命令<br># 依次输入yes,<span class="hljs-number">123456</span>（root用户的密码）<br>ssh-copy-id -i /root/.ssh/id_rsa.pub master<br>ssh-copy-id -i /root/.ssh/id_rsa.pub slave1<br>ssh-copy-id -i /root/.ssh/id_rsa.pub slave2<br>ssh-copy-id -i /root/.ssh/id_rsa.pub slave3<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">20</span> 修改master主节点的ntp.conf文件<br>restrict <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> mask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span> nomodify notrap<br>server <span class="hljs-number">127.127</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><br>fudge <span class="hljs-number">127.127</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span> stratum <span class="hljs-number">10</span><br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">21</span> 修改子节点的ntp.conf文件<br>server master<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">22</span> 设置环境变量<br>export HADOOP_HOME=/usr/local/hadoop-<span class="hljs-number">3.1</span><span class="hljs-number">.4</span><br>export JAVA HOME=/usr/java/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_281</span>-amd64<br>export PATH=$HADOOP_HOME/bin:$PATH:$JAVA_HOME/bin<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">23</span> 启动集群命令<br>cd $HADOOP_HOME  # 进入Hadoop安装目录<br>sbin/start-dfs.sh     # 启动HDFS相关服务<br>sbin/start-yarn.sh     # 启动YARN相关服务<br>sbin/mr-jobhistory-daemon.sh start historyserver  # 启动日志相关服务<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">24</span> 关闭集群命令<br>cd $HADOOP_HOME  # 进入Hadoop安装目录<br>sbin/stop-yarn.sh  # 关闭YARN相关服务<br>sbin/stop-dfs.sh  # 关闭HDFS相关服务<br>sbin/mr-jobhistory-daemon.sh stop historyserver  # 关闭日志相关服务<br><br>代码<span class="hljs-number">2</span>-<span class="hljs-number">25</span> 修改本地host文件<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.130</span> master master.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.131</span> slave1 slave1.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.132</span> slave2 slave2.centos.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.128</span><span class="hljs-number">.133</span> slave3 slave3.centos.com<br></code></pre></td></tr></table></figure><h2 id="第3章-Hadoop基础操作"><a href="#第3章-Hadoop基础操作" class="headerlink" title="第3章 Hadoop基础操作"></a>第3章 Hadoop基础操作</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs txt">代码3-1 创建目录命令<br>hdfs dfs -mkdir /user/dfstest<br><br>代码3-2 创建多级目录<br>hdfs dfs -mkdir -p /user/test/example<br><br>代码3-3 文件上传命令<br>hdfs dfs -copyFromLocal a.txt /user/dfstest<br>hdfs dfs -put a.txt /user/dfstest/c.txt<br>hdfs dfs -moveFromLocal a.txt /user/dfstest/b.txt<br><br>代码3-4 文件下载命令<br>hdfs dfs -copyToLocal /user/dfstest/a.txt /data/hdfs_test/<br>hdfs dfs -get /user/dfstest/c.txt /data/hdfs_test/<br><br>代码3-5 查看文件内容命令<br>hdfs dfs -cat /user/dfstest/a.txt<br>hdfs dfs -tail /user/dfstest/b.txt<br><br>代码3-6 删除文件命令<br>hdfs dfs -mkdir /user/dfstest/rmdir<br>hdfs dfs -rm /user/dfstest/c.txt<br>hdfs dfs -rmdir /user/dfstest/rmdir<br><br>代码3-7 上传email_log.txt至HDFS的/user/root/目录<br>hdfs dfs -put /root/hadoop/email_log.txt /user/root/<br><br>代码3-8 使用hadoop jar命令提交MapReduce任务命令<br>hadoop jar \<br>$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>wordcount \<br>/user/root/email_log.txt \<br>/user/root/output<br><br>代码3-9 执行统计登录次数程序的命令<br>hadoop jar \<br>$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>wordcount \<br>/user/root/email_log.txt \<br>/user/root/output<br><br>代码3-10 执行估算PI值的任务命令<br>hadoop jar \<br>/usr/local/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>pi \<br>10 \<br>100<br><br>代码3-11 统计用户登录次数的命令<br>hadoop jar  \<br>$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>wordcount \<br>/user/root/email_log.txt \<br>/user/root/output1<br><br>代码3-12 执行估算PI值的命令<br>hadoop jar \<br>/usr/local/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>pi \<br>10 \<br>100<br><br>代码3-13 估算PI值<br>hadoop jar \<br>/usr/local/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>pi \<br>30 \<br>5000<br><br>代码3-14 统计用户登录次数<br>hadoop jar \<br>$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar \<br>wordcount \<br>/user/root/email_log.txt \<br>/user/root/output2<br><br></code></pre></td></tr></table></figure><h2 id="第4章-MapReduce编程入门"><a href="#第4章-MapReduce编程入门" class="headerlink" title="第4章 MapReduce编程入门"></a>第4章 MapReduce编程入门</h2><h3 id="任务实现4-2"><a href="#任务实现4-2" class="headerlink" title="任务实现4.2"></a>任务实现4.2</h3><h4 id="WordCount源代码"><a href="#WordCount源代码" class="headerlink" title="WordCount源代码"></a>WordCount源代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//代码4.1</span><br><span class="hljs-keyword">package</span> Other;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.StringTokenizer;<br><br><span class="hljs-comment">// 定义一个词频统计的类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WordCount</span> &#123;<br><br>    <span class="hljs-comment">// Mapper类，用于处理输入数据并输出键值对</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TokenizerMapper</span><br>            <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt; &#123;<br><br>        <span class="hljs-comment">// 定义一个常量值1，用于表示每个单词出现的次数</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-type">IntWritable</span> <span class="hljs-variable">one</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(<span class="hljs-number">1</span>);<br>        <span class="hljs-comment">// 定义一个Text对象用于存储每个单词</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-type">Text</span> <span class="hljs-variable">word</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>();<br><br>        <span class="hljs-comment">// map方法，负责将输入的文本数据按单词进行分割并输出&lt;单词, 1&gt;的键值对</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context</span><br><span class="hljs-params">        )</span> <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 将输入的每一行文本转换为字符串并使用StringTokenizer按空格分割单词</span><br>            <span class="hljs-type">StringTokenizer</span> <span class="hljs-variable">itr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringTokenizer</span>(value.toString());<br>            <span class="hljs-comment">// 遍历所有单词</span><br>            <span class="hljs-keyword">while</span> (itr.hasMoreTokens()) &#123;<br>                <span class="hljs-comment">// 取出下一个单词并设置为当前的word</span><br>                word.set(itr.nextToken());<br>                <span class="hljs-comment">// 输出&lt;单词, 1&gt;的键值对</span><br>                context.write(word, one);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// Reducer类，用于将相同的单词累加词频</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IntSumReducer</span><br>            <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;<br>        <span class="hljs-comment">// 定义一个IntWritable对象用于存储最终的结果</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-type">IntWritable</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>();<br><br>        <span class="hljs-comment">// reduce方法，负责将相同单词的所有值进行累加</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(Text key, Iterable&lt;IntWritable&gt; values,</span><br><span class="hljs-params">                           Context context</span><br><span class="hljs-params">        )</span> <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 初始化累加器</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-comment">// 遍历当前单词的所有值，并进行累加</span><br>            <span class="hljs-keyword">for</span> (IntWritable val : values) &#123;<br>                sum += val.get();<br>            &#125;<br>            <span class="hljs-comment">// 将累加结果设置到result中</span><br>            result.set(sum);<br>            <span class="hljs-comment">// 输出&lt;单词, 累加结果&gt;的键值对</span><br>            context.write(key, result);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 主方法，设置作业配置并启动作业</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建一个Hadoop配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-comment">// 解析命令行参数，获取输入和输出路径</span><br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();<br>        <span class="hljs-comment">// 如果没有指定足够的参数，输出错误信息并退出</span><br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;Usage: wordcount &lt;in&gt; [&lt;in&gt;...] &lt;out&gt;&quot;</span>);<br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-comment">// 创建一个MapReduce作业，并设置作业名称为&quot;word count&quot;</span><br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;word count&quot;</span>);<br>        <span class="hljs-comment">// 设置作业的主类</span><br>        job.setJarByClass(WordCount.class);<br>        <span class="hljs-comment">// 设置Mapper类</span><br>        job.setMapperClass(TokenizerMapper.class);<br>        <span class="hljs-comment">// 设置Combiner类，将中间结果进行局部归约</span><br>        job.setCombinerClass(IntSumReducer.class);<br>        <span class="hljs-comment">// 设置Reducer类</span><br>        job.setReducerClass(IntSumReducer.class);<br>        <span class="hljs-comment">// 设置输出键类型为Text</span><br>        job.setOutputKeyClass(Text.class);<br>        <span class="hljs-comment">// 设置输出值类型为IntWritable</span><br>        job.setOutputValueClass(IntWritable.class);<br>        <span class="hljs-comment">// 为作业添加输入路径，可能有多个</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));<br>        &#125;<br>        <span class="hljs-comment">// 设置作业的输出路径</span><br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));<br>        <span class="hljs-comment">// 提交作业并等待作业完成，完成后根据结果退出</span><br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="MapReduce任务初始化的通用代码"><a href="#MapReduce任务初始化的通用代码" class="headerlink" title="MapReduce任务初始化的通用代码"></a>MapReduce任务初始化的通用代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br><span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf);<br>job.setMapperClass(MyMapper.class);<br>job.setReducerClass(MyReducer.class);<br>job.setCombinerClass(MyCombiner.class);<br>job.setMapOutputKeyClass(MyMapKeyWritable.class);<br>job.setMapOutputValueClass(MyMapValueWritable.class);<br>job.setOutputKeyClass(MyKeyWritable.class);<br>job.setOutputValueClass(MyValueWritable.class);   <br>job.setInputFormatClass(MyInputFormat.class);<br>job.setOutputFormatClass(MyOutputFormat.class);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; args.length - <span class="hljs-number">1</span>; ++i) &#123;<br>    FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[i])); <br>    &#125;<br>FileOutputFormat.setOutputPath(job,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[args.length - <span class="hljs-number">1</span>]));<br>job.waitForCompletion(<span class="hljs-literal">true</span>);<br></code></pre></td></tr></table></figure><h3 id="任务实现-4-3"><a href="#任务实现-4-3" class="headerlink" title="任务实现 4.3"></a>任务实现 4.3</h3><h4 id="任务4-3-示例代码"><a href="#任务4-3-示例代码" class="headerlink" title="任务4.3 示例代码"></a>任务4.3 示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码4-3 Mapper处理逻辑伪代码</span><br>Begin<br>    自定义类MyMapper继承自Mapper；<br>        覆写map方法； <br>            定义初始次数为<span class="hljs-number">1</span>；<br>            读取用户访问日志文件；<br>            以每一行为单位，以逗号为分隔符进行分拆；<br>            将结果存入Array数组；<br>            将数组中的第<span class="hljs-number">5</span>个元素的前<span class="hljs-number">9</span>个字符与初始次数组合后输出，格式为&lt;访问日期，<span class="hljs-number">1</span>&gt;；<br>End<br><br><br><span class="hljs-comment">//代码4-4 Reducer类处理逻辑伪代码</span><br>Begin<br>  自定义MyReducer继承自Reducer；<br>    覆写reduce方法；<br>      读取Mapper输出的键值对；<br>      将相同键的值进行累加；<br>      输出&lt;访问日期，总访问次数&gt;；<br>End<br><br><br><span class="hljs-comment">//代码4-5 Mapper模块代码</span><br><span class="hljs-comment">// Mapper模块</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();<br>        String arr[] = line.split(<span class="hljs-string">&quot;,&quot;</span>);<br>        context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">4</span>].substring(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>)), <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(<span class="hljs-number">1</span>));<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">//代码4-6 Reducer模块代码</span><br><span class="hljs-comment">// Reducer模块</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReduce</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (IntWritable value : values) &#123;<br>            count++;<br>        &#125;<br>        context.write(key, <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(count));<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">//代码4-7 Driver模块代码</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();<br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;必须输入读取文件路径和输出路径&quot;</span>);<br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;visits count&quot;</span>);<br>        job.setJarByClass(dailyAccessCount.class);<br>        job.setMapperClass(MyMap.class);<br>        job.setReducerClass(MyReduce.class);<br>        job.setOutputKeyClass(Text.class);<br>        job.setOutputValueClass(IntWritable.class);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));<br>        &#125;<br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));<br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br><br></code></pre></td></tr></table></figure><h4 id="dailyAccessCount-java"><a href="#dailyAccessCount-java" class="headerlink" title="dailyAccessCount.java"></a>dailyAccessCount.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码4.6</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">// 定义一个统计每日访问量的类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">dailyAccessCount</span> &#123;<br><br>    <span class="hljs-comment">// Mapper类，继承自Hadoop的Mapper类，负责将输入数据进行映射</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMap</span><br>            <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt; &#123;<br>        <br>        <span class="hljs-comment">// map方法将输入的每一行数据进行处理，输出键值对</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span><br>                <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 将输入的行数据转换为字符串</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();<br>            <span class="hljs-comment">// 按逗号分隔字符串</span><br>            String arr[] = line.split(<span class="hljs-string">&quot;,&quot;</span>);<br>            <span class="hljs-comment">// 将第5列(索引为4)的日期部分(只取到天)作为键，输出键值对&lt;日期, 1&gt;</span><br>            context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">4</span>].substring(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>)),<br>                    <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(<span class="hljs-number">1</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// Reducer类，继承自Hadoop的Reducer类，负责对映射后的数据进行归约</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReduce</span><br>            <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;<br><br>        <span class="hljs-comment">// reduce方法将同一个键的所有值进行累加，输出最终的访问次数</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(Text key, Iterable&lt;IntWritable&gt; values,</span><br><span class="hljs-params">                           Context context)</span><br>                <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 初始化计数器</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-comment">// 遍历当前键的所有值，并累加计数</span><br>            <span class="hljs-keyword">for</span> (IntWritable value : values) &#123;<br>                count++;<br>            &#125;<br>            <span class="hljs-comment">// 输出键值对&lt;日期, 总访问次数&gt;</span><br>            context.write(key, <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(count));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 主方法，设置作业配置并启动作业</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建一个Hadoop配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-comment">// 解析命令行参数，获取输入和输出路径</span><br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();<br>        <span class="hljs-comment">// 如果没有指定足够的参数，输出错误信息并退出</span><br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;必须输入读取文件路径和输出路径&quot;</span>);<br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-comment">// 创建一个MapReduce作业，并设置作业名称为&quot;visits count&quot;</span><br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;visits count&quot;</span>);<br>        <span class="hljs-comment">// 设置作业的主类</span><br>        job.setJarByClass(dailyAccessCount.class);<br>        <span class="hljs-comment">// 设置Mapper类</span><br>        job.setMapperClass(MyMap.class);<br>        <span class="hljs-comment">// 设置Reducer类</span><br>        job.setReducerClass(MyReduce.class);<br>        <span class="hljs-comment">// 设置输出键类型为Text</span><br>        job.setOutputKeyClass(Text.class);<br>        <span class="hljs-comment">// 设置输出值类型为IntWritable</span><br>        job.setOutputValueClass(IntWritable.class);<br>        <span class="hljs-comment">// 为作业添加输入路径，可能有多个</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));<br>        &#125;<br>        <span class="hljs-comment">// 设置作业的输出路径</span><br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));<br>        <span class="hljs-comment">// 提交作业并等待作业完成，完成后根据结果退出</span><br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br><br>输入键类型（Object）: 这是输入数据的偏移量或标识符。在默认情况下，输入的键是数据的偏移量（通常是 Long 或 Object），但如果输入格式发生变化，键类型也可以是其他类型。<br>输入值类型（Text）: 这是输入数据的值，通常是一行文本。在此例子中，使用 Text 来表示输入数据的每一行。<br>输出键类型（Text）: 这是 Mapper 的输出键。在这个例子中，输出的键是一个 Text，也就是处理后的文本数据（例如单词或日期等）。<br>输出值类型（IntWritable）: 这是 Mapper 的输出值。在这个例子中，输出的值是 IntWritable，也就是代表该键的计数或某种数值形式。<br><br>map(Object key, Text value, Context context)    <br>输入键 (Object key):<br>这个键是输入数据的标识符。通常，在处理文本文件时，默认的输入键是偏移量（行号），即 Hadoop 提供的 LongWritable 类型。但是你可以根据需要自定义输入键类型。<br>你可以在 Mapper 的泛型中指定输入键的具体类型。<br>输入值 (Text value):<br>这是实际的数据内容，通常是每一行的文本。在处理文本文件时，通常使用 Text 来表示文本行。<br>输入值的类型可以根据数据格式的不同进行调整。例如，处理二进制文件时，输入值类型可能会是 BytesWritable。<br>上下文对象 (Context context):<br><br>Context 对象是固定的，它提供了与 Hadoop 框架的交互接口，可以通过它输出键值对，以及获取配置信息等。   <br>以hadoop jar提交任务给集群的命令<br>hadoop jar /opt/jars/Hadoop/dailyAccessCount.jar \<br>Text.NO4.dailyAccessCount \<br>/Tipdm/Hadoop/MapReduce/raceData.csv \<br>/Tipdm/Hadoop/MapReduce/Result/dailyAccessCount<br><br></code></pre></td></tr></table></figure><h3 id="任务实现-4-4"><a href="#任务实现-4-4" class="headerlink" title="任务实现 4.4"></a>任务实现 4.4</h3><h4 id="任务4-4-示例代码"><a href="#任务4-4-示例代码" class="headerlink" title="任务4.4 示例代码"></a>任务4.4 示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">4</span>-<span class="hljs-number">10</span> 输入数据的内容及格式<br><span class="hljs-number">2020</span>/<span class="hljs-number">10</span>/<span class="hljs-number">1</span><span class="hljs-number">18016</span><br><span class="hljs-number">2020</span>/<span class="hljs-number">10</span>/<span class="hljs-number">2</span><span class="hljs-number">18654</span><br><span class="hljs-number">2020</span>/<span class="hljs-number">10</span>/<span class="hljs-number">3</span><span class="hljs-number">2669</span><br><span class="hljs-number">2020</span>/<span class="hljs-number">10</span>/<span class="hljs-number">4</span><span class="hljs-number">1212</span><br><span class="hljs-number">2020</span>/<span class="hljs-number">10</span>/<span class="hljs-number">5</span><span class="hljs-number">1426</span><br><br><span class="hljs-comment">//代码4-11 设置Reduce任务数</span><br>job.setNumReduceTasks(num);<br><br><br><span class="hljs-comment">//代码4-12 Mapper模块代码</span><br><span class="hljs-comment">// Mapper模块</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, IntWritable, Text&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();<br>        <span class="hljs-comment">//指定tab为分隔符</span><br>        String arr[] = line.split(<span class="hljs-string">&quot;\t&quot;</span>);<br>        <span class="hljs-comment">//key：统计结果， value：日期</span><br>        context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(Integer.parseInt(arr[<span class="hljs-number">1</span>])),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">0</span>]));<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码4-13 Reducer模块代码</span><br><span class="hljs-comment">// Reducer模块</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReduce</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;IntWritable, Text, Text, IntWritable&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(IntWritable key, Iterable&lt;Text&gt; values,</span><br><span class="hljs-params">                       Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>        <span class="hljs-keyword">for</span> (Text value : values) &#123;<br>            context.write(value, key);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码4-14 Driver模块代码</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();<br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;必须输入读取文件路径和输出路径&quot;</span>);<br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Visits Sort&quot;</span>);<br>        job.setJarByClass(accessTimesSort.class);<br>        job.setMapperClass(MyMap.class);<br>        job.setReducerClass(MyReduce.class);<br>        job.setMapOutputKeyClass(IntWritable.class);<br>        job.setMapOutputValueClass(Text.class);<br>        job.setOutputKeyClass(Text.class);<br>        job.setOutputValueClass(IntWritable.class);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));<br>        &#125;<br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));<br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br><br><br><br><br></code></pre></td></tr></table></figure><h4 id="accessTimesSort-java"><a href="#accessTimesSort-java" class="headerlink" title="accessTimesSort.java"></a>accessTimesSort.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码4.12 </span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">// 定义访问次数排序类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">accessTimesSort</span> &#123;<br><br>    <span class="hljs-comment">// Mapper类，输入的键值对为&lt;Object, Text&gt;，输出为&lt;IntWritable, Text&gt;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, IntWritable, Text&gt; &#123;<br>        <span class="hljs-comment">// map方法，用于将输入的每一行转换为输出的键值对</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span><br>                <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();  <span class="hljs-comment">// 将输入的每一行文本转换为字符串</span><br>            <span class="hljs-comment">// 指定tab为分隔符，将行数据分割成数组</span><br>            String arr[] = line.split(<span class="hljs-string">&quot;\t&quot;</span>);<br>            <span class="hljs-comment">// 输出的键是统计的访问次数（转换为IntWritable），值是日期（Text类型）</span><br>            context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(Integer.parseInt(arr[<span class="hljs-number">1</span>])),<br>                    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">0</span>]));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// Reducer类，输入的键值对为&lt;IntWritable, Text&gt;，输出为&lt;Text, IntWritable&gt;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReduce</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;IntWritable, Text, Text, IntWritable&gt; &#123;<br>        <span class="hljs-comment">// reduce方法，将按访问次数排序的结果输出</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(IntWritable key, Iterable&lt;Text&gt; values,</span><br><span class="hljs-params">                           Context context)</span><br>                <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-comment">// 遍历同一个访问次数对应的所有日期，输出&lt;日期, 访问次数&gt;</span><br>            <span class="hljs-keyword">for</span> (Text value : values) &#123;<br>                context.write(value, key);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 主方法，负责配置并运行MapReduce作业</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();  <span class="hljs-comment">// 创建Hadoop的配置对象</span><br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();  <span class="hljs-comment">// 解析命令行参数，获取输入和输出路径</span><br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;必须输入读取文件路径和输出路径&quot;</span>);  <span class="hljs-comment">// 如果参数不足，输出错误信息并退出</span><br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Visits Sort&quot;</span>);  <span class="hljs-comment">// 创建一个MapReduce作业，名称为“Visits Sort”</span><br>        job.setJarByClass(accessTimesSort.class);  <span class="hljs-comment">// 设置作业的主类</span><br>        job.setMapperClass(MyMap.class);  <span class="hljs-comment">// 设置Mapper类</span><br>        job.setReducerClass(MyReduce.class);  <span class="hljs-comment">// 设置Reducer类</span><br>        job.setMapOutputKeyClass(IntWritable.class);  <span class="hljs-comment">// 设置Mapper输出键类型为IntWritable</span><br>        job.setMapOutputValueClass(Text.class);  <span class="hljs-comment">// 设置Mapper输出值类型为Text</span><br>        job.setOutputKeyClass(Text.class);  <span class="hljs-comment">// 设置最终输出键类型为Text</span><br>        job.setOutputValueClass(IntWritable.class);  <span class="hljs-comment">// 设置最终输出值类型为IntWritable</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));  <span class="hljs-comment">// 设置输入路径</span><br>        &#125;<br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));  <span class="hljs-comment">// 设置输出路径</span><br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);  <span class="hljs-comment">// 提交作业并等待完成，成功则返回0，否则返回1</span><br>    &#125;<br>&#125;<br><br><br><br>以hadoop jar提交任务给集群的命令<br>hadoop jar /opt/jars/Hadoop/accessTimesSort.jar \<br>Text.NO4.test2.accessTimesSort \<br>/Tipdm/Hadoop/MapReduce/Result/dailyAccessCount \<br>/Tipdm/Hadoop/MapReduce/Result/accessTimesSort<br><br></code></pre></td></tr></table></figure><h2 id="第5章-MapReduce进阶编程"><a href="#第5章-MapReduce进阶编程" class="headerlink" title="第5章 MapReduce进阶编程"></a>第5章 MapReduce进阶编程</h2><h3 id="任务实现5-1"><a href="#任务实现5-1" class="headerlink" title="任务实现5.1"></a>任务实现5.1</h3><h4 id="任务5-1示例代码"><a href="#任务5-1示例代码" class="headerlink" title="任务5.1示例代码"></a>任务5.1示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//代码5-1 设置输入格式代码</span><br>job.setInputFotmatClass(TextInputFormat.class)<br><br><span class="hljs-comment">//代码5-2 设定输出格式</span><br>job.setOutputFormatClass(SequenceFileOutputFormat.class);<br><br></code></pre></td></tr></table></figure><h4 id="SelectData-java"><a href="#SelectData-java" class="headerlink" title="SelectData.java"></a>SelectData.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码5.3</span><br><span class="hljs-keyword">package</span> No5.Text.test1;<br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.TextInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">// 定义SelectData类，用于筛选数据</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SelectData</span> &#123;<br>    <br>    <span class="hljs-comment">// 自定义Mapper类，输入的键值对为&lt;Object, Text&gt;，输出为&lt;Text, Text&gt;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Object, Text, Text, Text&gt; &#123;<br>        <span class="hljs-comment">// map方法，用于处理每一行输入数据</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(Object key, Text value, Context context)</span> <br>                <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> value.toString();  <span class="hljs-comment">// 将输入的每一行文本转换为字符串</span><br>            String arr[] = line.split(<span class="hljs-string">&quot;,&quot;</span>);  <span class="hljs-comment">// 按逗号分割字符串</span><br>            <span class="hljs-comment">// 如果第5列包含“2021/1”或“2021/2”字符串</span><br>            <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">4</span>].contains(<span class="hljs-string">&quot;2021/1&quot;</span>) || arr[<span class="hljs-number">4</span>].contains(<span class="hljs-string">&quot;2021/2&quot;</span>)) &#123;<br>                <span class="hljs-comment">// 输出的键是第3列数据，值是日期的前9个字符（格式化后的日期）</span><br>                context.write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">2</span>]), <br>                        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>(arr[<span class="hljs-number">4</span>].substring(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>)));<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 主方法，负责配置并运行MapReduce作业</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();  <span class="hljs-comment">// 创建Hadoop的配置对象</span><br>        String[] otherArgs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericOptionsParser</span>(conf, args)<br>                .getRemainingArgs();  <span class="hljs-comment">// 解析命令行参数，获取输入和输出路径</span><br>        <span class="hljs-keyword">if</span> (otherArgs.length &lt; <span class="hljs-number">2</span>) &#123;<br>            System.err.println(<span class="hljs-string">&quot;必须输入读取文件路径和输出路径&quot;</span>);  <span class="hljs-comment">// 如果参数不足，输出错误信息并退出</span><br>            System.exit(<span class="hljs-number">2</span>);<br>        &#125;<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Select Data&quot;</span>);  <span class="hljs-comment">// 创建一个MapReduce作业，名称为“Select Data”</span><br>        job.setJarByClass(SelectData.class);  <span class="hljs-comment">// 设置作业的主类</span><br>        job.setMapperClass(MyMap.class);  <span class="hljs-comment">// 设置Mapper类</span><br>        job.setOutputKeyClass(Text.class);  <span class="hljs-comment">// 设置Mapper输出键类型为Text</span><br>        job.setOutputValueClass(Text.class);  <span class="hljs-comment">// 设置Mapper输出值类型为Text</span><br>        <span class="hljs-comment">// 设置输入格式为TextInputFormat</span><br>        job.setInputFormatClass(TextInputFormat.class);<br>        <span class="hljs-comment">// 设置输出格式为SequenceFileOutputFormat</span><br>        job.setOutputFormatClass(SequenceFileOutputFormat.class);<br>        <span class="hljs-comment">// 设置Reducer任务数为0，表示没有Reducer任务</span><br>        job.setNumReduceTasks(<span class="hljs-number">0</span>);<br>        <span class="hljs-comment">// 添加输入路径</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; otherArgs.length - <span class="hljs-number">1</span>; ++i) &#123;<br>            FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[i]));<br>        &#125;<br>        <span class="hljs-comment">// 设置输出路径</span><br>        FileOutputFormat.setOutputPath(job,<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(otherArgs[otherArgs.length - <span class="hljs-number">1</span>]));<br>        <span class="hljs-comment">// 提交作业并等待完成，成功则返回0，否则返回1</span><br>        System.exit(job.waitForCompletion(<span class="hljs-literal">true</span>) ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="任务实现5-2"><a href="#任务实现5-2" class="headerlink" title="任务实现5.2"></a>任务实现5.2</h3><h4 id="任务5-2示例代码"><a href="#任务5-2示例代码" class="headerlink" title="任务5.2示例代码"></a>任务5.2示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码5.4 列举子目录</span><br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileStatus;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">view_folders</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">// 声明文件路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/user/root&quot;</span>);<br>        <span class="hljs-comment">// 获取文件列表</span><br>        FileStatus[] fileStatuses = fs.listStatus(path);<br>        <span class="hljs-comment">// 遍历文件列表</span><br>        <span class="hljs-keyword">for</span> (FileStatus file : fileStatuses) &#123;<br>            <span class="hljs-comment">// 判断是否是文件夹</span><br>            <span class="hljs-keyword">if</span> (file.isDirectory()) &#123;<br>                System.out.println(file.getPath().toString());<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">// 代码5.5 列举文件</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileStatus;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">view_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">// 声明文件路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/user/root&quot;</span>);<br>        <span class="hljs-comment">// 获取文件列表</span><br>        FileStatus[] fileStatuses = fs.listStatus(path);<br>        <span class="hljs-comment">// 遍历文件列表</span><br>        <span class="hljs-keyword">for</span> (FileStatus file : fileStatuses) &#123;<br>            <span class="hljs-comment">// 判断是否是文件夹</span><br>            <span class="hljs-keyword">if</span> (file.isFile()) &#123;<br>                System.out.println(file.getPath().toString());<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.6 创建目录</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">mkdir_folders</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">//声明创建的目录</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test1&quot;</span>);<br>        <span class="hljs-comment">//调用mkdirs函数创建目录</span><br>        fs.mkdirs(path);<br>        <span class="hljs-comment">//关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.7 删除文件</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">delete_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">//声明文件路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test1&quot;</span>);<br>        <span class="hljs-comment">//删除文件</span><br>        fs.delete(path, <span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">//关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.8 上传文件至HDFS</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">put_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">// 获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">// 声明源文件路径和目标路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">fromPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;D:/hadoop/test.csv&quot;</span>);<br>        <span class="hljs-type">Path</span> <span class="hljs-variable">toPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test&quot;</span>);<br>        <span class="hljs-comment">// 调用copyFromLocalFile方法上传文件</span><br>        fs.copyFromLocalFile(fromPath, toPath);<br>        <span class="hljs-comment">// 关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">//代码5.9 下载HDFS上的文件至本地</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">load_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">// 获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">// 声明源文件路径和目标路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">fromPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test/test.csv&quot;</span>);<br>        <span class="hljs-type">Path</span> <span class="hljs-variable">toPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;D:/&quot;</span>);<br>        <span class="hljs-comment">// 调用copyToLocalFile方法下载文件到本地</span><br>        fs.copyToLocalFile(<span class="hljs-literal">false</span>, fromPath, toPath, <span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 5.10 读取文件内容</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FSDataInputStream;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">read_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">//声明查看的路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test/test.csv&quot;</span>);<br>        <span class="hljs-comment">//获取指定文件的数据字节流</span><br>        <span class="hljs-type">FSDataInputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> fs.open(path);<br>        <span class="hljs-comment">//读取文件内容并打印出来</span><br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">br</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(is,<br>                <span class="hljs-string">&quot;utf-8&quot;</span>));<br>        <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">while</span> ((line = br.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(line);<br>        &#125;<br>        <span class="hljs-comment">//关闭数据字节流</span><br>        br.close();<br>        is.close();<br>        <span class="hljs-comment">//关闭文件系统</span><br>        fs.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.11 写入数据</span><br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FSDataInputStream;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FSDataOutputStream;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><br><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.BufferedWriter;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><span class="hljs-keyword">import</span> java.io.OutputStreamWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">write_files</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">//获取配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <span class="hljs-comment">//获取文件系统</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <span class="hljs-comment">//声明查看的路径</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test/test.csv&quot;</span>);<br>        <span class="hljs-comment">//创建新文件</span><br>        <span class="hljs-type">Path</span> <span class="hljs-variable">newPath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/mkdir_folders_test/test_new.csv&quot;</span>);<br>        fs.delete(newPath, <span class="hljs-literal">true</span>);<br>        <span class="hljs-type">FSDataOutputStream</span> <span class="hljs-variable">os</span> <span class="hljs-operator">=</span> fs.create(newPath);<br>        <span class="hljs-comment">//获取指定文件的数据字节流</span><br>        <span class="hljs-type">FSDataInputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> fs.open(path);<br>        <span class="hljs-comment">//读取文件内容并写入到新文件</span><br>        <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">br</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(is,<br>                <span class="hljs-string">&quot;utf-8&quot;</span>));<br>        <span class="hljs-type">BufferedWriter</span> <span class="hljs-variable">bw</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedWriter</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OutputStreamWriter</span>(os,<br>                <span class="hljs-string">&quot;utf-8&quot;</span>));<br>        <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">while</span> ((line = br.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            bw.write(line);<br>            bw.newLine();<br>        &#125;<br>        <span class="hljs-comment">//关闭数据字节流</span><br>        bw.close();<br>        os.close();<br>        br.close();<br>        is.close();<br>        <span class="hljs-comment">//关闭文件系统</span><br>        fs.close();<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="task5-2-java"><a href="#task5-2-java" class="headerlink" title="task5_2.java"></a>task5_2.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//代码 5.12 读取序列化文件</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.SequenceFile;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;<br><br><span class="hljs-keyword">import</span> java.io.BufferedWriter;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.OutputStreamWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">task5_2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建 Hadoop 配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-comment">// 设置 Hadoop 文件系统的默认文件系统地址为 master:8020</span><br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;master:8020&quot;</span>);<br>        <br>        <span class="hljs-comment">// 获取文件系统对象</span><br>        <span class="hljs-type">FileSystem</span> <span class="hljs-variable">fs</span> <span class="hljs-operator">=</span> FileSystem.get(conf);<br>        <br>        <span class="hljs-comment">// 创建 SequenceFile.Reader 对象，用于读取指定路径的 SequenceFile 文件</span><br>        SequenceFile.<span class="hljs-type">Reader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SequenceFile</span>.Reader(fs, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(<br>                <span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result/SelectData/part-m-00000&quot;</span>),<br>                conf);<br>        <br>        <span class="hljs-comment">// 创建 Text 类型的 key 和 value 用于存储读取的键值对</span><br>        <span class="hljs-type">Text</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>();<br>        <span class="hljs-type">Text</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Text</span>();<br>        <br>        <span class="hljs-comment">// 创建 BufferedWriter 对象，将读取的数据写入到 D 盘的 janfeb.txt 文件中</span><br>        <span class="hljs-type">BufferedWriter</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedWriter</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OutputStreamWriter</span>(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;D:\\janfeb.txt&quot;</span>, <span class="hljs-literal">true</span>)));<br>        <br>        <span class="hljs-comment">// 读取 SequenceFile 文件中的每一个键值对，并写入到 janfeb.txt 文件</span><br>        <span class="hljs-keyword">while</span> (reader.next(key, value)) &#123;<br>            <span class="hljs-comment">// 将键值对以“键值\t键值对”格式写入到文件，每行一个键值对</span><br>            out.write(key.toString() + <span class="hljs-string">&quot;\t&quot;</span> + value.toString() + <span class="hljs-string">&quot;\r\n&quot;</span>);<br>        &#125;<br>        <br>        <span class="hljs-comment">// 关闭 BufferedWriter，释放资源</span><br>        out.close();<br>        <br>        <span class="hljs-comment">// 关闭 SequenceFile.Reader，释放资源</span><br>        reader.close();<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">FileOutputStream 是一个用于写入文件的字节输出流，创建后会将数据写入指定的文件。</span><br><span class="hljs-comment">参数 &quot;D:\\janfeb.txt&quot; 指定了文件路径（在 Windows 系统上使用反斜杠 \ 表示路径），该代码会将输出写入 D: 盘的 janfeb.txt 文件。</span><br><span class="hljs-comment">第二个参数 true 表示以“追加模式”打开文件。这样，如果文件 janfeb.txt 已存在，数据会追加到文件的末尾，而不会覆盖文件中的现有内容。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">OutputStreamWriter 将字节流 FileOutputStream 转换为字符流，以便可以使用字符编码写入文本。</span><br><span class="hljs-comment">默认使用系统字符编码，可以通过指定编码格式来改变编码方式，例如 new OutputStreamWriter(new FileOutputStream(&quot;D:\\janfeb.txt&quot;, true), &quot;UTF-8&quot;)。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">BufferedWriter 为字符输出流提供缓冲功能，减少实际的 IO 操作次数以提升性能。</span><br><span class="hljs-comment">它会将数据存储在内存缓冲区中，缓冲区填满或调用 out.close() 方法时，数据才会被写入文件。</span><br></code></pre></td></tr></table></figure><h3 id="任务实现5-3"><a href="#任务实现5-3" class="headerlink" title="任务实现5.3"></a>任务实现5.3</h3><h4 id="任务5-3示例代码"><a href="#任务5-3示例代码" class="headerlink" title="任务5.3示例代码"></a>任务5.3示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码5.14 自定义键类型</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.io.WritableComparable;<br><br><span class="hljs-keyword">import</span> java.io.DataInput;<br><span class="hljs-keyword">import</span> java.io.DataOutput;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MemberLogTime</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WritableComparable</span>&lt;MemberLogTime&gt; &#123;<br><br>    <span class="hljs-keyword">private</span> String member_name;<br>    <span class="hljs-keyword">private</span> String logTime;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MemberLogTime</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MemberLogTime</span><span class="hljs-params">(String member_name, String logTime)</span> &#123;<br>        <span class="hljs-built_in">this</span>.member_name = member_name;<br>        <span class="hljs-built_in">this</span>.logTime = logTime;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMember_name</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> member_name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMember_name</span><span class="hljs-params">(String member_name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.member_name = member_name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getLogTime</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> logTime;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setLogTime</span><span class="hljs-params">(String logTime)</span> &#123;<br>        <span class="hljs-built_in">this</span>.logTime = logTime;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compareTo</span><span class="hljs-params">(MemberLogTime o)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getMember_name().compareTo(o.getMember_name());<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">write</span><span class="hljs-params">(DataOutput dataOutput)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        dataOutput.writeUTF(member_name);<br>        dataOutput.writeUTF(logTime);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readFields</span><span class="hljs-params">(DataInput dataInput)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-built_in">this</span>.member_name = dataInput.readUTF();<br>        <span class="hljs-built_in">this</span>.logTime = dataInput.readUTF();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.member_name + <span class="hljs-string">&quot;,&quot;</span> + <span class="hljs-built_in">this</span>.logTime;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码5.15 Conbiner代码</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCountCombiner</span> <span class="hljs-keyword">extends</span><br>        <span class="hljs-title class_">Reducer</span>&lt;MemberLogTime, IntWritable, MemberLogTime, IntWritable&gt; &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(MemberLogTime key, Iterable&lt;IntWritable&gt; values, Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (IntWritable val : values) &#123;<br>            sum += val.get();<br>        &#125;<br>        context.write(key, <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(sum));<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.16 配置Combiner类</span><br>job.setCombinerClass(LogCountCombiner.class);<br><br><span class="hljs-comment">//代码5.17 Combiner与Reducer的实现逻辑相同时同时配置Combiner</span><br>job.setCombinerClass(LogCountReducer.class);<br><br><span class="hljs-comment">//代码5.18 HashPartitoner源码</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HashPartitioner</span>&lt;K2, V2&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Partitioner</span>&lt;K2, V2&gt;&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(JobConf job)</span>&#123;&#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getPartition</span><span class="hljs-params">(K2 key,V2 value,<span class="hljs-type">int</span> numReduceTasks)</span> &#123;<br>    <span class="hljs-keyword">return</span> (key.hashCode() &amp; Integer.MAX_VALUE) % numReduceTasks;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.19 自定义Partitioner</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Partitioner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCountPartitioner</span><br>        <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Partitioner</span>&lt;MemberLogTime, IntWritable&gt; &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getPartition</span><span class="hljs-params">(</span><br><span class="hljs-params">            MemberLogTime key, IntWritable value, <span class="hljs-type">int</span> numPartitions)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> key.getLogTime();<br>        <span class="hljs-keyword">if</span> (date.contains(<span class="hljs-string">&quot;2021/1&quot;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> % numPartitions;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> % numPartitions;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//代码5.20  设置Partitioner类和Reducer个数</span><br>job.setPartitionerClass(LogCountPartitioner.class);<br>job.setNumReduceTasks(<span class="hljs-number">2</span>);<br><br><span class="hljs-comment">//代码5.21 定义枚举类型</span><br><span class="hljs-keyword">enum</span> <span class="hljs-title class_">LogCounter</span> &#123;<br>    January,<br>    February<br>&#125;<br><br><span class="hljs-comment">//代码5.22 使用计数器</span><br><span class="hljs-keyword">if</span> (logTime.contains(<span class="hljs-string">&quot;2021/1&quot;</span>)) &#123;<br>    context.getCounter(LogCounter.January).increment(<span class="hljs-number">1</span>);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (logTime.contains(<span class="hljs-string">&quot;2021/2&quot;</span>)) &#123;<br>    context.getCounter(LogCounter.February).increment(<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">//代码5.23 使用动态计数器</span><br><span class="hljs-keyword">if</span> (key.getLogTime().contains(<span class="hljs-string">&quot;2021/1&quot;</span>)) &#123;<br>    context.getCounter(<span class="hljs-string">&quot;OutputCounter&quot;</span>, <span class="hljs-string">&quot;JanuaryResult&quot;</span>).increment(<span class="hljs-number">1</span>);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (key.getLogTime().contains(<span class="hljs-string">&quot;2021/2&quot;</span>)) &#123;<br>    context.getCounter(<span class="hljs-string">&quot;OutputCounter&quot;</span>, <span class="hljs-string">&quot;FebruaryResult&quot;</span>).increment(<span class="hljs-number">1</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="LogCount-java"><a href="#LogCount-java" class="headerlink" title="LogCount.java"></a>LogCount.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;  <span class="hljs-comment">// 引入Hadoop的配置类，用于配置Hadoop作业的属性</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;  <span class="hljs-comment">// 引入Hadoop文件系统类，用于处理文件系统的操作</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;  <span class="hljs-comment">// 引入Hadoop路径类，用于表示文件的路径</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;  <span class="hljs-comment">// 引入Hadoop整数类型的可序列化类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;  <span class="hljs-comment">// 引入Hadoop MapReduce作业类，用于配置和提交MapReduce作业</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;  <span class="hljs-comment">// 引入Hadoop的输入格式类，用于读取输入数据</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.SequenceFileAsTextInputFormat;  <span class="hljs-comment">// 引入Hadoop序列化文件格式的输入格式类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;  <span class="hljs-comment">// 引入Hadoop的输出格式类，用于输出结果到文件</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;  <span class="hljs-comment">// 引入Hadoop文本文件输出格式类</span><br><br><span class="hljs-keyword">import</span> java.io.IOException;  <span class="hljs-comment">// 引入IOException类，用于捕获输入输出异常</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCount</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>            <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException, InterruptedException &#123;<br>        <br>        <span class="hljs-comment">// 创建Hadoop作业的配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-comment">// 创建一个MapReduce作业实例，作业名为“Log Count”</span><br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Log Count&quot;</span>);<br>        <span class="hljs-comment">// 设置作业的jar文件来源类，指定MapReduce作业的主类</span><br>        job.setJarByClass(LogCount.class);<br>        <span class="hljs-comment">// 设置Map阶段的处理类（Mapper类）</span><br>        job.setMapperClass(LogCountMapper.class);   <br>        <span class="hljs-comment">// 设置Reduce阶段的处理类（Reducer类）</span><br>        job.setReducerClass(LogCountReducer.class);  <br>        <span class="hljs-comment">// 设置Combiner阶段的处理类（用于合并Mapper输出结果）</span><br>        job.setCombinerClass(LogCountCombiner.class); <br>        <span class="hljs-comment">// 设置Partitioner类，用于控制数据如何分配给各个Reducer</span><br>        job.setPartitionerClass(LogCountPartitioner.class);  <br>        <span class="hljs-comment">// 设置Reduce任务的数量</span><br>        job.setNumReduceTasks(<span class="hljs-number">2</span>);  <br>        <span class="hljs-comment">// 设置作业的输出键类型为MemberLogTime类</span><br>        job.setOutputKeyClass(MemberLogTime.class);    <br>        <span class="hljs-comment">// 设置作业的输出值类型为IntWritable类</span><br>        job.setOutputValueClass(IntWritable.class);     <br>        <span class="hljs-comment">// 设置输入数据的格式为SequenceFileAsTextInputFormat，即从序列化文件中读取文本数据</span><br>        job.setInputFormatClass(SequenceFileAsTextInputFormat.class); <br>        <span class="hljs-comment">// 设置输出数据的格式为TextOutputFormat，即将输出写入文本文件</span><br>        job.setOutputFormatClass(TextOutputFormat.class);<br>        <span class="hljs-comment">// 设置输入路径，将args[0]作为输入路径</span><br>        FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">0</span>])); <br>        <span class="hljs-comment">// 删除指定的输出路径（如果该路径存在）</span><br>        FileSystem.get(conf).delete(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]), <span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 设置输出路径，将args[1]作为输出路径</span><br>        FileOutputFormat.setOutputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]));<br>        <span class="hljs-comment">// 提交作业并等待完成，返回作业执行结果，-1表示成功，1表示失败</span><br>        System.err.println(job.waitForCompletion(<span class="hljs-literal">true</span>) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="LogCountMapper-java"><a href="#LogCountMapper-java" class="headerlink" title="LogCountMapper.java"></a>LogCountMapper.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;  <span class="hljs-comment">// 导入Hadoop的IntWritable类，用于表示整型值</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.io.Text;  <span class="hljs-comment">// 导入Hadoop的Text类，用于表示文本类型</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Mapper;  <span class="hljs-comment">// 导入Hadoop的Mapper类，用于MapReduce的映射操作</span><br><br><span class="hljs-keyword">import</span> java.io.IOException;  <span class="hljs-comment">// 导入IO异常类</span><br><br><span class="hljs-comment">// 定义LogCountMapper类，继承自Mapper类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCountMapper</span><br>        <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;Text, Text, MemberLogTime, IntWritable&gt; &#123;  <span class="hljs-comment">// Mapper的输入类型为&lt;Text, Text&gt;，输出类型为&lt;MemberLogTime, IntWritable&gt;</span><br>    <br>    <span class="hljs-comment">// 创建一个MemberLogTime类型的对象，用于存储每一条日志记录的相关信息</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">MemberLogTime</span> <span class="hljs-variable">mt</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MemberLogTime</span>(); <br>    <br>    <span class="hljs-comment">// 创建一个IntWritable类型的对象，用于计数</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">IntWritable</span> <span class="hljs-variable">one</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(<span class="hljs-number">1</span>);<br><br>    <span class="hljs-comment">// 定义一个枚举类LogCounter，用于统计不同月份的日志数量</span><br>    <span class="hljs-keyword">enum</span> <span class="hljs-title class_">LogCounter</span> &#123;<br>        January,  <span class="hljs-comment">// 1月</span><br>        February  <span class="hljs-comment">// 2月</span><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-comment">// 重写map方法，执行Map操作</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(</span><br><span class="hljs-params">            Text key, Text value,</span><br><span class="hljs-params">            Mapper&lt;Text, Text, MemberLogTime, IntWritable&gt;.Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;  <span class="hljs-comment">// 输入参数：key为成员名，value为日志时间；输出参数：context用于输出结果</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">member_name</span> <span class="hljs-operator">=</span> key.toString();  <span class="hljs-comment">// 将key（成员名）转换为字符串</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">logTime</span> <span class="hljs-operator">=</span> value.toString();  <span class="hljs-comment">// 将value（日志时间）转换为字符串</span><br>        <br>        <span class="hljs-comment">// 如果日志时间包含&quot;2021/1&quot;，表示1月的日志</span><br>        <span class="hljs-keyword">if</span> (logTime.contains(<span class="hljs-string">&quot;2021/1&quot;</span>)) &#123;<br>            <span class="hljs-comment">// 增加January计数器的值</span><br>            context.getCounter(LogCounter.January).increment(<span class="hljs-number">1</span>);  <br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (logTime.contains(<span class="hljs-string">&quot;2021/2&quot;</span>)) &#123;  <span class="hljs-comment">// 如果日志时间包含&quot;2021/2&quot;，表示2月的日志</span><br>            <span class="hljs-comment">// 增加February计数器的值</span><br>            context.getCounter(LogCounter.February).increment(<span class="hljs-number">1</span>);  <br>        &#125;<br><br>        <span class="hljs-comment">// 设置MemberLogTime对象的成员名</span><br>        mt.setMember_name(member_name);<br>        <span class="hljs-comment">// 设置MemberLogTime对象的日志时间</span><br>        mt.setLogTime(logTime);<br>        <br>        <span class="hljs-comment">// 将MemberLogTime对象和计数1输出到context中</span><br>        context.write(mt, one);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="LogCountReducer-java"><a href="#LogCountReducer-java" class="headerlink" title="LogCountReducer.java"></a>LogCountReducer.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;  <span class="hljs-comment">// 导入Hadoop的IntWritable类，用于表示整型值</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Reducer;  <span class="hljs-comment">// 导入Hadoop的Reducer类，用于MapReduce的归约操作</span><br><br><span class="hljs-keyword">import</span> java.io.IOException;  <span class="hljs-comment">// 导入IO异常类</span><br><br><span class="hljs-comment">// 定义LogCountReducer类，继承自Reducer类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCountReducer</span><br>        <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Reducer</span>&lt;MemberLogTime, IntWritable,<br>        MemberLogTime, IntWritable&gt; &#123;  <span class="hljs-comment">// Reducer的输入类型为&lt;MemberLogTime, IntWritable&gt;，输出类型为&lt;MemberLogTime, IntWritable&gt;</span><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-comment">// 重写reduce方法，执行归约操作</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">reduce</span><span class="hljs-params">(</span><br><span class="hljs-params">            MemberLogTime key, Iterable&lt;IntWritable&gt; value,</span><br><span class="hljs-params">            Reducer&lt;MemberLogTime, IntWritable, MemberLogTime,</span><br><span class="hljs-params">                    IntWritable&gt;.Context context)</span><br>            <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;  <span class="hljs-comment">// 输入参数：key为MemberLogTime，value为多个IntWritable的集合；输出参数：context用于输出结果</span><br>        <span class="hljs-comment">// 如果日志时间包含&quot;2021/1&quot;，表示1月的日志</span><br>        <span class="hljs-keyword">if</span> (key.getLogTime().contains(<span class="hljs-string">&quot;2021/1&quot;</span>)) &#123;<br>            <span class="hljs-comment">// 增加&quot;OutputCounter&quot;计数器中的&quot;JanuaryResult&quot;计数值</span><br>            context.getCounter(<span class="hljs-string">&quot;OutputCounter&quot;</span>, <span class="hljs-string">&quot;JanuaryResult&quot;</span>).increment(<span class="hljs-number">1</span>);  <br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (key.getLogTime().contains(<span class="hljs-string">&quot;2021/2&quot;</span>)) &#123;  <span class="hljs-comment">// 如果日志时间包含&quot;2021/2&quot;，表示2月的日志</span><br>            <span class="hljs-comment">// 增加&quot;OutputCounter&quot;计数器中的&quot;FebruaryResult&quot;计数值</span><br>            context.getCounter(<span class="hljs-string">&quot;OutputCounter&quot;</span>, <span class="hljs-string">&quot;FebruaryResult&quot;</span>).increment(<span class="hljs-number">1</span>);  <br>        &#125;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;  <span class="hljs-comment">// 初始化sum变量，用于累计该key的所有值</span><br>        <span class="hljs-comment">// 遍历value中所有的IntWritable值</span><br>        <span class="hljs-keyword">for</span> (IntWritable val : value) &#123;<br>            sum += val.get();  <span class="hljs-comment">// 将每个val的值加到sum中</span><br>        &#125;<br>        <br>        <span class="hljs-comment">// 将最终的结果（key和累计的sum）输出到context中</span><br>        context.write(key, <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntWritable</span>(sum));  <br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="任务实现5-4"><a href="#任务实现5-4" class="headerlink" title="任务实现5.4"></a>任务实现5.4</h3><h4 id="任务5-4示例代码"><a href="#任务5-4示例代码" class="headerlink" title="任务5.4示例代码"></a>任务5.4示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//代码5-29 驱动类使用ToolRunner</span><br><span class="hljs-keyword">package</span> No5.Text.test3;<br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configured;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.SequenceFileAsTextInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.Tool;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.ToolRunner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCount</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Configured</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Tool</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        String[] myArgs = &#123;<br>                <span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result/Select_Data/part-m-00000&quot;</span>,<br>                <span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result/Log_Count&quot;</span><br>        &#125;;<br>        <span class="hljs-keyword">try</span> &#123;<br>            ToolRunner.run(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogCount</span>(), myArgs);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">run</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Log Count&quot;</span>);<br>        job.setJarByClass(LogCount.class);<br>        job.setMapperClass(LogCountMapper.class);<br>        job.setReducerClass(LogCountReducer.class);<br>        job.setCombinerClass(LogCountCombiner.class);<br>        job.setPartitionerClass(LogCountPartitioner.class);<br>        job.setNumReduceTasks(<span class="hljs-number">2</span>);<br>        job.setOutputKeyClass(MemberLogTime.class);<br>        job.setOutputValueClass(IntWritable.class);<br>        job.setInputFormatClass(SequenceFileAsTextInputFormat.class);<br>        job.setOutputFormatClass(TextOutputFormat.class);<br>        FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">0</span>]));<br>        FileSystem.get(conf).delete(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]), <span class="hljs-literal">true</span>);<br>        FileOutputFormat.setOutputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]));<br>        <span class="hljs-keyword">return</span> job.waitForCompletion(<span class="hljs-literal">true</span>) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//代码5-34 工具类实现代码</span><br><span class="hljs-keyword">package</span> No5.Text.test3;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.jar.JarEntry;<br><span class="hljs-keyword">import</span> java.util.jar.JarOutputStream;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JarUtil</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">jar</span><span class="hljs-params">(Class&lt;?&gt; cls)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">outputJar</span> <span class="hljs-operator">=</span> cls.getName() + <span class="hljs-string">&quot;.jar&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> cls.getClassLoader().getResource(<span class="hljs-string">&quot;&quot;</span>).getFile();<br>        input = input.substring(<span class="hljs-number">0</span>, input.length() - <span class="hljs-number">1</span>);<br>        input = input.substring(<span class="hljs-number">0</span>, input.lastIndexOf(<span class="hljs-string">&quot;/&quot;</span>) + <span class="hljs-number">1</span>);<br>        jar(input, outputJar);<br>        <span class="hljs-keyword">return</span> outputJar;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">jar</span><span class="hljs-params">(String inputFileName, String outputFileName)</span> &#123;<br>        <span class="hljs-type">JarOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            out = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JarOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(outputFileName));<br>            <span class="hljs-type">File</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(inputFileName);<br>            jar(out, f, <span class="hljs-string">&quot;&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                out.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">jar</span><span class="hljs-params">(JarOutputStream out, File f, String base)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">if</span> (f.isDirectory()) &#123;<br>            File[] fl = f.listFiles();<br>            <span class="hljs-comment">// 注意，这里用左斜杠</span><br>            base = base.length() == <span class="hljs-number">0</span> ? <span class="hljs-string">&quot;&quot;</span> : base + <span class="hljs-string">&quot;/&quot;</span>; <br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; fl.length; i++) &#123;<br>                jar(out, fl[i], base + fl[i].getName());<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            out.putNextEntry(<span class="hljs-keyword">new</span> <span class="hljs-title class_">JarEntry</span>(base));<br>            <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(f);<br>            <span class="hljs-type">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">1024</span>];<br>            <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> in.read(buffer);<br>            <span class="hljs-keyword">while</span> (n != -<span class="hljs-number">1</span>) &#123;<br>                out.write(buffer, <span class="hljs-number">0</span>, n);<br>                n = in.read(buffer);<br>            &#125;<br>            in.close();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 代码5-27 set方法使用</span><br><span class="hljs-comment">// 初始化配置，getConf()为自定义获取配置方法</span><br><span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> getConf();<br><span class="hljs-comment">// 设置第1个参数的属性名称为inputPath</span><br>conf.set(<span class="hljs-string">&quot;inputPath&quot;</span>,args[<span class="hljs-number">0</span>]);<br><span class="hljs-comment">// 设置第2个参数的属性名称为ouputPath</span><br>conf.set(<span class="hljs-string">&quot;outputPath&quot;</span>,args[<span class="hljs-number">1</span>]);<br><span class="hljs-comment">// 设置第3个参数的属性名称为splitter</span><br>conf.set(<span class="hljs-string">&quot;splitter&quot;</span>,args[<span class="hljs-number">2</span>]);<br><br><span class="hljs-comment">//代码5-28 获取参数值</span><br><span class="hljs-comment">// 通过属性名称inputPath获取第1个参数值</span><br>String inputPath=context.getConfiguration().get(<span class="hljs-string">&quot;inputPath&quot;</span>); <br><span class="hljs-comment">// 通过属性名称outputPath获取第2个参数值</span><br>String outputPath=context.getConfiguration().get(<span class="hljs-string">&quot;outputPath&quot;</span>); <br><span class="hljs-comment">// 通过属性名称splitter获取第3个参数值</span><br>String splitter=context.getConfiguration().get(<span class="hljs-string">&quot;splitter&quot;</span>); <br><br><span class="hljs-comment">//代码5-30 hadoop jar提交命令</span><br>hadoop jar /opt/jars/Hadoop/logcount.jar No5.Text.test3.LogCount<br>    <br><span class="hljs-comment">//代码5-31 连接Hadoop集群配置的方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration <span class="hljs-title function_">getMyConfiguration</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// 声明配置</span><br>    <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>    conf.setBoolean(<span class="hljs-string">&quot;mapreduce.app-submission.cross-platform&quot;</span>, <span class="hljs-literal">true</span>);<br>    <span class="hljs-comment">// 指定namenode</span><br>    conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;hdfs://master:8020&quot;</span>);<br>    <span class="hljs-comment">// 指定使用yarn框架</span><br>    conf.set(<span class="hljs-string">&quot;mapreduce.framework.name&quot;</span>, <span class="hljs-string">&quot;yarn&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">resourcenode</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;master&quot;</span>;<br>    <span class="hljs-comment">// 指定resourcemanager</span><br>    conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8032&quot;</span>);<br>    <span class="hljs-comment">// 指定资源分配器</span><br>    conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.scheduler.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8030&quot;</span>);<br>    conf.set(<span class="hljs-string">&quot;mapreduce.jobhistory.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:10020&quot;</span>);<br>    conf.set(<span class="hljs-string">&quot;mapreduce.job.jar&quot;</span>, <span class="hljs-string">&quot;E:\\LC.jar&quot;</span>);<br>    <span class="hljs-keyword">return</span> conf;<br>&#125;<br><br><span class="hljs-comment">//代码5-32 调用自定义的获取集群配置的方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration <span class="hljs-title function_">getMyConfiguration</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// 声明配置</span><br>    <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>    conf.setBoolean(<span class="hljs-string">&quot;mapreduce.app-submission.cross-platform&quot;</span>, <span class="hljs-literal">true</span>);<br>    <span class="hljs-comment">// 指定namenode</span><br>    conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;hdfs://master:8020&quot;</span>);<br>    <span class="hljs-comment">// 指定使用yarn框架</span><br>    conf.set(<span class="hljs-string">&quot;mapreduce.framework.name&quot;</span>, <span class="hljs-string">&quot;yarn&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">resourcenode</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;master&quot;</span>;<br>    <span class="hljs-comment">// 指定resourcemanager</span><br>    conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8032&quot;</span>);<br>    <span class="hljs-comment">// 指定资源分配器</span><br>    conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.scheduler.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8030&quot;</span>);<br>    conf.set(<span class="hljs-string">&quot;mapreduce.jobhistory.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:10020&quot;</span>);<br>    conf.set(<span class="hljs-string">&quot;mapreduce.job.jar&quot;</span>, <span class="hljs-string">&quot;E:\\LC.jar&quot;</span>);<br>    <span class="hljs-keyword">return</span> conf;<br>&#125;<br><br><span class="hljs-comment">//代码5-33 log4j.properties文件代码</span><br>log4j.rootLogger = INFO,stdout<br>log4j.appender.stdout=org.apache.log4j.ConsoleAppender<br>log4j.appender.stdout.Target=System.out<br>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout<br>log4j.appender.stdout.layout.ConversionPattern=%d&#123;yyyy/MM/dd HH:mm:ss,SSS&#125;- %c&#123;<span class="hljs-number">1</span>&#125;: %m%n<br><br>    <br><span class="hljs-comment">//代码5-35 设置自动打包</span><br>conf.set(<span class="hljs-string">&quot;mapreduce.job.jar&quot;</span>,JarUtil.jar(LogCount.class))    <br></code></pre></td></tr></table></figure><h4 id="LogCount-java-1"><a href="#LogCount-java-1" class="headerlink" title="LogCount.java"></a>LogCount.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> No5.Text.test3;<br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configured;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.FileSystem;<br><span class="hljs-keyword">import</span> org.apache.hadoop.fs.Path;<br><span class="hljs-keyword">import</span> org.apache.hadoop.io.IntWritable;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.Job;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.input.SequenceFileAsTextInputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.Tool;<br><span class="hljs-keyword">import</span> org.apache.hadoop.util.ToolRunner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogCount</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Configured</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Tool</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        String[] myArgs = &#123;<br>                <span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result/Select_Data/part-m-00000&quot;</span>,<br>                <span class="hljs-string">&quot;/Tipdm/Hadoop/MapReduce/Result/Log_Count3&quot;</span><br>        &#125;;<br>        <span class="hljs-keyword">try</span> &#123;<br>            ToolRunner.run(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogCount</span>(), myArgs);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">run</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> getMyConfiguration();<br>        <span class="hljs-type">Job</span> <span class="hljs-variable">job</span> <span class="hljs-operator">=</span> Job.getInstance(conf, <span class="hljs-string">&quot;Log Count&quot;</span>);<br>        job.setJarByClass(LogCount.class);<br>        job.setMapperClass(LogCountMapper.class);<br>        job.setReducerClass(LogCountReducer.class);<br>        job.setCombinerClass(LogCountCombiner.class);<br>        job.setPartitionerClass(LogCountPartitioner.class);<br>        job.setNumReduceTasks(<span class="hljs-number">2</span>);<br>        job.setOutputKeyClass(MemberLogTime.class);<br>        job.setOutputValueClass(IntWritable.class);<br>        job.setInputFormatClass(SequenceFileAsTextInputFormat.class);<br>        job.setOutputFormatClass(TextOutputFormat.class);<br>        FileInputFormat.addInputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">0</span>]));<br>        FileSystem.get(conf).delete(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]), <span class="hljs-literal">true</span>);<br>        FileOutputFormat.setOutputPath(job, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Path</span>(args[<span class="hljs-number">1</span>]));<br>        <span class="hljs-keyword">return</span> job.waitForCompletion(<span class="hljs-literal">true</span>) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration <span class="hljs-title function_">getMyConfiguration</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 声明配置</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>();<br>        conf.setBoolean(<span class="hljs-string">&quot;mapreduce.app-submission.cross-platform&quot;</span>, <span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 指定namenode</span><br>        conf.set(<span class="hljs-string">&quot;fs.defaultFS&quot;</span>, <span class="hljs-string">&quot;hdfs://master:8020&quot;</span>);<br>        <span class="hljs-comment">// 指定使用yarn框架</span><br>        conf.set(<span class="hljs-string">&quot;mapreduce.framework.name&quot;</span>, <span class="hljs-string">&quot;yarn&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">resourcenode</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;master&quot;</span>;<br>        <span class="hljs-comment">// 指定resourcemanager</span><br>        conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8032&quot;</span>);<br>        <span class="hljs-comment">// 指定资源分配器</span><br>        conf.set(<span class="hljs-string">&quot;yarn.resourcemanager.scheduler.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:8030&quot;</span>);<br>        conf.set(<span class="hljs-string">&quot;mapreduce.jobhistory.address&quot;</span>, resourcenode + <span class="hljs-string">&quot;:10020&quot;</span>);<br>        conf.set(<span class="hljs-string">&quot;mapreduce.job.jar&quot;</span>,JarUtil.jar(LogCount.class));<br>        <span class="hljs-keyword">return</span> conf;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="第6章-Hive数据仓库"><a href="#第6章-Hive数据仓库" class="headerlink" title="第6章 Hive数据仓库"></a>第6章 Hive数据仓库</h2><h3 id="任务6-2-访问Hive的3种方式"><a href="#任务6-2-访问Hive的3种方式" class="headerlink" title="任务6.2 访问Hive的3种方式"></a>任务6.2 访问Hive的3种方式</h3><h4 id="6-2-1-设置内嵌Derby模式"><a href="#6-2-1-设置内嵌Derby模式" class="headerlink" title="6.2.1 设置内嵌Derby模式"></a>6.2.1 设置内嵌Derby模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">1</span> 创建文件夹<br><span class="hljs-comment">// 由于要将安装包上传到/opt/apps文件夹下，所以先在/opt/下面创建apps文件夹</span><br>mkdir -p /opt/apps<br><span class="hljs-comment">// 切换至/opt/apps目录下</span><br>cd /opt/apps/<br><span class="hljs-comment">//切换至/opt/apps目录下后，通过Xshell提供的文件传输工具将apache-hive-3.1.2-bin.tar.gz上传至Linux系统中的/opt/apps目录下。</span><br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">2</span> 解压压缩包<br>tar -zxvf apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin.tar.gz -C /opt/<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">3</span> 启动Hive<br># 删除guava-<span class="hljs-number">19.0</span>.jar<br>rm -rf /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/lib/guava-<span class="hljs-number">19.0</span>.jar<br># 复制guava-<span class="hljs-number">27.0</span>-jre.jar<br>cp /usr/local/hadoop-<span class="hljs-number">3.1</span><span class="hljs-number">.4</span>/share/hadoop/common/lib/guava-<span class="hljs-number">27.0</span>-jre.jar /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/lib/guava-<span class="hljs-number">27.0</span>.jar<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">4</span> 解决日志jar包冲突<br>mv log4j-slf4j-impl-<span class="hljs-number">2.10</span><span class="hljs-number">.0</span>.jar log4j-slf4j-impl-<span class="hljs-number">2.10</span><span class="hljs-number">.0</span>.jar.bak<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">5</span> 初始化元数据库<br># 切换至Hive的安装目录下的bin目录执行如下命令<br>cd /usr/local/hive/bin<br>./schematool -dbType derby -initSchema<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">3</span> Hive环境变量配置信息<br>vim /etc/profile<br>#添加环境变量<br>export JAVA_HOME=/usr/local/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_221</span>-amd64<br>export HADOOP_HOME=/opt/hadoop-<span class="hljs-number">3.1</span><span class="hljs-number">.4</span><br>export HIVE_HOME=/opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.3</span>-bin<br>export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin<br>#source配置文件<br>source /etc/profile<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">4</span>、<span class="hljs-number">6</span>-<span class="hljs-number">5</span> 查询Hive数据仓库列表<br>hive<br>show databases;<br><br></code></pre></td></tr></table></figure><h4 id="6-2-2-设置直连数据库模式"><a href="#6-2-2-设置直连数据库模式" class="headerlink" title="6.2.2 设置直连数据库模式"></a>6.2.2 设置直连数据库模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">6</span> 删除旧版本MySQL的残留信息<br>rm -rf /usr/lib/mysql<br>rm -rf /usr/include/mysql<br>rm -rf /etc/my.cnf<br>rm -rf /<span class="hljs-keyword">var</span>/lib/mysql<br>rm -rf /usr/share/mysql<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">7</span> MySQL包的安装<br>rpm -ivh mysql-community-common-<span class="hljs-number">5.7</span><span class="hljs-number">.18</span>-<span class="hljs-number">1.</span>el7.x86_64.rpm<br>rpm -ivh mysql-community-libs-<span class="hljs-number">5.7</span><span class="hljs-number">.18</span>-<span class="hljs-number">1.</span>el7.x86_64.rpm<br>rpm -ivh mysql-community-client-<span class="hljs-number">5.7</span><span class="hljs-number">.18</span>-<span class="hljs-number">1.</span>el7.x86_64.rpm<br>rpm -ivh mysql-community-server-<span class="hljs-number">5.7</span><span class="hljs-number">.18</span>-<span class="hljs-number">1.</span>el7.x86_64.rpm<br>rpm -ivh mysql-community-*<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">6</span> 修改my.cnf文件,添加配置信息<br>[client]<br><span class="hljs-keyword">default</span>-character-set=utf8<br>[mysql]<br><span class="hljs-keyword">default</span>-character-set=utf8<br>[mysqld]<br>character_set_server=utf8<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">8</span> 启动MySQL服务器<br><span class="hljs-comment">// 启动MySQL服务</span><br>systemctl start mysqld<br>service mysqld restart<br>Redirecting to /bin/systemctl restart mysqld.service<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">7</span>、<span class="hljs-number">6</span>-<span class="hljs-number">8</span> 查看初始密码并登录Mysql<br>cat /<span class="hljs-keyword">var</span>/log/mysqld.log<br>#登录Mysql，再输入初始密码<br>mysql -u root -p<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">9</span> 修改默认密码<br><span class="hljs-comment">// 设置新密码的验证策略为0，表示最低</span><br>mysql&gt; set global validate_password_policy=<span class="hljs-number">0</span>;<br><span class="hljs-comment">// 设置新密码的长度最小值为6位</span><br>mysql&gt; set global validate_password_length=<span class="hljs-number">6</span>;<br><span class="hljs-comment">// 设置新密码为123456</span><br>mysql&gt; set password <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span>=password(<span class="hljs-string">&#x27;123456&#x27;</span>);<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">10</span> 设置远程登录和开机启动<br><span class="hljs-comment">// 给root设置远程登录权限</span><br>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;123456&#x27;</span> WITH GRANT OPTION;<br>mysql&gt;FLUSH PRIVILEGES;<br><span class="hljs-comment">// 使用“quit;”命令退出MySQL，在centos中设置MySQL开机启动</span><br>$ chkconfig mysqld on<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">9</span> Hive全局变量配置信息<br>vim /etc/profile<br>#添加环境变量<br>export JAVA_HOME=/usr/java/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_281</span>-amd64<br>export HADOOP_HOME=/usr/local/hadoop-<span class="hljs-number">3.1</span><span class="hljs-number">.4</span><br>export HIVE_HOME=/opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin<br>export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin<br>#source配置文件<br>source /etc/profile<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">11</span> 配置hive-site.xml配置信息<br>cd /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/conf<br>vim hive-site.xml<br>#添加相关内容<br>&lt;configuration&gt;<br>  &lt;property&gt;<br>       &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;<br>&lt;value&gt;jdbc:mysql:<span class="hljs-comment">//192.168.128.130:3306/hive?createDatabaseIfNotExist=true&lt;/value&gt;</span><br>       &lt;description&gt;Mysql连接协议&lt;/description&gt;<br>  &lt;/property&gt;<br>&lt;property&gt;<br>       &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;<br>       &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;<br>       &lt;description&gt;JDBC连接驱动&lt;/description&gt;<br>  &lt;/property&gt;<br>&lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;<br>        &lt;value&gt;root&lt;/value&gt;<br>       &lt;description&gt;用户名&lt;/description&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;<br>        &lt;value&gt;<span class="hljs-number">123456</span>&lt;/value&gt;<br>       &lt;description&gt;密码&lt;/description&gt;<br>  &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">12</span> 复制MySQL连接驱动的jar包至Hive安装包的lib目录<br>cp /opt/apps/mysql-connector-java-<span class="hljs-number">5.1</span><span class="hljs-number">.32</span>-bin.jar /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/lib/<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">10</span> 初始化数据库<br>schematool  -dbType mysql -initSchema<br><br></code></pre></td></tr></table></figure><h4 id="6-2-3-设置远程服务器模式"><a href="#6-2-3-设置远程服务器模式" class="headerlink" title="6.2.3 设置远程服务器模式"></a>6.2.3 设置远程服务器模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java">#前提步骤 将hive安装包发送各节点，并配置环境变量<br>scp -r /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin slave2:/opt<br>scp -r /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin slave3:/opt<br>#将环境变量发送到slave2、slave3，去对应节点source /etc/profile<br>scp -r /etc/profile slave2:/etc<br>scp -r /etc/profile slave3:/etc<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">13</span> slave2上hive-site.xml的配置<br>cd /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/conf<br>vim hive-site.xml<br>#添加相关内容<br>&lt;configuration&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;<br>        &lt;value&gt;/user/hive_remote/warehouse&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; &lt;value&gt;jdbc:mysql:<span class="hljs-comment">//192.168.128.130:3306/hive_remote?createDatabaseIfNotExist=true&lt;/value&gt;</span><br>        &lt;description&gt;Mysql连接协议&lt;/description&gt;<br>  &lt;/property&gt;<br>&lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;<br>        &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;<br>        &lt;description&gt;JDBC连接驱动&lt;/description&gt;<br>  &lt;/property&gt;<br>&lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;<br>        &lt;value&gt;root&lt;/value&gt;<br>        &lt;description&gt;用户名&lt;/description&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;<br>        &lt;value&gt;<span class="hljs-number">123456</span>&lt;/value&gt;<br>        &lt;description&gt;密码&lt;/description&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;datanucleus.schema.autoCreateAll&lt;/name&gt;<br>        &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>      &lt;name&gt;hive.metastore.schema.verification&lt;/name&gt;<br>      &lt;value&gt;<span class="hljs-literal">false</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">14</span> slave3上hive-site.xml的配置<br>cd /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/conf<br>vim hive-site.xml<br>#添加相关内容<br>&lt;configuration&gt;<br>  &lt;property&gt;<br>        &lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;<br>        &lt;value&gt;/user/hive_remote/warehouse&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>         &lt;name&gt;hive.metastore.uris&lt;/name&gt;<br>         &lt;value&gt;thrift:<span class="hljs-comment">//192.168.128.130:9083&lt;/value&gt;</span><br>  &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">13</span> 在slave2节点上启动hive服务,在slave3上开启Hive访问服务器<br>#在slave2上<br>hive --service metastore &amp;<br>#在slave3上<br>hive<br><br>图<span class="hljs-number">6</span>-<span class="hljs-number">15</span> 查看新数据库，在master上<br>mysql -u root -p <span class="hljs-number">123456</span><br>show databases;<br><br></code></pre></td></tr></table></figure><h3 id="任务6-3-实现Hive表的创建与修改"><a href="#任务6-3-实现Hive表的创建与修改" class="headerlink" title="任务6.3 实现Hive表的创建与修改"></a>任务6.3 实现Hive表的创建与修改</h3><h4 id="6-3-1-了解Hive数据定义语言基本语法"><a href="#6-3-1-了解Hive数据定义语言基本语法" class="headerlink" title="6.3.1 了解Hive数据定义语言基本语法"></a>6.3.1 了解Hive数据定义语言基本语法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">图<span class="hljs-number">6</span>-<span class="hljs-number">16</span> 创建student数据库<br>#启动hive服务<br>hive --service metastore &amp;<br>#开启hive<br>hive<br>#创建student数据库<br>create database student;<br></code></pre></td></tr></table></figure><h4 id="6-3-2-创建表基本操作"><a href="#6-3-2-创建表基本操作" class="headerlink" title="6.3.2 创建表基本操作"></a>6.3.2 创建表基本操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">15</span> 创建user_info表<br>create table <span class="hljs-title function_">user_info</span><span class="hljs-params">(id <span class="hljs-type">int</span>,name string)</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">16</span> 上传student_info至HDFS的/stu目录下<br>hdfs dfs -mkdir /stu<br>hdfs dfs -put student_info.txt /stu<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">17</span> 创建外部表student_info<br>create external table <span class="hljs-title function_">student_info</span><span class="hljs-params">(</span><br><span class="hljs-params">stu_no string,</span><br><span class="hljs-params">stu_name string,</span><br><span class="hljs-params">stu_sex string,</span><br><span class="hljs-params">telphone string,</span><br><span class="hljs-params">stu_class string)</span><br>row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span> location <span class="hljs-string">&#x27;/stu&#x27;</span>;<br>#查看数据库<br>show tables;<br>#查看student_info<br>select * from student_info;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">18</span> 创建分区表<br>create table <span class="hljs-title function_">teacher_info</span><span class="hljs-params">(t_no string,t_name string,t_sex string,t_age string)</span> partitioned <span class="hljs-title function_">by</span><span class="hljs-params">(depart string)</span> row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span>stored as textfile;<br><br></code></pre></td></tr></table></figure><h4 id="6-3-3-修改表基本操作"><a href="#6-3-3-修改表基本操作" class="headerlink" title="6.3.3 修改表基本操作"></a>6.3.3 修改表基本操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">19</span> 创建成绩信息表<br>create table <span class="hljs-title function_">score</span><span class="hljs-params">(</span><br><span class="hljs-params">stu_no string,</span><br><span class="hljs-params">cla_no string,</span><br><span class="hljs-params">grade <span class="hljs-type">float</span></span><br><span class="hljs-params">)</span> partitioned <span class="hljs-title function_">by</span> <span class="hljs-params">(class_name string)</span>;<br>#查看score表结构<br>describe extended score ;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">20</span> 将表score重命名成stu_score<br>alter table score rename to stu_score; <br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">21</span> 向表stu_score添加列<br>alter table stu_score add <span class="hljs-title function_">columns</span> <span class="hljs-params">(credit <span class="hljs-type">int</span>,gpa <span class="hljs-type">float</span>)</span>;<br>#查看score表结构<br>describe extenden stu_score<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">22</span> 将表stu_score中列credit重命名为Credits,并将数据类型修改为Float<br>alter table stu_score change column credit Credits <span class="hljs-type">float</span>;.<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">23</span> 修改表stu_score中的分区，新增class_name为<span class="hljs-number">07111301</span>的分区<br>alter table stu_score add <span class="hljs-title function_">partition</span><span class="hljs-params">(class_name=<span class="hljs-string">&#x27;07111301&#x27;</span>)</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">24</span> 删除分区，将<span class="hljs-number">6</span>-<span class="hljs-number">32</span>新增的class_name为<span class="hljs-number">07111301</span>的分区删除<br>alter table stu_score drop <span class="hljs-keyword">if</span> exists <span class="hljs-title function_">partition</span><span class="hljs-params">(class_name = <span class="hljs-string">&#x27;07111301&#x27;</span>)</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">25</span> 删除表stu_score，可直接使用drop table命令删除表<br>drop table stu_score;<br><br></code></pre></td></tr></table></figure><h3 id="任务6-4-实现Hive表中数据的增删改查"><a href="#任务6-4-实现Hive表中数据的增删改查" class="headerlink" title="任务6.4 实现Hive表中数据的增删改查"></a>任务6.4 实现Hive表中数据的增删改查</h3><h4 id="6-4-2-向表中装载（Load）文件"><a href="#6-4-2-向表中装载（Load）文件" class="headerlink" title="6.4.2 向表中装载（Load）文件"></a>6.4.2 向表中装载（Load）文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">26</span> 创建student、course、sc3个表结构<br>create table <span class="hljs-title function_">student</span><span class="hljs-params">(Sno <span class="hljs-type">int</span>,Sname string,Sex string,Sage <span class="hljs-type">int</span>,Sdept string)</span>row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span>stored as textfile;<br>create table <span class="hljs-title function_">course</span><span class="hljs-params">(Cno <span class="hljs-type">int</span>,Cname string)</span> row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span> stored as textfile;<br>create table <span class="hljs-title function_">sc</span><span class="hljs-params">(Sno <span class="hljs-type">int</span>,Cno <span class="hljs-type">int</span>,Grade <span class="hljs-type">int</span>)</span>row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span> stored as textfile;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">27</span> 装载数据<br>load data local inpath <span class="hljs-string">&#x27;/root/hivedata/students.txt&#x27;</span> overwrite into table student;<br>load data local inpath <span class="hljs-string">&#x27;/root/hivedata/sc.txt&#x27;</span> overwrite into table sc;<br>load data local inpath <span class="hljs-string">&#x27;/root/hivedata/course.txt&#x27;</span> overwrite into table course;<br>#查询Hive中的myhive数据库下的student、course和sc表的数据<br>select * from student;<br></code></pre></td></tr></table></figure><h4 id="6-4-3-查询数据"><a href="#6-4-3-查询数据" class="headerlink" title="6.4.3 查询数据"></a>6.4.3 查询数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">28</span> select查询<br><span class="hljs-comment">// 查询全体学生的学号与姓名</span><br>select Sno,Sname from student;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">29</span> where条件查询<br><span class="hljs-comment">// 查询所有的男生的学号和姓名</span><br>select Sno,Sname from student where Sex=<span class="hljs-string">&#x27;男&#x27;</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">30</span> join连接查询<br><span class="hljs-comment">// 查询选修了课程的学生姓名</span><br>select distinct Sname from student inner join sc on student.Sno=Sc.Sno;<br><span class="hljs-comment">// 查询学生的课程成绩情况</span><br>select student.Sname,course.Cname,sc.Grade from student join sc on student.Sno=sc.Sno join course on sc.cno=course.cno;<br><span class="hljs-comment">// 查询选修2号课程且成绩在90分以上的所有学生。</span><br>select student.Sname,sc.Grade from student join sc on student.Sno=sc.Sno where sc.Cno=<span class="hljs-number">2</span> and sc.Grade&gt;<span class="hljs-number">90</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">31</span> Group by 分组查询<br><span class="hljs-comment">// 各个课程号及相应的选课人数</span><br>select Cno,count(<span class="hljs-number">1</span>) from sc group by Cno;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">32</span> having 条件查询<br><span class="hljs-comment">// 查询选修了3门以上的课程的学生学号</span><br>select Sno from sc group by Sno having <span class="hljs-title function_">count</span><span class="hljs-params">(Cno)</span>&gt;<span class="hljs-number">3</span>;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">33</span> order by 排序查询<br><span class="hljs-comment">// 查询学生信息，结果按学号全局升序排序</span><br>select Sno from student order by Sno;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">34</span> sort by 排序查询<br><span class="hljs-comment">//设置reduce个数</span><br>set mapred.reduce.tasks=<span class="hljs-number">2</span>;<br><span class="hljs-comment">// 查询学生信息，按性别分区，在分区内按年龄有序</span><br>insert overwrite local directory <span class="hljs-string">&#x27;/home/hadoop/out&#x27;</span> select * from student distribute by Sex sort by Sage;<br></code></pre></td></tr></table></figure><h4 id="6-4-4-插入数据"><a href="#6-4-4-插入数据" class="headerlink" title="6.4.4 插入数据"></a>6.4.4 插入数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">35</span> insert插入数据<br><span class="hljs-comment">// 向student表中插入一条新的记录</span><br>insert into table student <span class="hljs-title function_">values</span><span class="hljs-params">(<span class="hljs-number">2018213223</span>,<span class="hljs-string">&#x27;王小哲&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-number">18</span>,<span class="hljs-string">&#x27;IS&#x27;</span>)</span>;<br>#查询student表的数据进行验证<br>select * from student;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">36</span> 将查询结果作为新记录插入表中<br><span class="hljs-comment">// 将student中查询的结果再插入到student表的末尾</span><br>insert into table student select * from student;<br><span class="hljs-comment">// 将student中查询的结果再插入到student中，并覆盖原有表中的内容</span><br>insert overwrite table student select * from student;<br></code></pre></td></tr></table></figure><h4 id="6-4-5-删除表中数据"><a href="#6-4-5-删除表中数据" class="headerlink" title="6.4.5 删除表中数据"></a>6.4.5 删除表中数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">37</span> 默认情况下使用update和delete操作的报错信息<br>hive&gt; delete from student where Sno=’<span class="hljs-number">2018213026</span>’<br>FAILED: SemanticException [Error <span class="hljs-number">10294</span>]: Attempt to <span class="hljs-keyword">do</span> update or delete using transaction manager that does not support these operations.<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">38</span> hive-site.xml配置文件增加的内容<br>cd /opt/apache-hive-<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>-bin/conf<br>vim hive-site.xml<br>#添加相关内容<br>&lt;property&gt;<br>    &lt;name&gt;hive.support.concurrency&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>    &lt;property&gt;<br>    &lt;name&gt;hive.enforce.bucketing&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>    &lt;property&gt;<br>    &lt;name&gt;hive.exec.dynamic.partition.mode&lt;/name&gt;<br>    &lt;value&gt;nonstrict&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;hive.txn.manager&lt;/name&gt;<br>    &lt;value&gt;org.apache.hadoop.hive.ql.lockmgr.DbTxnManager&lt;/value&gt;<br>  &lt;/property&gt;<br>    &lt;property&gt;<br>    &lt;name&gt;hive.compactor.initiator.on&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;hive.compactor.worker.threads&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-number">1</span>&lt;/value&gt;<br>  &lt;/property&gt;<br>  &lt;property&gt;<br>    &lt;name&gt;hive.in.test&lt;/name&gt;<br>    &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>&lt;/property&gt;<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">39</span> 删除表的指定数据<br><span class="hljs-comment">// 删除学号为2018213026的学生信息</span><br>delete from student where Sno=’<span class="hljs-number">2018213026</span>’<br><br>代码<span class="hljs-number">6</span>-<span class="hljs-number">40</span> 清空表数据<br><span class="hljs-comment">// 清空学生表student的信息</span><br>truncate table student<br><br></code></pre></td></tr></table></figure><h3 id="任务6-5-掉线率top20基站统计"><a href="#任务6-5-掉线率top20基站统计" class="headerlink" title="任务6.5 掉线率top20基站统计"></a>任务6.5 掉线率top20基站统计</h3><h4 id="代码6-41-创建jizhan表结构"><a href="#代码6-41-创建jizhan表结构" class="headerlink" title="代码6-41 创建jizhan表结构"></a>代码6-41 创建jizhan表结构</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">41</span> 创建jizhan表结构<br>hive&gt;use myhive;<br>hive&gt; create table <span class="hljs-title function_">jizhan</span><span class="hljs-params">(</span><br><span class="hljs-params">record_time string,</span><br><span class="hljs-params">imei <span class="hljs-type">int</span>,</span><br><span class="hljs-params">cell string,</span><br><span class="hljs-params">ph_num <span class="hljs-type">int</span>,</span><br><span class="hljs-params">call_num <span class="hljs-type">int</span>,</span><br><span class="hljs-params">drop_num <span class="hljs-type">int</span>,</span><br><span class="hljs-params">duration <span class="hljs-type">int</span>,</span><br><span class="hljs-params">drop_rate <span class="hljs-type">double</span>,</span><br><span class="hljs-params">net_type string,</span><br><span class="hljs-params">erl <span class="hljs-type">int</span>)</span><br>row format delimited fields terminated by <span class="hljs-string">&#x27;,&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="代码6-42-装载jizhan-information-scv文件至jizhan表"><a href="#代码6-42-装载jizhan-information-scv文件至jizhan表" class="headerlink" title="代码6-42 装载jizhan_information.scv文件至jizhan表"></a>代码6-42 装载jizhan_information.scv文件至jizhan表</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">42</span> 装载jizhan_information.scv文件至jizhan表<br>load data local inpath <span class="hljs-string">&#x27;/root/data/jizhan_information.csv&#x27;</span> into table jizhan;<br>select * from jizhan limit <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><h4 id="代码6-43-创建jizhan-result表结构"><a href="#代码6-43-创建jizhan-result表结构" class="headerlink" title="代码6-43 创建jizhan_result表结构"></a>代码6-43 创建jizhan_result表结构</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">43</span> 创建jizhan_result表结构<br>hive&gt;create table <span class="hljs-title function_">jizhan_result</span><span class="hljs-params">(</span><br><span class="hljs-params">imei string,</span><br><span class="hljs-params">drop_num <span class="hljs-type">int</span>,</span><br><span class="hljs-params">duration <span class="hljs-type">int</span>,</span><br><span class="hljs-params">drop_rate <span class="hljs-type">double</span></span><br><span class="hljs-params">)</span>;<br></code></pre></td></tr></table></figure><h4 id="代码6-44-基站掉话率统计"><a href="#代码6-44-基站掉话率统计" class="headerlink" title="代码6-44 基站掉话率统计"></a>代码6-44 基站掉话率统计</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">6</span>-<span class="hljs-number">44</span> 基站掉话率统计<br>hive&gt;from jizhan <br>insert into jizhan_result <br>select imei,sum(drop_num) as sdrop,sum(duration) as sdura,sum(drop_num)/sum(duration) as drop_rate <br>group by imei <br>order by drop_rate desc;<br></code></pre></td></tr></table></figure><h2 id="第7章-HBase分布式数据库"><a href="#第7章-HBase分布式数据库" class="headerlink" title="第7章 HBase分布式数据库"></a>第7章 HBase分布式数据库</h2><h3 id="任务7-2-安装部署HBase集群"><a href="#任务7-2-安装部署HBase集群" class="headerlink" title="任务7.2 安装部署HBase集群"></a>任务7.2 安装部署HBase集群</h3><h4 id="7-2-1了解并安装Zookeeper"><a href="#7-2-1了解并安装Zookeeper" class="headerlink" title="7.2.1了解并安装Zookeeper"></a>7.2.1了解并安装Zookeeper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">1</span> 切换到/opt/apps 目录<br>cd /opt/apps<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">2</span> 解压安装包<br>tar -zxvf apache-zookeeper-<span class="hljs-number">3.5</span><span class="hljs-number">.6</span>-bin.tar.gz -C /opt<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">3</span> 复制配置文件<br>cd /opt/apache-zookeeper-<span class="hljs-number">3.5</span><span class="hljs-number">.6</span>-bin/conf/<br>cp zoo_sample.cfg zoo.cfg<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">4</span> 配置zoo.cfg文件<br>vim zoo.cfg<br>#添加内容为<br># The number of milliseconds of each tick<br>tickTime=<span class="hljs-number">2000</span><br># The number of ticks that the initial <br># synchronization phase can take<br>initLimit=<span class="hljs-number">10</span><br># The number of ticks that can pass between <br># sending a request and getting an acknowledgement<br>syncLimit=<span class="hljs-number">5</span><br># the directory where the snapshot is stored.<br># <span class="hljs-keyword">do</span> not use /tmp <span class="hljs-keyword">for</span> storage, /tmp here is just <br># example sakes.<br># 设置数据文件目录+数据持久化路径<br>dataDir=/root/data/zookeeper<br># the port at which the clients will connect<br>clientPort=<span class="hljs-number">2181</span><br># the maximum number of client connections.<br># increase <span class="hljs-built_in">this</span> <span class="hljs-keyword">if</span> you need to handle more clients<br>#maxClientCnxns=<span class="hljs-number">60</span><br>#<br># Be sure to read the maintenance section of the <br># administrator guide before turning on autopurge.<br>#<br># http:<span class="hljs-comment">//zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br>#<br># The number of snapshots to retain in dataDir<br>#autopurge.snapRetainCount=<span class="hljs-number">3</span><br># Purge task interval in hours<br># Set to <span class="hljs-string">&quot;0&quot;</span> to disable auto purge feature<br>#autopurge.purgeInterval=<span class="hljs-number">1</span><br># 配置zookeeper集群的服务器编号以及对应的主机名、选举端口号和通信端口号（心跳端口号）<br>server<span class="hljs-number">.1</span>=slave1:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br>server<span class="hljs-number">.2</span>=slave2:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br>server<span class="hljs-number">.3</span>=slave3:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">5</span> 创建并配置myid文件<br>mkdir -p /root/data/zookeeper/<br>cd /root/data/zookeeper/<br>echo <span class="hljs-number">1</span> &gt; myid<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">6</span> 配置Zookeeper的环境变量<br>#ZK_HOME<br>export ZK_HOME=/opt/apache-zookeeper-<span class="hljs-number">3.8</span><span class="hljs-number">.4</span>-bin<br>export PATH=$PATH:$ZK_HOME/bin<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">7</span> 分发zookeeper相关文件<br> 分发Zookeeper安装包至slave2和slave3上<br>$ scp -r /opt/apache-zookeeper-<span class="hljs-number">3.5</span><span class="hljs-number">.6</span>-bin/ slave2:/opt/<br>$ scp -r /opt/apache-zookeeper-<span class="hljs-number">3.5</span><span class="hljs-number">.6</span>-bin/ slave3:/opt/<br># 分发myid文件至slave2和slave3上<br>$ scp -r /root/data/zookeeper/myid slave2:`pwd`<br>$ scp -r /root/data/zookeeper/myid slave2:`pwd`<br># 分别切换至slave2和slave3的/root/data/zookeeper目录下<br># 修改slave2和slave3上的myid文件的值分别为<span class="hljs-number">2</span>、<span class="hljs-number">3</span><br>echo <span class="hljs-number">2</span> &gt; myid<br>echo <span class="hljs-number">3</span> &gt; myid<br># 发分profile文件至slave2和slave3服务器上<br>$ scp /etc/profile slave2:/etc/profile<br>$ scp /etc/profile slave3:/etc/profile<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">8</span> 生效环境变量<br>#分别在slave1、slave2、slave3服务器上刷新profile配置文件，使得环境变量生效。<br>source /etc/profile<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">9</span> 启动Zookeeper服务<br>#启动Zookeeper服务。首先，依次在slave1、slave2、slave3服务器上启动Zookeeper服务，<br>#以在slave1节点上启动Zookeeper服务为例，<br>#并查看该节点Zookeeper服务的状态及角色<br>zkServer.sh start<br>zkServer.sh status<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">10</span> 关闭Zookeeper服务<br>$ zkServer.sh stop<br><br></code></pre></td></tr></table></figure><h4 id="7-2-2安装配置HBase集群"><a href="#7-2-2安装配置HBase集群" class="headerlink" title="7.2.2安装配置HBase集群"></a>7.2.2安装配置HBase集群</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs java">#从HBase的官网下载HBase安装包，本书使用的HBase版本为HBase <span class="hljs-number">2.2</span><span class="hljs-number">.2</span>。<br>#将下载的HBase安装包上传至Linux系统的/opt/apps目录下。<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">11</span> 解压HBase安装包<br>cd /opt/apps/<br>tar -zxvf hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>-bin.tar.gz -C /opt<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">12</span> 配置hbase-env.sh文件<br>cd /opt/hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>/conf<br>vim hbase-env.sh<br>#添加内容<br>export JAVA_HOME=/usr/java/jdk1<span class="hljs-number">.8</span><span class="hljs-number">.0_281</span>-amd64/<br>export HBASE_MANAGES_ZK=<span class="hljs-literal">false</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">13</span> 修改hbase-site.xml<br>vim hbase-site.xml<br>#添加内容<br>&lt;configuration&gt;<br>    &lt;property&gt;<br>&lt;name&gt;hbase.rootdir&lt;/name&gt;<br>&lt;value&gt;hdfs:<span class="hljs-comment">//master:8020/hbase&lt;/value&gt;</span><br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;hbase.master&lt;/name&gt;<br>&lt;value&gt;master&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;hbase.cluster.distributed&lt;/name&gt;<br>&lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;hbase.zookeeper.property.clientPort&lt;/name&gt;<br>&lt;value&gt;<span class="hljs-number">2181</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;<br>&lt;value&gt;slave1,slave2,slave3&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;zookeeper.session.timeout&lt;/name&gt;<br>&lt;value&gt;<span class="hljs-number">60000000</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;property&gt;<br>&lt;name&gt;dfs.support.append&lt;/name&gt;<br>&lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;!-- 防止连接<span class="hljs-number">16010</span>失败 --&gt;<br>&lt;property&gt;<br>   &lt;name&gt;hbase.unsafe.stream.capability.enforce&lt;/name&gt;<br>         &lt;value&gt;<span class="hljs-literal">false</span>&lt;/value&gt;<br>&lt;/property&gt;<br>&lt;/configuration&gt;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">14</span> 修改regionservers文件<br>vim regionservers<br>#添加内容<br>master<br>slave1<br>slave2<br>slave3<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">15</span> 添加HBase的环境变量<br>vim /etc/profile<br>#HBASE_HOME<br>export HBASE_HOME=/opt/hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span><br>export PATH=$PATH:$HBASE_HOME/bin<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">16</span> 分发HBase相关文件<br>#分发HBase相关配置文件至其他节点。首先，将HBase安装目录分发至slave1、slave2和slave3节点上；<br>#其次profile文件也分发至slave1、slave2和slave3节点上<br># 分发HBase安装包至slave1、slave2和slave3上<br>scp -r /opt/hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>/ slave1:/opt/<br>scp -r /opt/hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>/ slave2:/opt/<br>scp -r /opt/hbase-<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>/ slave3:/opt/<br>#分发profile文件至slave2和slave3节点上<br>scp /etc/profile slave1:/etc/profile<br>scp /etc/profile slave2:/etc/profile<br>scp /etc/profile slave3:/etc/profile<br>#使环境变量生效。在slave1、slave2、slave3节点上分别<br>#使用“source /etc/profile”命令刷新profile配置文件<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">17</span> 启动HBase服务<br>start-all.sh<br>zkServer.sh start<br>start-hbase.sh<br>#启动成功后，可通过浏览器输入“http:<span class="hljs-comment">//192.168.65.141:16010”网址，查看Master信息</span><br>#打开浏览器输入“http:<span class="hljs-comment">//192.168.65.142:16030”网址，查看Region Server信息</span><br>#关闭HBase服务。若关闭HBase服务，则只需在slave1机器上执行hbase-stop.sh命令<br><br></code></pre></td></tr></table></figure><h3 id="任务7-3-掌握HBase常用的Shell命令"><a href="#任务7-3-掌握HBase常用的Shell命令" class="headerlink" title="任务7.3 掌握HBase常用的Shell命令"></a>任务7.3 掌握HBase常用的Shell命令</h3><h4 id="7-3-1-修改与删除表"><a href="#7-3-1-修改与删除表" class="headerlink" title="7.3.1 修改与删除表"></a>7.3.1 修改与删除表</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">18</span> 表的创建<br>hbase shell<br><span class="hljs-title function_">hbase</span><span class="hljs-params">(main)</span>:<span class="hljs-number">001</span>:<span class="hljs-number">0</span>&gt; create <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;info&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">19</span> 获取表信息<br>hbase(main):<span class="hljs-number">003</span>:<span class="hljs-number">0</span>&gt; describe <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">20</span> 查询表student是否存在<br>hbase(main):009:<span class="hljs-number">0</span>&gt; exists <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">21</span>判断表是否enable/disable<br><span class="hljs-title function_">hbase</span><span class="hljs-params">(main)</span>:<span class="hljs-number">011</span>:<span class="hljs-number">0</span>&gt; is_enabled <span class="hljs-string">&#x27;student&#x27;</span><br>hbase(main):<span class="hljs-number">012</span>:<span class="hljs-number">0</span>&gt; is_disabled <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">22</span> 增加表列族relationship<br><span class="hljs-title function_">hbase</span><span class="hljs-params">(main)</span>:<span class="hljs-number">004</span>:<span class="hljs-number">0</span>&gt; disable <span class="hljs-string">&#x27;student&#x27;</span><br>hbase(main):<span class="hljs-number">005</span>:<span class="hljs-number">0</span>&gt; alter <span class="hljs-string">&#x27;student&#x27;</span>,NAME=&gt; <span class="hljs-string">&#x27;relationship&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">23</span> 删除列族relationship<br><span class="hljs-title function_">hbase</span><span class="hljs-params">(main)</span>:<span class="hljs-number">007</span>:<span class="hljs-number">0</span>&gt; disable <span class="hljs-string">&#x27;student&#x27;</span><br>hbase(main):008:<span class="hljs-number">0</span>&gt; alter <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;delete&#x27;</span>=&gt;<span class="hljs-string">&#x27;relationship&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">24</span> 删除student表<br>hbase(main):<span class="hljs-number">014</span>:<span class="hljs-number">0</span>&gt; disable <span class="hljs-string">&#x27;student&#x27;</span><br>hbase(main):<span class="hljs-number">015</span>:<span class="hljs-number">0</span>&gt; drop <span class="hljs-string">&#x27;student&#x27;</span><br>hbase(main):<span class="hljs-number">016</span>:<span class="hljs-number">0</span>&gt; exists <span class="hljs-string">&#x27;student&#x27;</span><br><br></code></pre></td></tr></table></figure><h4 id="7-3-2-查询表数据"><a href="#7-3-2-查询表数据" class="headerlink" title="7.3.2 查询表数据"></a>7.3.2 查询表数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">25</span> 插入数据<br>hbase(main):018:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112001&#x27;</span>,<span class="hljs-string">&#x27;info:name&#x27;</span>,<span class="hljs-string">&#x27;Ben&#x27;</span><br>hbase(main):019:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112001&#x27;</span>,<span class="hljs-string">&#x27;relationship:father&#x27;</span>,<span class="hljs-string">&#x27;Bill&#x27;</span> <br>hbase(main):<span class="hljs-number">022</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112001&#x27;</span>,<span class="hljs-string">&#x27;relationship:mather&#x27;</span>,<span class="hljs-string">&#x27;Rose&#x27;</span><br>hbase(main):<span class="hljs-number">020</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112002&#x27;</span>,<span class="hljs-string">&#x27;info:name&#x27;</span>,<span class="hljs-string">&#x27;Bobby&#x27;</span><br>hbase(main):<span class="hljs-number">026</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112002&#x27;</span>,<span class="hljs-string">&#x27;relationship:father&#x27;</span>,<span class="hljs-string">&#x27;Bert&#x27;</span><br>hbase(main):<span class="hljs-number">023</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112002&#x27;</span>,<span class="hljs-string">&#x27;relationship:mather&#x27;</span>,<span class="hljs-string">&#x27;Anna&#x27;</span><br>hbase(main):<span class="hljs-number">027</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span>,<span class="hljs-string">&#x27;info:name&#x27;</span>,<span class="hljs-string">&#x27;Jerry&#x27;</span><br>hbase(main):<span class="hljs-number">033</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span>,<span class="hljs-string">&#x27;relationship:father&#x27;</span>,<span class="hljs-string">&#x27;Jason&#x27;</span><br>hbase(main):<span class="hljs-number">032</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span>,<span class="hljs-string">&#x27;relationship:mather&#x27;</span>,<span class="hljs-string">&#x27;Lori&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">26</span> 查询表数据student<br><span class="hljs-title function_">hbase</span><span class="hljs-params">(main)</span>:039:<span class="hljs-number">0</span>&gt; get <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112002&#x27;</span><br>hbase(main):<span class="hljs-number">040</span>:<span class="hljs-number">0</span>&gt; get <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112002&#x27;</span>,<span class="hljs-string">&#x27;relationship&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">27</span> 扫描student表数据<br>hbase(main):<span class="hljs-number">041</span>:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">28</span> 统计student表记录数<br>hbase(main):<span class="hljs-number">042</span>:<span class="hljs-number">0</span>&gt; count <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">29</span> 删除列<br>hbase(main):<span class="hljs-number">044</span>:<span class="hljs-number">0</span>&gt; delete <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span>,<span class="hljs-string">&#x27;relationship:father&#x27;</span><br>hbase(main):<span class="hljs-number">045</span>:<span class="hljs-number">0</span>&gt; get <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span>,<span class="hljs-string">&#x27;relationship&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">30</span> 删除RowKey为<span class="hljs-number">07112003</span>的所有行<br>hbase(main):<span class="hljs-number">047</span>:<span class="hljs-number">0</span>&gt; deleteall <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;07112003&#x27;</span><br>hbase(main):048:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">&#x27;student&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">31</span> 删除表中所有的数据<br>hbase(main):049:<span class="hljs-number">0</span>&gt; truncate <span class="hljs-string">&#x27;student&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><br></code></pre></td></tr></table></figure><h3 id="任务7-4-使用HBase-Java-API-实现表设计"><a href="#任务7-4-使用HBase-Java-API-实现表设计" class="headerlink" title="任务7.4 使用HBase Java API 实现表设计"></a>任务7.4 使用HBase Java API 实现表设计</h3><h4 id="7-4-1-创建Java项目"><a href="#7-4-1-创建Java项目" class="headerlink" title="7.4.1 创建Java项目"></a>7.4.1 创建Java项目</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">32</span> pom.xml依赖<br>#Maven项目的相关Jar包会自动下载。pom.xml文件添加的内容<br>&lt;dependencies&gt;<br>    &lt;!-- 单元测试依赖包 --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;junit&lt;/groupId&gt;<br>        &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">4.12</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;!-- hbase客户端依赖 --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.hbase&lt;/groupId&gt;<br>        &lt;artifactId&gt;hbase-client&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;!-- hbase核心依赖 --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.hbase&lt;/groupId&gt;<br>        &lt;artifactId&gt;hbase-common&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">33</span> 创建HBaseTest类<br><span class="hljs-keyword">package</span> com.cqyti.hbase;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HBaseTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;  <span class="hljs-comment">//管理HBase的配置信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;  <span class="hljs-comment">//管理HBase的连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;   <span class="hljs-comment">//管理HBase数据库表信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> IOException&#123;<br>        init();<br>        createTable(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;score&quot;</span>&#125;);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;Bigdata&quot;</span>,<span class="hljs-string">&quot;69&quot;</span>);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,<span class="hljs-string">&quot;86&quot;</span>);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;JavaWeb&quot;</span>,<span class="hljs-string">&quot;77&quot;</span>);<br>        close();<br>&#125;<br>&#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">34</span> 建立连接/关闭连接<br><span class="hljs-comment">//建立连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span>&#123;       <br>        configuration  = HBaseConfiguration.create();<br>        configuration.set(<span class="hljs-string">&quot;hbase.rootdir&quot;</span>,<span class="hljs-string">&quot;hdfs://master:9000/hbase&quot;</span>);<br>        <span class="hljs-keyword">try</span>&#123;<br>            connection = ConnectionFactory.createConnection(configuration);<br>            admin = connection.getAdmin();<br>        &#125;<span class="hljs-keyword">catch</span> (IOException e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>&#125;<br><span class="hljs-comment">// 关闭连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>            <span class="hljs-keyword">if</span>(admin != <span class="hljs-literal">null</span>)&#123;<br>                admin.close();<br>            &#125;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span> != connection)&#123;<br>                connection.close();<br>            &#125;<br>        &#125;<span class="hljs-keyword">catch</span> (IOException e)&#123;<br>            e.printStackTrace();<br>        &#125;<br><br></code></pre></td></tr></table></figure><h4 id="7-4-2-实现表的创建"><a href="#7-4-2-实现表的创建" class="headerlink" title="7.4.2 实现表的创建"></a>7.4.2 实现表的创建</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建HBase表</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> myTableName 表名</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> colFamily 列族数组</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException 如果在创建表过程中出现异常</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createTable</span><span class="hljs-params">(String myTableName, String[] colFamily)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">// 将表名字符串转换为HBase的TableName对象</span><br>    <span class="hljs-type">TableName</span> <span class="hljs-variable">tableName</span> <span class="hljs-operator">=</span> TableName.valueOf(myTableName);    <br>    <span class="hljs-comment">// 检查表是否已经存在</span><br>    <span class="hljs-keyword">if</span>(admin.tableExists(tableName))&#123;<br>        <span class="hljs-comment">// 如果表存在，输出提示信息</span><br>        System.out.println(<span class="hljs-string">&quot;table is exists!&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 如果表不存在，开始创建新表        </span><br>        <span class="hljs-comment">// 使用TableDescriptorBuilder构建表的描述符</span><br>        <span class="hljs-type">TableDescriptorBuilder</span> <span class="hljs-variable">tableDescriptor</span> <span class="hljs-operator">=</span> TableDescriptorBuilder.newBuilder(tableName);        <br>        <span class="hljs-comment">// 遍历列族数组，为每个列族创建并添加列族描述符</span><br>        <span class="hljs-keyword">for</span>(String str : colFamily)&#123;<br>            <span class="hljs-comment">// 使用ColumnFamilyDescriptorBuilder为列族创建描述符，并将列族名转换为字节数组</span><br>            <span class="hljs-type">ColumnFamilyDescriptor</span> <span class="hljs-variable">family</span> <span class="hljs-operator">=</span> ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(str)).build();         <br>            <span class="hljs-comment">// 将列族描述符添加到表的描述符中</span><br>            tableDescriptor.setColumnFamily(family);<br>        &#125;<br>        <span class="hljs-comment">// 使用管理员对象（admin）创建表</span><br>        admin.createTable(tableDescriptor.build());<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="7-4-3-向表中插入数据"><a href="#7-4-3-向表中插入数据" class="headerlink" title="7.4.3 向表中插入数据"></a>7.4.3 向表中插入数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">36</span> insertData()方法插入数据<br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> tableName 表名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> rowKey    行键</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> colFamily 列族</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> col       列限定符</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> val       数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertData</span><span class="hljs-params">(String tableName, String rowKey, String colFamily, String col, String val)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">// 获取HBase连接中的指定表</span><br>    <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>    <span class="hljs-comment">// 创建一个Put对象，指定行键</span><br>    <span class="hljs-type">Put</span> <span class="hljs-variable">put</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Put</span>(rowKey.getBytes());<br>    <span class="hljs-comment">// 向Put对象中添加列族、列名和对应的值</span><br>    put.addColumn(colFamily.getBytes(), col.getBytes(), val.getBytes());<br>    <span class="hljs-comment">// 将Put对象提交到表中，插入数据</span><br>    table.put(put);<br>    <span class="hljs-comment">// 关闭表连接</span><br>    table.close();<br>&#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">37</span>  插入数据<br>insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;Bigdata&quot;</span>,<span class="hljs-string">&quot;96&quot;</span>);<br>insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,<span class="hljs-string">&quot;88&quot;</span>);<br>insertData(<span class="hljs-string">&quot;students&quot;</span>,<span class="hljs-string">&quot;George&quot;</span>,<span class="hljs-string">&quot;score&quot;</span>,<span class="hljs-string">&quot;JavaWeb&quot;</span>,<span class="hljs-string">&quot;67&quot;</span>);<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">38</span>  HBase Shell插入数据命令<br>put <span class="hljs-string">&#x27;students&#x27;</span>,<span class="hljs-string">&#x27;George&#x27;</span>,<span class="hljs-string">&#x27;score:Bigdata&#x27;</span>,<span class="hljs-string">&#x27;96&#x27;</span><br>put <span class="hljs-string">&#x27;students&#x27;</span>,<span class="hljs-string">&#x27;George&#x27;</span>,<span class="hljs-string">&#x27;score:Python&#x27;</span>,<span class="hljs-string">&#x27;88&#x27;</span><br>put <span class="hljs-string">&#x27;students&#x27;</span>,<span class="hljs-string">&#x27;George&#x27;</span>,<span class="hljs-string">&#x27;score:JavaWeb&#x27;</span>,<span class="hljs-string">&#x27;67&#x27;</span><br><br>图<span class="hljs-number">7</span>-<span class="hljs-number">20</span>  插入数据结果<br>hbase&gt;scan <span class="hljs-string">&#x27;students&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**工程*/</span><br><span class="hljs-keyword">package</span> com.cqyti.hbase;<br><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HBaseTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;  <span class="hljs-comment">//初始化HBase的配置信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;  <span class="hljs-comment">//初始化HBase的连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;   <span class="hljs-comment">//初始化HBase数据库表信息</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        init();<br>        createTable(<span class="hljs-string">&quot;students&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;score&quot;</span>&#125;);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>, <span class="hljs-string">&quot;George&quot;</span>, <span class="hljs-string">&quot;score&quot;</span>, <span class="hljs-string">&quot;Bigdata&quot;</span>, <span class="hljs-string">&quot;69&quot;</span>);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>, <span class="hljs-string">&quot;George&quot;</span>, <span class="hljs-string">&quot;score&quot;</span>, <span class="hljs-string">&quot;Python&quot;</span>, <span class="hljs-string">&quot;86&quot;</span>);<br>        insertData(<span class="hljs-string">&quot;students&quot;</span>, <span class="hljs-string">&quot;George&quot;</span>, <span class="hljs-string">&quot;score&quot;</span>, <span class="hljs-string">&quot;JavaWeb&quot;</span>, <span class="hljs-string">&quot;77&quot;</span>);<br>        close();<br>    &#125;<br><br>    <span class="hljs-comment">//建立连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> &#123;<br>        configuration = HBaseConfiguration.create();<br><span class="hljs-comment">//        configuration.set(&quot;hbase.rootdir&quot;, &quot;hdfs://master:9000/hbase&quot;);</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            connection = ConnectionFactory.createConnection(configuration);<br>            admin = connection.getAdmin();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> myTableName 表名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> colFamily   列族</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createTable</span><span class="hljs-params">(String myTableName, String[] colFamily)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">TableName</span> <span class="hljs-variable">tableName</span> <span class="hljs-operator">=</span> TableName.valueOf(myTableName);<br>        <span class="hljs-keyword">if</span> (admin.tableExists(tableName)) &#123;<br>            System.out.println(<span class="hljs-string">&quot;talbe is exists!&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">TableDescriptorBuilder</span> <span class="hljs-variable">tableDescriptor</span> <span class="hljs-operator">=</span> TableDescriptorBuilder.<br>                    newBuilder(tableName);<br>            <span class="hljs-keyword">for</span> (String str : colFamily) &#123;<br>                <span class="hljs-type">ColumnFamilyDescriptor</span> <span class="hljs-variable">family</span> <span class="hljs-operator">=</span><br>                        ColumnFamilyDescriptorBuilder.newBuilder(Bytes.<br>                                toBytes(str)).build();<br>                tableDescriptor.setColumnFamily(family);<br>            &#125;<br>            admin.createTable(tableDescriptor.build());<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> tableName 表名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> rowKey    行键</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> colFamily 列族</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> col       列限定符</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> val       数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insertData</span><span class="hljs-params">(String tableName, String rowKey, String colFamily, String col, String val)</span> <span class="hljs-keyword">throws</span><br>            IOException &#123;<br>        <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>        <span class="hljs-type">Put</span> <span class="hljs-variable">put</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Put</span>(rowKey.getBytes());<br>        put.addColumn(colFamily.getBytes(), col.getBytes(), val.getBytes());<br>        table.put(put);<br>        table.close();<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (admin != <span class="hljs-literal">null</span>) &#123;<br>                admin.close();<br>            &#125;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != connection) &#123;<br>                connection.close();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="任务7-5-查询分析通话记录数据"><a href="#任务7-5-查询分析通话记录数据" class="headerlink" title="任务7.5 查询分析通话记录数据"></a>任务7.5 查询分析通话记录数据</h3><h4 id="7-5-2-任务实现"><a href="#7-5-2-任务实现" class="headerlink" title="7.5.2 任务实现"></a>7.5.2 任务实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><code class="hljs java">代码<span class="hljs-number">7</span>-<span class="hljs-number">39</span>  配置pom.xml文件<br>&lt;dependencies&gt;<br>         &lt;dependency&gt;<br>              &lt;groupId&gt;org.apache.hbase&lt;/groupId&gt;<br>              &lt;artifactId&gt;hbase-client&lt;/artifactId&gt;<br>              &lt;version&gt;<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>         &lt;/dependency&gt;<br>         &lt;dependency&gt;<br>              &lt;groupId&gt;org.apache.hbase&lt;/groupId&gt;<br>              &lt;artifactId&gt;hbase-common&lt;/artifactId&gt;<br>              &lt;version&gt;<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>         &lt;/dependency&gt;<br>         &lt;dependency&gt;<br>              &lt;groupId&gt;org.apache.hbase&lt;/groupId&gt;<br>              &lt;artifactId&gt;hbase-server&lt;/artifactId&gt;<br>              &lt;version&gt;<span class="hljs-number">2.2</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>         &lt;/dependency&gt;<br>         &lt;dependency&gt;<br>              &lt;groupId&gt;junit&lt;/groupId&gt;<br>              &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>              &lt;version&gt;RELEASE&lt;/version&gt;<br>              &lt;scope&gt;compile&lt;/scope&gt;<br>         &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">40</span>  代码实现框架<br><span class="hljs-keyword">import</span> com.sun.deploy.security.ruleset.RuleSetParser;<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;<br><span class="hljs-keyword">import</span> org.junit.Before;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.text.ParseException;<br><span class="hljs-keyword">import</span> java.text.SimpleDateFormat;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.Calendar;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Random;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PhoneLogDemo</span> &#123;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Random random;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SimpleDateFormat sdf;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>              random = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>              <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>              <span class="hljs-comment">// 初始化并建立连接</span><br>              init();<br>              <span class="hljs-comment">// 创建一个表名为phone_log、列族名为basic的表</span><br>              createTable(<span class="hljs-string">&quot;phone_log&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;basic&quot;</span>&#125;);<br>              <span class="hljs-comment">// 插入随机生成的数据</span><br>              insert(<span class="hljs-string">&quot;phone_log&quot;</span>,<span class="hljs-string">&quot;basic&quot;</span>);<br>              <span class="hljs-comment">// 关闭连接</span><br>              close();    <br>&#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">41</span>  定义init()方法<br><span class="hljs-comment">// 初始化并建立连接</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> &#123;<br>             <span class="hljs-comment">// 创建配置对象</span><br>             <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> HBaseConfiguration.create();<br>             <span class="hljs-keyword">try</span> &#123;<br>                  <span class="hljs-comment">// 获取HBase连接对象</span><br>                  connection = ConnectionFactory.createConnection(conf);<br>                  <span class="hljs-comment">// 获取操作对象</span><br>                  admin = connection.getAdmin();<br>             &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                  e.printStackTrace();<br>             &#125;<br>&#125;<br><span class="hljs-comment">// 关闭admin和connection</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-keyword">if</span> (admin != <span class="hljs-literal">null</span>) &#123;<br>             <span class="hljs-keyword">try</span> &#123;<br>                  admin.close();<br>                &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                      e.printStackTrace();<br>                   &#125;<br>       &#125;<br>       <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != connection) &#123;<br>             <span class="hljs-keyword">try</span> &#123;<br>                  connection.close();<br>             &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                   e.printStackTrace();<br>             &#125;<br>       &#125;<br>&#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">42</span>  定义createTable()方法<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createTable</span><span class="hljs-params">(String myTableName, String[] colFamily)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-type">TableName</span> <span class="hljs-variable">tableName</span> <span class="hljs-operator">=</span> TableName.valueOf(myTableName);<br>     <span class="hljs-comment">// 判断表是否存在</span><br>     <span class="hljs-keyword">if</span> (admin.tableExists(tableName)) &#123;<br>         <span class="hljs-comment">// 如果存在那么输出“table exists!”  </span><br>         System.out.println(<span class="hljs-string">&quot;table exists!&quot;</span>);    <br>     &#125; <span class="hljs-keyword">else</span> &#123;    <br>         <span class="hljs-comment">// 如果不存在那么添加表描述符信息及列族信息</span><br>         <span class="hljs-type">TableDescriptorBuilder</span> <span class="hljs-variable">tableDescriptor</span> <span class="hljs-operator">=</span> TableDescriptorBuilder.<br>newBuilder(tableName);<br>         <span class="hljs-keyword">for</span> (String str : colFamily) &#123;<br>               ColumnFamilyDescriptor family=<br>                  ColumnFamilyDescriptorBuilder.newBuilder<br>(Bytes.toBytes(str)).build();<br>             <span class="hljs-comment">//将列族描述符添加到表描述符上</span><br>             tableDescriptor.setColumnFamily(family);   <br>         &#125;<br>             admin.createTable(tableDescriptor.build());<br>     &#125;<br>&#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">43</span>  定义insert()方法<br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 10个用户，每个用户每年产生1000条通话记录</span><br><span class="hljs-comment">* dnum：对方用户电话号码；</span><br><span class="hljs-comment">  type：通话类型，0代表主叫，1代表被叫；</span><br><span class="hljs-comment">  length：通话时长；</span><br><span class="hljs-comment">  date：通话日期</span><br><span class="hljs-comment">* rowkey：当前用户手机号码（Long.MAX_VALUE-timestamp）</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(String tableName, String colFamily)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>    <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>    List&lt;Put&gt; putList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Put&gt;();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) &#123;<br>         <span class="hljs-comment">// 当前用户电话号码</span><br>         <span class="hljs-type">String</span> <span class="hljs-variable">phoneNum</span> <span class="hljs-operator">=</span> getPhoneNum(<span class="hljs-string">&quot;158&quot;</span>);  <span class="hljs-comment">// 生成以“158”开头的用户电话号码</span><br>         System.out.println(phoneNum);<br>         <span class="hljs-comment">// 清空集合</span><br>         putList.clear();<br>         <span class="hljs-comment">// 模拟1000条通话记录</span><br>         <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">1000</span>; j++) &#123;<br>                <span class="hljs-comment">// 生成数据</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">dnum</span> <span class="hljs-operator">=</span> getPhoneNum(<span class="hljs-string">&quot;199&quot;</span>);  <span class="hljs-comment">// 生成以“199”开头的对方用户电话号码</span><br>                <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">99</span>) + <span class="hljs-number">1</span>;  <span class="hljs-comment">// 随机生成通话时长</span><br>                <span class="hljs-type">int</span> <span class="hljs-variable">type</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">2</span>);  <span class="hljs-comment">// 随机生成通话类型</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> getDate(<span class="hljs-number">2019</span>);  <span class="hljs-comment">// 随机生成通话日期</span><br>                <span class="hljs-comment">// rowkey的设计</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">rowkey</span> <span class="hljs-operator">=</span> phoneNum + <span class="hljs-string">&quot;_&quot;</span> + (Long.MAX_VALUE - sdf.parse(date).getTime());<br>                <span class="hljs-type">Put</span> <span class="hljs-variable">put</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Put</span>(rowkey.getBytes());<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;dnum&quot;</span>.getBytes(), Bytes.<br>toBytes(dnum));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;length&quot;</span>.getBytes(), Bytes. toBytes(length));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;type&quot;</span>.getBytes(), Bytes. toBytes(type));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;date&quot;</span>.getBytes(), Bytes. toBytes(date));<br>                <span class="hljs-comment">// 将put添加到集合</span><br>                   putList.add(put);<br>         &#125;<br>          <span class="hljs-comment">// 执行添加操作，每次添加1000条通话记录</span><br>           table.put(putList);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 2019-01-01 00:00:00 - 2019-12-31 23:59:59</span><br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDate</span><span class="hljs-params">(<span class="hljs-type">int</span> year)</span> &#123;<br>      <span class="hljs-type">Calendar</span> <span class="hljs-variable">calendar</span> <span class="hljs-operator">=</span> Calendar.getInstance();<br>      calendar.set(year, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">//2019-01-01</span><br>      calendar.add(Calendar.MONTH, random.nextInt(<span class="hljs-number">12</span>));<br>      calendar.add(Calendar.DAY_OF_MONTH, random.nextInt(<span class="hljs-number">31</span>));<br>      calendar.add(Calendar.HOUR_OF_DAY, random.nextInt(<span class="hljs-number">12</span>));<br>      calendar.add(Calendar.MINUTE, random.nextInt(<span class="hljs-number">60</span>));<br>      calendar.add(Calendar.MILLISECOND, random.nextInt(<span class="hljs-number">60</span>));<br>       <span class="hljs-keyword">return</span> sdf.format(calendar.getTime());<br> &#125;<br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getPhoneNum</span><span class="hljs-params">(String prefixNum)</span> &#123;<br>       <span class="hljs-keyword">return</span> prefixNum + String.format(<span class="hljs-string">&quot;%08d&quot;</span>, random.nextInt(<span class="hljs-number">99999999</span>));<br> &#125;<br><br>图<span class="hljs-number">7</span>-<span class="hljs-number">22</span>  查看phone_log表结构<br>hbase&gt;desc <span class="hljs-string">&#x27;phone_log&#x27;</span><br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">44</span>  Search类的main()方法<br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.CellUtil;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.HBaseConfiguration;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.TableName;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;<br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.text.ParseException;<br><span class="hljs-keyword">import</span> java.text.SimpleDateFormat;<br><span class="hljs-keyword">import</span> java.util.Calendar;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Search</span> &#123;<br><br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Random random;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SimpleDateFormat sdf;<br><br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>            random = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>            sdf = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>            <span class="hljs-comment">// 初始化并建立连接</span><br>            init();<br>            <span class="hljs-comment">// 查询phone_log表中15894116226用户的某个时间段的通话记录</span><br>            scan(<span class="hljs-string">&quot;phone_log&quot;</span>,<span class="hljs-string">&quot;15894116226&quot;</span>);<br>            <span class="hljs-comment">// 关闭连接</span><br>            close();<br>      &#125;<br><br>代码<span class="hljs-number">7</span>-<span class="hljs-number">45</span>  查询指定用户某个时间段的通话记录<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">scan</span><span class="hljs-params">(String tableName, String num)</span> <span class="hljs-keyword">throws</span> ParseException, IOException &#123;<br>      <span class="hljs-type">String</span> <span class="hljs-variable">phoneNume</span> <span class="hljs-operator">=</span> num;<br>      <span class="hljs-type">Scan</span> <span class="hljs-variable">scan</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scan</span>();<br>      <span class="hljs-type">String</span> <span class="hljs-variable">startRow</span> <span class="hljs-operator">=</span> phoneNume+<span class="hljs-string">&quot;_&quot;</span>+(Long.MAX_VALUE -sdf.parse(<span class="hljs-string">&quot;2019-01-08 21:38:13&quot;</span>).getTime());<br>      scan.setStartRow(startRow.getBytes());<br>      <span class="hljs-type">String</span> <span class="hljs-variable">stopRow</span> <span class="hljs-operator">=</span> phoneNume+<span class="hljs-string">&quot;_&quot;</span>+(Long.MAX_VALUE -sdf.parse(<span class="hljs-string">&quot;2019-01-02 01:58:13&quot;</span>).getTime());<br>      scan.setStopRow(stopRow.getBytes());<br>      <span class="hljs-comment">// 执行查询并返回结果集</span><br>      <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>      <span class="hljs-type">ResultScanner</span> <span class="hljs-variable">resultScanner</span> <span class="hljs-operator">=</span> table.getScanner(scan);<br>      <span class="hljs-comment">// 遍历输出</span><br>      <span class="hljs-keyword">for</span>(Result result:resultScanner)&#123;<br>           printMsg(result);<br>       &#125;<br>      <span class="hljs-comment">// 关闭</span><br>       resultScanner.close();<br> &#125;<br> <br>代码<span class="hljs-number">7</span>-<span class="hljs-number">46</span>  设置输出结果<br><span class="hljs-comment">// 设置输出结果</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">printMsg</span><span class="hljs-params">(Result result)</span> &#123;<br>System.out.print(Bytes.toString(CellUtil.cloneValue(result.getColumnLatestCell<br>(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(),<span class="hljs-string">&quot;dnum&quot;</span>.getBytes())))+<span class="hljs-string">&quot;\t&quot;</span>);<br>System.out.print(Bytes.toInt(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(),<span class="hljs-string">&quot;type&quot;</span>.getBytes())))+<span class="hljs-string">&quot;\t&quot;</span>);<br>System.out.print(Bytes.toInt(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(),<span class="hljs-string">&quot;length&quot;</span>.getBytes())))+<span class="hljs-string">&quot;\t&quot;</span>);<br>System.out.println(Bytes.toString(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(),<span class="hljs-string">&quot;date&quot;</span>.getBytes()))));<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h4 id="PhoneLogDemo-java"><a href="#PhoneLogDemo-java" class="headerlink" title="PhoneLogDemo.java"></a>PhoneLogDemo.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.deploy.security.ruleset.RuleSetParser;  <span class="hljs-comment">// 引入RuleSetParser类（未使用）</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;  <span class="hljs-comment">// 引入Hadoop配置类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.*;  <span class="hljs-comment">// 引入HBase相关类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;  <span class="hljs-comment">// 引入HBase客户端操作类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;  <span class="hljs-comment">// 引入字节数组操作工具类</span><br><span class="hljs-keyword">import</span> org.junit.Before;  <span class="hljs-comment">// 引入JUnit注解（未使用）</span><br><br><span class="hljs-keyword">import</span> java.io.IOException;  <span class="hljs-comment">// 引入IOException异常类</span><br><span class="hljs-keyword">import</span> java.text.ParseException;  <span class="hljs-comment">// 引入ParseException异常类</span><br><span class="hljs-keyword">import</span> java.text.SimpleDateFormat;  <span class="hljs-comment">// 引入日期格式化类</span><br><span class="hljs-keyword">import</span> java.util.ArrayList;  <span class="hljs-comment">// 引入ArrayList类</span><br><span class="hljs-keyword">import</span> java.util.Calendar;  <span class="hljs-comment">// 引入Calendar类，用于日期和时间的操作</span><br><span class="hljs-keyword">import</span> java.util.List;  <span class="hljs-comment">// 引入List接口</span><br><span class="hljs-keyword">import</span> java.util.Random;  <span class="hljs-comment">// 引入Random类，用于生成随机数据</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PhoneLogDemo</span> &#123;<br>    <span class="hljs-comment">// 声明静态变量</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;  <span class="hljs-comment">// HBase配置对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;  <span class="hljs-comment">// HBase连接对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;  <span class="hljs-comment">// HBase管理员对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Random random;  <span class="hljs-comment">// 用于生成随机数据的对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SimpleDateFormat sdf;  <span class="hljs-comment">// 日期格式化工具类</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>        random = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();  <span class="hljs-comment">// 初始化随机数生成器</span><br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);  <span class="hljs-comment">// 创建SimpleDateFormat对象，日期格式</span><br>        sdf = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);  <span class="hljs-comment">// 将SimpleDateFormat实例赋值给sdf</span><br>        <br>        <span class="hljs-comment">// 初始化并建立连接</span><br>        init();<br>        <br>        <span class="hljs-comment">// 创建名为phone_log的表，列族为basic</span><br>        createTable(<span class="hljs-string">&quot;phone_log&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;basic&quot;</span>&#125;);<br>        <br>        <span class="hljs-comment">// 插入随机生成的数据</span><br>        insert(<span class="hljs-string">&quot;phone_log&quot;</span>, <span class="hljs-string">&quot;basic&quot;</span>);<br>        <br>        <span class="hljs-comment">// 关闭连接</span><br>        close();<br>    &#125;<br><br>    <span class="hljs-comment">// 初始化并建立HBase连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 创建HBase配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> HBaseConfiguration.create();<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 获取HBase连接对象</span><br>            connection = ConnectionFactory.createConnection(conf);<br>            <span class="hljs-comment">// 获取HBase管理员对象，用于表的管理操作</span><br>            admin = connection.getAdmin();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 创建HBase表的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createTable</span><span class="hljs-params">(String myTableName, String[] colFamily)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">TableName</span> <span class="hljs-variable">tableName</span> <span class="hljs-operator">=</span> TableName.valueOf(myTableName);  <span class="hljs-comment">// 将表名字符串转换为TableName对象</span><br>        <span class="hljs-comment">// 判断表是否已经存在</span><br>        <span class="hljs-keyword">if</span> (admin.tableExists(tableName)) &#123;<br>            System.out.println(<span class="hljs-string">&quot;table exists!&quot;</span>);  <span class="hljs-comment">// 如果表存在，输出提示信息</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 如果表不存在，创建表描述符对象</span><br>            <span class="hljs-type">TableDescriptorBuilder</span> <span class="hljs-variable">tableDescriptor</span> <span class="hljs-operator">=</span> TableDescriptorBuilder.newBuilder(tableName);<br>            <span class="hljs-comment">// 遍历列族数组，添加列族信息</span><br>            <span class="hljs-keyword">for</span> (String str : colFamily) &#123;<br>                <span class="hljs-comment">// 创建列族描述符</span><br>                <span class="hljs-type">ColumnFamilyDescriptor</span> <span class="hljs-variable">family</span> <span class="hljs-operator">=</span> ColumnFamilyDescriptorBuilder.newBuilder(Bytes.toBytes(str)).build();<br>                <span class="hljs-comment">// 将列族描述符添加到表描述符</span><br>                tableDescriptor.setColumnFamily(family);<br>            &#125;<br>            <span class="hljs-comment">// 创建表</span><br>            admin.createTable(tableDescriptor.build());<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 插入数据的方法</span><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 模拟10个用户，每个用户每年生成1000条通话记录</span><br><span class="hljs-comment">     * dnum：对方用户电话号码；</span><br><span class="hljs-comment">     * type：通话类型，0代表主叫，1代表被叫；</span><br><span class="hljs-comment">     * length：通话时长；</span><br><span class="hljs-comment">     * date：通话日期；</span><br><span class="hljs-comment">     * rowkey：当前用户手机号码（Long.MAX_VALUE - timestamp）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(String tableName, String colFamily)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>        <span class="hljs-comment">// 获取表对象</span><br>        <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>        List&lt;Put&gt; putList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Put&gt;();  <span class="hljs-comment">// 存储Put对象的集合</span><br>        <span class="hljs-comment">// 模拟10个用户</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) &#123;<br>            <span class="hljs-comment">// 生成当前用户电话号码</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">phoneNum</span> <span class="hljs-operator">=</span> getPhoneNum(<span class="hljs-string">&quot;158&quot;</span>);  <span class="hljs-comment">// 生成以“158”开头的手机号码</span><br>            System.out.println(phoneNum);  <span class="hljs-comment">// 输出当前用户电话号码</span><br>            putList.clear();  <span class="hljs-comment">// 清空Put集合</span><br>            <span class="hljs-comment">// 模拟每个用户1000条通话记录</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">1000</span>; j++) &#123;<br>                <span class="hljs-comment">// 生成对方用户电话号码</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">dnum</span> <span class="hljs-operator">=</span> getPhoneNum(<span class="hljs-string">&quot;199&quot;</span>);  <span class="hljs-comment">// 生成以“199”开头的对方电话号码</span><br>                <span class="hljs-comment">// 随机生成通话时长（1到99秒之间）</span><br>                <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">99</span>) + <span class="hljs-number">1</span>;<br>                <span class="hljs-comment">// 随机生成通话类型（0为主叫，1为被叫）</span><br>                <span class="hljs-type">int</span> <span class="hljs-variable">type</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">2</span>);<br>                <span class="hljs-comment">// 随机生成通话日期</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> getDate(<span class="hljs-number">2019</span>);  <span class="hljs-comment">// 生成2019年的随机日期</span><br>                <span class="hljs-comment">// rowkey的设计：手机号码 + 通话日期的倒序时间戳</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">rowkey</span> <span class="hljs-operator">=</span> phoneNum + <span class="hljs-string">&quot;_&quot;</span> + (Long.MAX_VALUE - sdf.parse(date).getTime());<br>                <span class="hljs-comment">// 创建Put对象，指定rowkey</span><br>                <span class="hljs-type">Put</span> <span class="hljs-variable">put</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Put</span>(rowkey.getBytes());<br>                <span class="hljs-comment">// 添加列族中的各列数据</span><br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;dnum&quot;</span>.getBytes(), Bytes.toBytes(dnum));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;length&quot;</span>.getBytes(), Bytes.toBytes(length));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;type&quot;</span>.getBytes(), Bytes.toBytes(type));<br>                put.addColumn(colFamily.getBytes(), <span class="hljs-string">&quot;date&quot;</span>.getBytes(), Bytes.toBytes(date));<br>                <span class="hljs-comment">// 将Put对象添加到集合中</span><br>                putList.add(put);<br>            &#125;<br>            <span class="hljs-comment">// 执行批量插入操作，每次插入1000条通话记录</span><br>            table.put(putList);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 随机生成通话日期（2019年范围内）</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDate</span><span class="hljs-params">(<span class="hljs-type">int</span> year)</span> &#123;<br>        <span class="hljs-type">Calendar</span> <span class="hljs-variable">calendar</span> <span class="hljs-operator">=</span> Calendar.getInstance();  <span class="hljs-comment">// 获取当前日期</span><br>        calendar.set(year, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);  <span class="hljs-comment">// 设置为2019年1月1日</span><br>        <span class="hljs-comment">// 随机生成日期（随机月份、日期、小时、分钟等）</span><br>        calendar.add(Calendar.MONTH, random.nextInt(<span class="hljs-number">12</span>));<br>        calendar.add(Calendar.DAY_OF_MONTH, random.nextInt(<span class="hljs-number">31</span>));<br>        calendar.add(Calendar.HOUR_OF_DAY, random.nextInt(<span class="hljs-number">12</span>));<br>        calendar.add(Calendar.MINUTE, random.nextInt(<span class="hljs-number">60</span>));<br>        calendar.add(Calendar.MILLISECOND, random.nextInt(<span class="hljs-number">60</span>));<br>        <span class="hljs-keyword">return</span> sdf.format(calendar.getTime());  <span class="hljs-comment">// 返回格式化后的日期字符串</span><br>    &#125;<br><br>    <span class="hljs-comment">// 随机生成手机号码</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getPhoneNum</span><span class="hljs-params">(String prefixNum)</span> &#123;<br>        <span class="hljs-comment">// 返回以指定前缀开头的手机号码（8位随机数）</span><br>        <span class="hljs-keyword">return</span> prefixNum + String.format(<span class="hljs-string">&quot;%08d&quot;</span>, random.nextInt(<span class="hljs-number">99999999</span>));<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭HBase连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (admin != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                admin.close();  <span class="hljs-comment">// 关闭管理员对象</span><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != connection) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                connection.close();  <span class="hljs-comment">// 关闭HBase连接</span><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="Search-java"><a href="#Search-java" class="headerlink" title="Search.java"></a>Search.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.hadoop.conf.Configuration;  <span class="hljs-comment">// 引入Hadoop配置类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.CellUtil;  <span class="hljs-comment">// 引入HBase单元格工具类，用于处理HBase中的单元格数据</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.HBaseConfiguration;  <span class="hljs-comment">// 引入HBase配置工具类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.TableName;  <span class="hljs-comment">// 引入HBase表名类</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.client.*;  <span class="hljs-comment">// 引入HBase客户端操作类（如Connection、Admin、Table、Scan等）</span><br><span class="hljs-keyword">import</span> org.apache.hadoop.hbase.util.Bytes;  <span class="hljs-comment">// 引入字节数组工具类，HBase的很多操作是基于字节数组的</span><br><br><span class="hljs-keyword">import</span> java.io.IOException;  <span class="hljs-comment">// 引入IOException异常类</span><br><span class="hljs-keyword">import</span> java.text.ParseException;  <span class="hljs-comment">// 引入ParseException异常类</span><br><span class="hljs-keyword">import</span> java.text.SimpleDateFormat;  <span class="hljs-comment">// 引入日期格式化类</span><br><span class="hljs-keyword">import</span> java.util.Calendar;  <span class="hljs-comment">// 引入Calendar类，用于日期和时间的操作</span><br><span class="hljs-keyword">import</span> java.util.Random;  <span class="hljs-comment">// 引入Random类，用于生成随机数</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Search</span> &#123;<br><br>    <span class="hljs-comment">// 声明静态变量</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Configuration configuration;  <span class="hljs-comment">// HBase配置对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection connection;  <span class="hljs-comment">// HBase连接对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Admin admin;  <span class="hljs-comment">// HBase管理员对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Random random;  <span class="hljs-comment">// 用于生成随机数的对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SimpleDateFormat sdf;  <span class="hljs-comment">// 日期格式化工具类，用于处理时间格式</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, ParseException &#123;<br>        random = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();  <span class="hljs-comment">// 初始化随机数生成器</span><br>        sdf = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);  <span class="hljs-comment">// 创建SimpleDateFormat实例，用于日期格式化</span><br><br>        <span class="hljs-comment">// 初始化并建立连接</span><br>        init();<br>        <br>        <span class="hljs-comment">// 查询指定用户在某个时间段内的通话记录</span><br>        scan(<span class="hljs-string">&quot;phone_log&quot;</span>, <span class="hljs-string">&quot;15894116226&quot;</span>);<br>        <br>        <span class="hljs-comment">// 关闭连接</span><br>        close();<br>    &#125;<br><br>    <span class="hljs-comment">// 初始化并建立HBase连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 创建HBase配置对象</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">conf</span> <span class="hljs-operator">=</span> HBaseConfiguration.create();<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 获取HBase连接对象</span><br>            connection = ConnectionFactory.createConnection(conf);<br>            <span class="hljs-comment">// 获取HBase管理员对象，用于表的管理操作</span><br>            admin = connection.getAdmin();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 执行HBase表的扫描操作，根据指定的用户和时间范围查询记录</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">scan</span><span class="hljs-params">(String tableName, String num)</span> <span class="hljs-keyword">throws</span> ParseException, IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">phoneNume</span> <span class="hljs-operator">=</span> num;  <span class="hljs-comment">// 保存用户电话号码</span><br><br>        <span class="hljs-comment">// 创建Scan对象，表示一次查询</span><br>        <span class="hljs-type">Scan</span> <span class="hljs-variable">scan</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scan</span>();<br>        <br>        <span class="hljs-comment">// 设置查询的起始行（以用户手机号和时间戳构造）</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">startRow</span> <span class="hljs-operator">=</span> phoneNume + <span class="hljs-string">&quot;_&quot;</span> + (Long.MAX_VALUE - sdf.parse(<span class="hljs-string">&quot;2019-1-08 21:38:13&quot;</span>).getTime());<br>        scan.setStartRow(startRow.getBytes());  <span class="hljs-comment">// 设置起始行键</span><br>        <br>        <span class="hljs-comment">// 设置查询的结束行（以用户手机号和时间戳构造）</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">stopRow</span> <span class="hljs-operator">=</span> phoneNume + <span class="hljs-string">&quot;_&quot;</span> + (Long.MAX_VALUE - sdf.parse(<span class="hljs-string">&quot;2019-11-02 01:58:13&quot;</span>).getTime());<br>        scan.setStopRow(stopRow.getBytes());  <span class="hljs-comment">// 设置结束行键</span><br><br>        <span class="hljs-comment">// 获取指定表的Table对象</span><br>        <span class="hljs-type">Table</span> <span class="hljs-variable">table</span> <span class="hljs-operator">=</span> connection.getTable(TableName.valueOf(tableName));<br>        <br>        <span class="hljs-comment">// 执行查询并获取结果扫描器</span><br>        <span class="hljs-type">ResultScanner</span> <span class="hljs-variable">resultScanner</span> <span class="hljs-operator">=</span> table.getScanner(scan);<br>        <br>        <span class="hljs-comment">// 遍历扫描结果并输出</span><br>        <span class="hljs-keyword">for</span> (Result result : resultScanner) &#123;<br>            printMsg(result);  <span class="hljs-comment">// 打印每一条查询结果</span><br>        &#125;<br>        <br>        <span class="hljs-comment">// 关闭扫描器</span><br>        resultScanner.close();<br>    &#125;<br><br>    <span class="hljs-comment">// 设置输出查询结果的格式</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">printMsg</span><span class="hljs-params">(Result result)</span> &#123;<br>        <span class="hljs-comment">// 获取并输出列族basic中的dnum列的值（对方电话号码）</span><br>        System.out.print(Bytes.toString(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(), <span class="hljs-string">&quot;dnum&quot;</span>.getBytes()))) + <span class="hljs-string">&quot;\t&quot;</span>);<br>        <br>        <span class="hljs-comment">// 获取并输出列族basic中的type列的值（通话类型：主叫或被叫）</span><br>        System.out.print(Bytes.toInt(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(), <span class="hljs-string">&quot;type&quot;</span>.getBytes()))) + <span class="hljs-string">&quot;\t&quot;</span>);<br>        <br>        <span class="hljs-comment">// 获取并输出列族basic中的length列的值（通话时长）</span><br>        System.out.print(Bytes.toInt(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(), <span class="hljs-string">&quot;length&quot;</span>.getBytes()))) + <span class="hljs-string">&quot;\t&quot;</span>);<br>        <br>        <span class="hljs-comment">// 获取并输出列族basic中的date列的值（通话日期）</span><br>        System.out.println(Bytes.toString(CellUtil.cloneValue(result.getColumnLatestCell(<span class="hljs-string">&quot;basic&quot;</span>.getBytes(), <span class="hljs-string">&quot;date&quot;</span>.getBytes()))));<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭HBase连接和管理员对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (admin != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                admin.close();  <span class="hljs-comment">// 关闭管理员对象</span><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != connection) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                connection.close();  <span class="hljs-comment">// 关闭HBase连接</span><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();  <span class="hljs-comment">// 捕获并打印IOException异常</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hadoop课本代码讲解&quot;&gt;&lt;a href=&quot;#hadoop课本代码讲解&quot; class=&quot;headerlink&quot; title=&quot;hadoop课本代码讲解&quot;&gt;&lt;/a&gt;hadoop课本代码讲解&lt;/h1&gt;&lt;h2 id=&quot;第2章-Hadoop集群的搭建及配置&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MinIO对象存储服务(Windows)</title>
    <link href="http://example.com/2024/09/02/MinIO%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1(Windows)/"/>
    <id>http://example.com/2024/09/02/MinIO%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1(Windows)/</id>
    <published>2024-09-01T23:12:00.000Z</published>
    <updated>2025-02-13T03:41:16.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MinIO对象存储服务"><a href="#MinIO对象存储服务" class="headerlink" title="MinIO对象存储服务"></a>MinIO对象存储服务</h1><p>MinIO是什么？<br>  官方解释：MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。对于对象存储服务我们了解过阿里云OSS，这个与之同理。它适合存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&#x2F;虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。<br>  MinIO是一个非常轻量的服务,可以很简单的和其他应用的结合，类似 NodeJS, Redis 或者 MySQL。<br>参考：<a href="https://min.io/docs/minio/kubernetes/upstream/index.html?ref=docs-redirect">官方文档</a><br> MinIO的优点：<br> 1.前端直传Minio,可减少与后端交互所造成的性能浪费<br> 2.可对接多种后端存储<br> 3.读写速率快</p><h2 id="一、MinIO下载与启动"><a href="#一、MinIO下载与启动" class="headerlink" title="一、MinIO下载与启动"></a>一、MinIO下载与启动</h2><p>从官网中</p><p>win下载地址：<a href="https://min.io/download?license=agpl&platform=kubernetes#/windows">MinIO | Code and downloads to create high performance object storage  </a></p><blockquote><p>服务端文件:minio.exe 用于接收文件信息<br>客户端文件:mac.exe 用于上传文件 ，如果用程序代码操作文件存储，只启动服务端就ok<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/23b6a7588a6a4454a21afc7eb6397e6e.png" alt="在这里插入图片描述"></p></blockquote><h3 id="创建minio目录"><a href="#创建minio目录" class="headerlink" title="创建minio目录"></a>创建minio目录</h3><p>下载之前先创建minio目录去存放minIO相关的文件：</p><blockquote><p>根据自己想要存放的位置，创建minIO的文件夹，存放minIO相关的文件，如下：（目录名称不建议含有中文）</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/335ed65964f54dadb1fe001f78ca4a0d.png" alt="在这里插入图片描述"></p><blockquote><ul><li>bin目录存放刚刚下载的mc.exe 以及minio.exe 文件</li></ul></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/bc6ffe9c07fc46b0a71f94a546a62faa.png" alt="在这里插入图片描述"></p><blockquote><ul><li>data，存放相关数据文件</li><li>log，存储相关日志</li></ul></blockquote><h3 id="启动minio服务器"><a href="#启动minio服务器" class="headerlink" title="启动minio服务器"></a>启动minio服务器</h3><blockquote><p>！！注意注意！！<br>通常启动都是直接双击.exe文件，对于minio不能这也操作，必须用命令进行启动</p></blockquote><p>以 管理员权限 打开cmd窗口，进入到minio.exe所在bin目录<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/efd143c75ee04d10a76a8c2ce3b908c8.png" alt="在这里插入图片描述"></p><blockquote><p>（ dir 命令 类似于 ls 命令）</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/c624060c0f814d7f8eddc8225d466256.png" alt="在这里插入图片描述"></p><h4 id="1、设置用户密码并启动"><a href="#1、设置用户密码并启动" class="headerlink" title="1、设置用户密码并启动"></a>1、设置用户密码并启动</h4><ul><li><p>设置用户名</p><pre><code class="hljs">setx MINIO_ROOT_USER name </code></pre></li><li><p>设置登录密码</p><pre><code class="hljs">setx MINIO_ROOT_PASSWORD password</code></pre></li><li><p>启动Minio服务</p><pre><code class="hljs">.\minio.exe server E:\minio\data --console-address &quot;127.0.0.1:9000&quot; --address &quot;127.0.0.1:9005&quot;</code></pre><ul><li>E:\minio\data： 指定数据存放路径 填自己的目录路径</li><li>9005是控制台端口，9000是服务的端口<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/d7554d86d3444241b3366f5ee282cd3f.png" alt="在这里插入图片描述"></li></ul></li></ul><h4 id="2、-bat启动方式"><a href="#2、-bat启动方式" class="headerlink" title="2、.bat启动方式"></a>2、.bat启动方式</h4><p>从以上的方式会出现一个比较麻烦的操作，就是每次都要以管理员身份运行cmd窗口，进行到指定bin路径启动minio，因此将整个启动过程的命令封装成一个.bat文件，想要启动时就双击该文件即可自动启动，文件内容如下：<br>（设置用户密码步骤如上）</p><blockquote><p>.bat文件主要有两条命令：</p><ol><li>cd E:\minio\bin # minio.exe所在的文件地址</li><li>minio.exe server E:\minio\data –console-address “:9005”<br>pause #启动服务器（E:\minio\data 为存储数据的地址） （“:9005” 为客户端的端口，可以自己设置 ）</li></ol></blockquote><pre><code class="hljs">@echo offecho.echo [信息] 运行MinIO文服务器。echo. title minio cd %~dp0cd E:\minio\bin    #minio.exe所在的文件地址 #启动服务器（E:\minio\data  为存储数据的地址） （&quot;:9005&quot; 为客户端的端口 ）minio.exe server E:\minio\data --console-address &quot;:9005&quot;  pause</code></pre><p>双击后：<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/6c86c9db63d3432c92a132376ddf24a8.png" alt="在这里插入图片描述"></p><h2 id="二、访问minio"><a href="#二、访问minio" class="headerlink" title="二、访问minio"></a>二、访问minio</h2><ul><li>访问minio服务器（<strong>注意每次访问之间要确认minio有没有启动</strong>上一步操作）<br>地址：<a href="http://127.0.0.1:9000/">http://127.0.0.1:9000/</a><br>输入刚刚上一步中WebUI的用户密码即可<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/9906f9d3baa040919e6aa6e2e0f09258.png" alt="在这里插入图片描述"></li><li>进入后显示如下，则正常启动<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/7aeafba9e9764705b687cf8c3f9e966b.png" alt="在这里插入图片描述"></li><li>了解到minIO与阿里云对象存储OSS一样都是由桶（bucket）组成的，相当于是文件夹，因此应该先要创建桶bucket<br>点击Create a Bucke<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/121bf14892c4404294df36b509bdf994.png" alt="在这里插入图片描述"></li></ul><h3 id="1、创建并使用桶"><a href="#1、创建并使用桶" class="headerlink" title="1、创建并使用桶"></a>1、创建并使用桶</h3><ul><li>创建完成后点击对象浏览器——Object Browser<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/53fce18a999f41858c4560fd6fe6382a.png" alt="在这里插入图片描述"></li><li>创建桶后试着可以直接上传文件</li></ul><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/dade3567cb4945c49b8f04025f83b08a.png" alt="在这里插入图片描述"></p><ul><li>点击文件还能进行共享&#x2F;分享<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/eb5c86aced844b2bb6388a33984b6447.png" alt="在这里插入图片描述"><br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/d505594c278c4ea6a3ba06387a35f49f.png" alt="在这里插入图片描述"></li><li>直接复制链接进行浏览器访问<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/a016d2364212485e8d523a2391ffb395.png" alt="在这里插入图片描述"></li></ul><blockquote><p>！！可以进行直接访问 Minio的ip+端口&#x2F;桶名称&#x2F;文件名 就可以忽视访问时效问题，但是这个方式需要桶开放权限</p></blockquote><h3 id="2、Buckets访问权限"><a href="#2、Buckets访问权限" class="headerlink" title="2、Buckets访问权限"></a>2、Buckets访问权限</h3><ul><li>访问路径：<br>localhost:9005：API的地址<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/5a93de0d9bc24a6d98f3eab8c55fade6.png" alt="在这里插入图片描述"></li></ul><blockquote><p><a href="http://localhost:9005/%E6%A1%B6%E5%90%8D%E5%AD%97/java.png">http://localhost:9005/桶名字/java.png</a><br><a href="http://localhost:9005/studyphoto-oss/1.png">http://localhost:9005/studyphoto-oss/1.png</a></p></blockquote><ul><li>如果没有权限的话会访问不到，此时要新增桶的权限<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/6ebe2d97ab424587a8643c6c05eaa43e.png" alt=" "><br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/1ec06ab25071471f83cd028893266dbf.png" alt="在这里插入图片描述"></li><li>再次浏览器访问，如下，成功访问<br><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/halo/minio/assets/d7c178ceac814ed3b165210a72d4c0a7.png" alt="在这里插入图片描述"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MinIO对象存储服务&quot;&gt;&lt;a href=&quot;#MinIO对象存储服务&quot; class=&quot;headerlink&quot; title=&quot;MinIO对象存储服务&quot;&gt;&lt;/a&gt;MinIO对象存储服务&lt;/h1&gt;&lt;p&gt;MinIO是什么？&lt;br&gt;  官方解释：MinIO 是一个基于Apa</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="远程连接" scheme="http://example.com/categories/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="minio" scheme="http://example.com/tags/minio/"/>
    
    <category term="远程连接" scheme="http://example.com/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>智慧校园管理系统</title>
    <link href="http://example.com/2024/03/26/%E6%99%BA%E6%85%A7%E6%A0%A1%E5%9B%AD%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2024/03/26/%E6%99%BA%E6%85%A7%E6%A0%A1%E5%9B%AD%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</id>
    <published>2024-03-26T09:04:00.000Z</published>
    <updated>2025-02-13T03:36:05.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="尚硅谷-毕设项目系列教程-智慧校园管理系统"><a href="#尚硅谷-毕设项目系列教程-智慧校园管理系统" class="headerlink" title="尚硅谷_毕设项目系列教程_智慧校园管理系统"></a>尚硅谷_毕设项目系列教程_智慧校园管理系统</h1><h1 id="一-毕设项目展示"><a href="#一-毕设项目展示" class="headerlink" title="一 毕设项目展示"></a>一 毕设项目展示</h1><h2 id="1-登录及角色控制"><a href="#1-登录及角色控制" class="headerlink" title="1 登录及角色控制"></a>1 登录及角色控制</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1649385057395.png" alt="1649385057395"></p><h2 id="2首页展示"><a href="#2首页展示" class="headerlink" title="2首页展示"></a>2首页展示</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1649385122247.png" alt="1649385122247"></p><h2 id="3-业务模块展示"><a href="#3-业务模块展示" class="headerlink" title="3 业务模块展示"></a>3 业务模块展示</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1649385173120.png" alt="1649385173120"></p><h1 id="二-智慧校园系统简介"><a href="#二-智慧校园系统简介" class="headerlink" title="二 智慧校园系统简介"></a>二 智慧校园系统简介</h1><h2 id="2-1-项目简介"><a href="#2-1-项目简介" class="headerlink" title="2.1  项目简介"></a>2.1  项目简介</h2><p> 智慧校园管理系统：主要是以年级、班级为单位，进行老师和学生信息记录和统计功能。项目采用前后端分离架构思想，前端采用HTML+CSS+VUE来实现页面效果展示，后端采用SpringBoot+MybatisPlus框架实现数据存储等服务。存储层使用高性能的MySQL，服务器使用SpringBoot内置的Tomcat9.x，项目构建工具使用Maven来管理jar包和项目构建。</p><h2 id="2-2-项目模块"><a href="#2-2-项目模块" class="headerlink" title="2.2 项目模块"></a>2.2 项目模块</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/%E9%A1%B9%E7%9B%AE%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D.png" alt="项目功能介绍"></p><h2 id="2-3-技术栈"><a href="#2-3-技术栈" class="headerlink" title="2.3 技术栈"></a>2.3 技术栈</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646297696190.png" alt="1646297696190"></p><blockquote><p><code>VUE</code><br>是一套用于构建用户界面的<strong>渐进式框架</strong>。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。 前后端分离是目前一种非常流行的开发模式，它使项目的分工更加明确：后端：负责处理、存储数据. 前端：负责显示数据 前端和后端开发人员通过 接口 进行数据的交换。<br><code>Spring</code><br>　Spring就像是整个项目中装配bean的大工厂，在配置文件中可以指定使用特定的参数去调用实体类的构造方法来实例化对象。也可以称之为项目中的粘合剂。<br>　Spring的核心思想是IoC（控制反转），即不再需要程序员去显式地<code>new</code>一个对象，而是让Spring框架帮你来完成这一切。</p><p><code>SpringMVC</code><br>　SpringMVC在项目中拦截用户请求，它的核心Servlet即DispatcherServlet承担中介或是前台这样的职责，将用户请求通过HandlerMapping去匹配Controller，Controller就是具体对应请求所执行的操作。SpringMVC相当于SSH框架中struts。<br><code>mybatis-plus</code><br>　mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。<code>MyBatis-plus</code>就是在MyBatis的基础上,为Mapper接口,Service层提供一些比较全面的CURD的业务逻辑功能,使程序员可以减少在Mapper和Service层的代码编写</p><p><code>MVC项目架构</code></p><p>页面发送请求给控制器，控制器调用业务层处理逻辑，逻辑层向持久层发送请求，持久层与数据库交互，后将结果返回给业务层，业务层将处理逻辑发送给控制器，控制器再调用视图展现数据。</p></blockquote><h2 id="2-4-软件环境"><a href="#2-4-软件环境" class="headerlink" title="2.4  软件环境"></a>2.4  软件环境</h2><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646728754228.png" alt="1646728754228"></p><h3 id="2-4-1-安装数据库"><a href="#2-4-1-安装数据库" class="headerlink" title="2.4.1 安装数据库"></a>2.4.1 安装数据库</h3><p>•    <strong>1.</strong> <strong>开放源代码</strong> </p><p>MySQL最强大的优势之一在于它是一个开放源代码的数据库管理系统。开源的特点是给予了用户根据自己需要修改DBMS的自由。MySQL采用了General Public License，这意味着授予用户阅读、修改和优化源代码的权利，这样即使是免费版的MySQL的功能也足够强大，这也是为什么MySQL越来越受欢迎的主要原因。 </p><p>•    <strong>2.</strong> <strong>跨平台</strong> </p><p>MySQL可在不同的操作系统下运行，简单地说，MySQL可以支持Windows系统、UNIX系统、Linux系统等多种操作系统平台。这意味着在一个操作系统中实现的应用程序可很方便移植到其他操作系统下。 </p><p>•    <strong>3.</strong> <strong>轻量级</strong> </p><p>MySQL的核心程序完全采用多线程编程，这些线程都是轻量级的进程，它在灵活地为用户提供服务的同时，又不会占用过多的系统资源。因此MySQL能够更快速、高效的处理数据。 </p><p>•    <strong>4.</strong> <strong>成本低</strong> </p><p>MySQL分为社区版和企业版，社区版是完全免费的，而企业版是收费的。即使在开发中需要用到一些付费的附加功能，价格相对于昂贵的Oracle、DB2等也是有很大优势的。其实免费的社区版也支持多种数据类型和正规的SQL查询语言，能够对数据进行各种查询、增加、删除、修改等操作，所以一般情况下社区版就可以满足开发需求了，而对数据库可靠性要求比较高的企业可以选择企业版。 </p><p>社区版与企业版主要的区别是： </p><p>□    社区版包含所有MySQL的最新功能，而企业版只包含稳定之后的功能。换句话说，社区版可以理解为是企业版的测试版。 </p><p>□    官方的支持服务只是针对企业版，如果用户在使用社区版时出现了问题，MySQL官方是不负责任的。  </p><blockquote><p>官网下载社区版安装包</p></blockquote><p>​        官方下载网址是：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a>  </p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613444481.png" alt="1646613444481"></p><p>MySQL Installer for Windows：MySQL8的windows安装版下载。点击GO to Download Pages&gt;前往下载。入下图所示：</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613466909.png" alt="1646613466909"></p><p>此处选择Windows (x86, 32-bit)MSI Installer版本，在32-bit、64位系统下均可运行。下载后如下图所示。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612538419.png" alt="1646612538419"></p><blockquote><p>双击MySQL安装文件mysql-installer-community-8.0.18.0.msi，出现安装类型选项。</p></blockquote><ol><li><p>Developer Default：开发者默认</p></li><li><p>Server only：只安装服务器端</p></li><li><p>Client only：只安装客户端</p></li><li><p>Full：安装全部选项</p></li><li><p>Custom：自定义安装</p></li></ol><p>初学者建议选项为Developer Default、Server only，熟悉MySQL的用户可以选择Custom选项。<strong>此处选择Server only</strong>。安装最快，内容够用。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612661931.png" alt="1646612661931"></p><p>如果选择custom选项，就需要从左边可用产品列表available Product中选择需要安装的选项，加入到右边的要安装产品列表 Product&#x2F;Features to be Installed中。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612689356.png" alt="1646612689356"></p><blockquote><p>进入Installation窗口，发现只有MySQL Server一个product。点击Execute按钮进入安装过程，会显示进度条，完成后点击Next按钮继续。</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612734879.png" alt="1646612734879"></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612751102.png" alt="1646612751102"></p><blockquote><p>进入产品配置向导，配置多个安装细节，点击Next按钮即可。  </p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612866172.png" alt="1646612866172"></p><blockquote><p>高可靠性High Availability，采用默认选项即可。</p></blockquote><ol><li><p>Standalone MySQL Server&#x2F;Classic MySQL Replication:独立MySQL服务器&#x2F;经典MySQL复制</p></li><li><p>InnoDB Cluster:InnoDB集群</p></li></ol><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612932002.png" alt="1646612932002"></p><blockquote><p>类型和网络 Type and Networking，采用默认选项即可。记住MySQL的监听端口默认是3306。  </p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646612966473.png" alt="1646612966473"></p><blockquote><p>身份验证方法Authentication Method，采用默认选项即可</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613017528.png" alt="1646613017528"></p><blockquote><p>账户和角色 Accounts and Roles。MySQL管理员账户名称是root，在此处指定root用户的密码。还可以在此处通过Add User按钮添加其他新账户，此处省略该操作。  </p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613110179.png" alt="1646613110179"></p><blockquote><p>Windows服务：Windows Service。</p></blockquote><p>​Configure MySQL Server as a Windows Service:给MySQL服务器配置一个服务项。</p><p>​Windows Service Name:服务名称，采用默认名称MySQL80即可。</p><p>​Start the MySQL at System Startup：系统启动时开启MySQL服务</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613165149.png" alt="1646613165149"></p><blockquote><p>Apply Configuration：点击Execute按钮执行开始应用这些配置项。</p></blockquote><p>​Writing configuration file: 写配置文件。</p><p>​Updating Windows Firewall rules：更新Windows防火墙规则</p><p>​Adjusting Windows services：调整Windows服务</p><p>​Initializing database：初始化数据库</p><p>​Starting the server： 启动服务器</p><p>​Applying security setting：应用安全设置</p><p>​Updating the Start menu link：更新开始菜单快捷方式链接</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613234370.png" alt="1646613234370"></p><blockquote><p>执行完成后，如下图所示。单击Finish完成安装，进入产品配置环节。</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613265138.png" alt="1646613265138"></p><blockquote><p>产品配置Product Configuration到此结束：点击Next按钮。  </p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613326986.png" alt="1646613326986"></p><blockquote><p>安装完成 Installation Complete。点击Finish按钮完成安装  </p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613357464.png" alt="1646613357464"></p><blockquote><p>启动和关闭MySQL服务</p></blockquote><p>win+r 输入 services.msc 查看Windows服务</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613680202.png" alt="1646613680202"></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613648631.png" alt="1646613648631"></p><blockquote><p>检查mysql默认的安装位置</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613727871.png" alt="1646613727871"></p><blockquote><p>配置环境变量</p></blockquote><p>设置环境变量path，增加MySQL8的执行文件的路径，访问该目录下文件无需cd到该目录下，路径为：C:\Program Files\MySQL\MySQL Server 8.0\bin。注意：使用分号;分割path中各个路径。</p><p>path：C:\Program Files\MySQL\MySQL Server 8.0\bin</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613828367.png" alt="1646613828367"></p><blockquote><p>登录mysql</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613863246.png" alt="1646613863246"></p><h3 id="2-4-2-安装数据库客户端工具"><a href="#2-4-2-安装数据库客户端工具" class="headerlink" title="2.4.2 安装数据库客户端工具"></a>2.4.2 安装数据库客户端工具</h3><blockquote><p>Navicat是一套快速、可靠并价格相当便宜的数据库管理工具，专为简化数据库的管理及降低系统管理成本而设。它的设计符合数据库管理员、开发人员及中小企业的需要。Navicat 是以直觉化的图形用户界面而建的，让你可以以安全并且简单的方式创建、组织、访问并共用信息。Navicat Premium 是一套数据库开发工具，让你从单一应用程序中同时连接 MySQL、MariaDB、MongoDB、SQL Server、Oracle、PostgreSQL 和 SQLite 数据库。它与 Amazon RDS、Amazon Aurora、Amazon Redshift、Microsoft Azure、Oracle Cloud、MongoDB Atlas、阿里云、腾讯云和华为云等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646613934105.png" alt="1646613934105"></p><p>直接解压安装包，拷贝到合适目录下，双击其中的navicat.exe，即可开始运行。打开后选择 连接工具按钮—-连接，输入四个连接连接参数，并进行测试，结果提示连接失败，报2059异常。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646614120164.png" alt="1646614120164"></p><p>该错误的原因是在MySQL8之前版本中加密规则mysql_native_password，而在MySQL8以后的加密规则为caching_sha2_password。解决此问题有两种方法，一种是更新navicat驱动来解决此问题，一种是将mysql用户登录的加密规则修改为mysql_native_password。此处采用第二种方式。</p><p>设置密码永不过期</p><p>alter user ‘root‘@’localhost’ identified by ‘root’ password expire never;</p><p>设置加密规则为mysql_native_password</p><p>alter user ‘root‘@’localhost’ identified with mysql_native_password by ‘root’;</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646614233972.png" alt="1646614233972"></p><p>重新访问navicat，提示连接成功。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646614199341.png" alt="1646614199341"></p><p>安装完成连接mysql</p><p>1、输入连接ip地址，用户名和密码，如果连接成功，则表示mysql安装没有问题</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646113756316.png" alt="1646113756316"></p><h3 id="2-4-3-安装JDK"><a href="#2-4-3-安装JDK" class="headerlink" title="2.4.3 安装JDK"></a>2.4.3 安装JDK</h3><p>JDK详细教程请参考尚硅谷官方免费教程</p><p><a href="http://www.atguigu.com/download_detail.shtml?v=129">http://www.atguigu.com/download_detail.shtml?v=129</a></p><p><a href="https://www.bilibili.com/video/BV1Kb411W75N?p=30">https://www.bilibili.com/video/BV1Kb411W75N?p=30</a></p><p>版本：java1.8</p><p>验证安装是否成功</p><p>1、打开cmd窗口</p><p>2、输入java –version</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646113467494.png" alt="1646113467494"></p><h3 id="2-4-4-安装IDEA"><a href="#2-4-4-安装IDEA" class="headerlink" title="2.4.4 安装IDEA"></a>2.4.4 安装IDEA</h3><p>建议使用IntelliJ IDEA 2019.2 x64及以上版本</p><p>IntelliJ IDEA详细使用教程请参考尚硅谷官方免费教程</p><p><a href="http://www.atguigu.com/download_detail.shtml?v=11">http://www.atguigu.com/download_detail.shtml?v=11</a></p><p><a href="https://www.bilibili.com/video/BV1PW411X75p?p=4">https://www.bilibili.com/video/BV1PW411X75p?p=4</a></p><h3 id="2-4-5-安装Maven"><a href="#2-4-5-安装Maven" class="headerlink" title="2.4.5 安装Maven"></a>2.4.5 安装Maven</h3><blockquote><p>Maven是Apache软件基金会组织维护的一款专门为Java项目提供<strong>构建</strong>和<strong>依赖</strong>管理支持的工具。</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637889444471.png" alt="1637889444471"></p><blockquote><p>Maven的下载</p></blockquote><p>下载地址:<a href="http://maven.apache.org/">http://maven.apache.org/</a>  </p><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image002.jpg" alt="img">  </p><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image002-1637895976892.jpg" alt="img">  </p><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image002-1637895989034.jpg" alt="img">  </p><blockquote><p>Maven的环境变量配置</p></blockquote><p>检查JAVA_HOME环境变量。Maven是使用Java开发的，所以必须知道当前系统环境中JDK的安装目录。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637890580346.png" alt="1637890580346"></p><blockquote><p>解压Maven的核心程序</p></blockquote><p>将apache-maven-3.6.3-bin.zip解压到一个<strong>非中文无空格</strong>的目录下。例如  </p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637890745386.png" alt="1637890745386"></p><blockquote><p>配置Maven的环境变量</p></blockquote><ul><li>MAVEN_HOME</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\apache-maven-3.6.3<br></code></pre></td></tr></table></figure><ul><li>path</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">MAVEN_HOME%\bin</span><br></code></pre></td></tr></table></figure><p>Maven：MAVEN_HOME(低版本中使用MAVEN_HOME，高版本中推荐使用M2_HOME)  </p><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image002-1637896070880.jpg" alt="img"></p><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image001.png" alt="img"></p><blockquote><p>验证Maven安装是否正确</p></blockquote><ul><li><p>使用下面的指令在DOS上验证maven安装是否成功</p></li><li><p>mvn -v或者mvn -version</p></li></ul><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637891002215.png" alt="1637891002215"></p><blockquote><p>配置Maven本地仓库</p></blockquote><p>​Maven的核心程序并不包含具体功能，仅负责宏观调度。具体功能由插件来完成。Maven核心程序会到本地仓库中查找插件。如果本地仓库中没有就会从远程中央仓库下载。此时如果不能上网则无法执行Maven的具体功能。为了解决这个问题，我们可以将Maven的本地仓库指向一个在联网情况下下载好的目录。Maven默认的本地仓库：<del>.m2\repository目录(</del>表示当前用户的家目录)。</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637891817365.png" alt="1637891817365"></p><blockquote><p>配置Maven中央仓库为国内的阿里云</p></blockquote><ul><li>接下来我们需要配置maven镜像，如果我们不配置，我们下载jar包是从国外下载的，下载速度很慢，所以我们配置一下国内的阿里云镜像</li></ul> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637891927479.png" alt="1637891927479"></p><blockquote><p>配置Maven全局JDK版本</p></blockquote><p> 接下来我们可以为maven配置全局的jdk，这样我们在创建maven项目时就会自动使用该jdk版本，目前推荐jdk1.8 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jdk-1.8<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">jdk</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">jdk</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637892137110.png" alt="1637892137110"></p><blockquote><p>查看Idea自带Maven插件</p></blockquote><p>Idea中其实自带Maven插件，而且我们也可以给自带的Maven插件进行配置，所以我们可以使用自带的Maven，也可以使用我们安装的Maven核心程序</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637892717973.png" alt="1637892717973"></p><blockquote><p>设置Maven自动导包</p></blockquote><p>设置Maven自动导包,勾选次选项时,每次添加依赖maven都会给我们立刻自动导入,但是我们往往不勾选,每次添加新的依赖时我们手动集中导入一次. 在比较新新的Idea中已经没有该选项</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637892684633.png" alt="1637892684633"></p><blockquote><p>Idea中配置使用我们自己安装的Maven插件</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1637892864668.png" alt="1637892864668"></p><blockquote><p>优化Maven的Runner参数</p></blockquote><p>优化配置：-DarchetypeCatalog&#x3D;internal 每次创建项目时，IDEA要使用插件进行创建，这些插件当创建新项目时，它每次都会去中央仓库下载，这样使得创建比较慢。应该在创建时让它找本地仓库中插件进行创建项目。(-D代表属性,后面是key&#x3D;value的形式配置参数)</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image002-1637898064778.jpg" alt="img"></p><p><strong>注意:某些版本的Idea在设置了Maven之后,每次创建一个项目的时候都会失效!!! 如2019.2.4版本,所以大家以后每次创建Maven项目的时候一定要检查一下Idea的Maven配置</strong></p><blockquote><p> 上述配置也可以在  other settings &gt; Settings for New Project中进行</p></blockquote><p>​         <img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/clip_image001-1637898297404.png" alt="img">  </p><h3 id="2-4-6-安装Tomcat"><a href="#2-4-6-安装Tomcat" class="headerlink" title="2.4.6 安装Tomcat"></a>2.4.6 安装Tomcat</h3><p>只需要解压，最好目录中不要出现中文。目前使用SpringBoot内置Tomcat即可</p><h1 id="三-智慧校园系统功能开发"><a href="#三-智慧校园系统功能开发" class="headerlink" title="三 智慧校园系统功能开发"></a>三 智慧校园系统功能开发</h1><h2 id="3-1-项目搭建"><a href="#3-1-项目搭建" class="headerlink" title="3.1 项目搭建"></a>3.1 项目搭建</h2><h3 id="3-1-1-使用IDEA的SpringBoot脚手架创建一个Maven项目"><a href="#3-1-1-使用IDEA的SpringBoot脚手架创建一个Maven项目" class="headerlink" title="3.1.1 使用IDEA的SpringBoot脚手架创建一个Maven项目"></a>3.1.1 使用IDEA的SpringBoot脚手架创建一个Maven项目</h3><blockquote><p>创建新项目 选择Spring Initializr</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278072789.png" alt="1646278072789"></p><blockquote><p>填写 group和artiface  选择JAVA version</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278651701.png" alt="1646278651701"></p><blockquote><p>添加组件和选择SpringBoot版本,暂时使用默认即可,后面我们自己添加项目依赖和修改SpringBoot版本</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278230851.png" alt="1646278230851"></p><blockquote><p>查看项目名以及项目的存放路径, 然后finish</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278677696.png" alt="1646278677696"></p><blockquote><p>创建完毕后,检查项目的Maven配置,安装Lombok插件,启动注解处理,然后重启idea</p></blockquote><ol><li>Lombok插件</li></ol><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278893046.png" alt="1646278893046"></p><ol start="2"><li>开启注解处理</li></ol><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278859312.png" alt="1646278859312"></p><ol start="3"><li>检查maven配置</li></ol><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646278823032.png" alt="1646278823032"></p><h3 id="3-1-2在pom-xml中到导入相关依赖"><a href="#3-1-2在pom-xml中到导入相关依赖" class="headerlink" title="3.1.2在pom.xml中到导入相关依赖"></a>3.1.2在pom.xml中到导入相关依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 继承方式使用SpringBoot --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.1.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>zhxy<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.atguigu<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--单元测试启动器--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- thymeleaf支持--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--  mybatis-plus--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 简化POJO实体类开发 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--mysql--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.31<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--swagger--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--swagger ui--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--swagger2  增强版接口文档--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br>        <span class="hljs-comment">&lt;!--开发者工具--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.29<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- JWT生成Token--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.jsonwebtoken<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jjwt<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.7.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--spring boot maven插件 , 可以将项目运行依赖的jar包打到我们的项目中--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-1-3-准备项目结构"><a href="#3-1-3-准备项目结构" class="headerlink" title="3.1.3 准备项目结构"></a>3.1.3 准备项目结构</h3><ol><li><p>java目录下</p><ol><li>config : 项目的配置类</li><li>controller: 控制层</li><li>mapper : 持久层接口</li><li>pojo :  实体类</li><li>service: 服务层</li><li>util: 工具类包</li><li>ZhxyApplication : 启动类</li></ol></li><li><p>resources目录下</p><ol><li>mapper :持久层映射文件</li><li>public&#x2F;upload:文件上传目录</li><li>static: 静态资源目录</li><li>application.yml :SpringBoot核心配置文件</li></ol></li></ol><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646279611127.png" alt="1646279611127"></p><h3 id="3-1-4准备application-yml配置文件"><a href="#3-1-4准备application-yml配置文件" class="headerlink" title="3.1.4准备application.yml配置文件"></a>3.1.4准备application.yml配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">9001</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-comment">#解决SpringBoot2.6.0与swagger冲突问题【原因是在springboot2.6.0中将SpringMVC 默认路径匹配策略从AntPathMatcher 更改为PathPatternParser，导致出错，解决办法是切换回原先的AntPathMatcher】</span><br>  <span class="hljs-attr">mvc:</span><br>    <span class="hljs-attr">pathmatch:</span><br>      <span class="hljs-attr">matching-strategy:</span> <span class="hljs-string">ant_path_matcher</span><br>  <span class="hljs-comment">#配置数据源</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-comment">#配置数据源类型</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br>    <span class="hljs-comment">#配置数据库连接属性</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/sgg_zhxy_db?characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;userSSL=false</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>    <span class="hljs-comment">#url: jdbc:mysql://r2czkq1vewxat78mnyg60oisurj5h4dp.mysql.qingcloud.link:3306/ssg_zhxy_db?characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;userSSL=false</span><br>    <span class="hljs-comment">#username: shangguigu</span><br>    <span class="hljs-comment">#password: shangguigu@QY123</span><br>    <span class="hljs-comment">#mybatis-plus内置连接池</span><br>    <span class="hljs-attr">hikari:</span><br>      <span class="hljs-attr">connection-test-query:</span> <span class="hljs-string">SELECT</span> <span class="hljs-number">1</span><br>      <span class="hljs-attr">connection-timeout:</span> <span class="hljs-number">60000</span><br>      <span class="hljs-attr">idle-timeout:</span> <span class="hljs-number">500000</span><br>      <span class="hljs-attr">max-lifetime:</span> <span class="hljs-number">540000</span><br>      <span class="hljs-attr">maximum-pool-size:</span> <span class="hljs-number">12</span><br>      <span class="hljs-attr">minimum-idle:</span> <span class="hljs-number">10</span><br>      <span class="hljs-attr">pool-name:</span> <span class="hljs-string">GuliHikariPool</span><br>  <span class="hljs-attr">thymeleaf:</span><br>    <span class="hljs-comment">#模板的模式，支持 HTML, XML TEXT JAVASCRIPT</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-string">HTML5</span><br>    <span class="hljs-comment">#编码 可不用配置</span><br>    <span class="hljs-attr">encoding:</span> <span class="hljs-string">UTF-8</span><br>    <span class="hljs-comment">#开发配置为false,避免修改模板还要重启服务器</span><br>    <span class="hljs-attr">cache:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment">#配置模板路径，默认是templates，可以不用配置</span><br>    <span class="hljs-attr">prefix:</span> <span class="hljs-string">classpath:/static/</span><br>  <span class="hljs-attr">jackson:</span><br>    <span class="hljs-attr">date-format:</span> <span class="hljs-string">yyyy-MM-dd</span> <span class="hljs-string">HH:mm:ss</span><br>    <span class="hljs-attr">time-zone:</span> <span class="hljs-string">GMT+8</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-comment">#设置文件上传上限</span><br>    <span class="hljs-attr">multipart:</span><br>      <span class="hljs-attr">max-file-size:</span> <span class="hljs-string">10MB</span><br>      <span class="hljs-attr">max-request-size:</span> <span class="hljs-string">100MB</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-comment">#添加日志支持</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath*:/mapper/**/*.xml</span><br></code></pre></td></tr></table></figure><h3 id="3-1-5准备分页插件的配置类"><a href="#3-1-5准备分页插件的配置类" class="headerlink" title="3.1.5准备分页插件的配置类"></a>3.1.5准备分页插件的配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.config;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;<br><span class="hljs-keyword">import</span> org.mybatis.spring.annotation.MapperScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@MapperScan(&quot;com.atguigu.zhxy.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MpConfig</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分页插件</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> PaginationInterceptor <span class="hljs-title function_">paginationInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">PaginationInterceptor</span> <span class="hljs-variable">paginationInterceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInterceptor</span>();<br>        <span class="hljs-comment">// paginationInterceptor.setLimit(你的最大单页限制数量，默认 500 条，小于 0 如 -1 不受限制);</span><br>        <span class="hljs-keyword">return</span> paginationInterceptor;<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="3-1-6-准备Swagger2的配置类"><a href="#3-1-6-准备Swagger2的配置类" class="headerlink" title="3.1.6 准备Swagger2的配置类"></a>3.1.6 准备Swagger2的配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.config;<br><br><span class="hljs-keyword">import</span> com.google.common.base.Predicates;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.ParameterBuilder;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.PathSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.schema.ModelRef;<br><span class="hljs-keyword">import</span> springfox.documentation.service.ApiInfo;<br><span class="hljs-keyword">import</span> springfox.documentation.service.Contact;<br><span class="hljs-keyword">import</span> springfox.documentation.service.Parameter;<br><span class="hljs-keyword">import</span> springfox.documentation.spi.DocumentationType;<br><span class="hljs-keyword">import</span> springfox.documentation.spring.web.plugins.Docket;<br><span class="hljs-keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Swagger2配置信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableSwagger2</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Swagger2Config</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Docket <span class="hljs-title function_">webApiConfig</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-comment">//添加head参数start</span><br>        List&lt;Parameter&gt; pars = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-type">ParameterBuilder</span> <span class="hljs-variable">tokenPar</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ParameterBuilder</span>();<br>        tokenPar.name(<span class="hljs-string">&quot;userId&quot;</span>)<br>                .description(<span class="hljs-string">&quot;用户ID&quot;</span>)<br>                .defaultValue(<span class="hljs-string">&quot;1&quot;</span>)<br>                .modelRef(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelRef</span>(<span class="hljs-string">&quot;string&quot;</span>))<br>                .parameterType(<span class="hljs-string">&quot;header&quot;</span>)<br>                .required(<span class="hljs-literal">false</span>)<br>                .build();<br>        pars.add(tokenPar.build());<br><br>        <span class="hljs-type">ParameterBuilder</span> <span class="hljs-variable">tmpPar</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ParameterBuilder</span>();<br>                tmpPar.name(<span class="hljs-string">&quot;userTempId&quot;</span>)<br>                .description(<span class="hljs-string">&quot;临时用户ID&quot;</span>)<br>                .defaultValue(<span class="hljs-string">&quot;1&quot;</span>)<br>                .modelRef(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelRef</span>(<span class="hljs-string">&quot;string&quot;</span>))<br>                .parameterType(<span class="hljs-string">&quot;header&quot;</span>)<br>                .required(<span class="hljs-literal">false</span>)<br>                .build();<br>        pars.add(tmpPar.build());<br>        <span class="hljs-comment">//添加head参数end</span><br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Docket</span>(DocumentationType.SWAGGER_2)<br>                .groupName(<span class="hljs-string">&quot;webApi&quot;</span>)<br>                .apiInfo(webApiInfo())<br>                .select()<br>                <span class="hljs-comment">//可以测试请求头中：输入token</span><br>                .apis(RequestHandlerSelectors.withClassAnnotation(ApiOperation.class))<br>                <span class="hljs-comment">//过滤掉admin路径下的所有页面</span><br>                <span class="hljs-comment">//.paths(Predicates.and(PathSelectors.regex(&quot;/sms/.*&quot;)))</span><br>                <span class="hljs-comment">//过滤掉所有error或error.*页面</span><br>                <span class="hljs-comment">//.paths(Predicates.not(PathSelectors.regex(&quot;/error.*&quot;)))</span><br>                .build()<br>                .globalOperationParameters(pars);<br><br>    &#125;<br><br>   <br><br>    <span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title function_">webApiInfo</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                .title(<span class="hljs-string">&quot;网站-API文档&quot;</span>)<br>                .description(<span class="hljs-string">&quot;本文档描述了网站微服务接口定义&quot;</span>)<br>                .version(<span class="hljs-string">&quot;1.0&quot;</span>)<br>                .contact(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Contact</span>(<span class="hljs-string">&quot;atguigu&quot;</span>, <span class="hljs-string">&quot;http://atguigu.com&quot;</span>, <span class="hljs-string">&quot;512111559@qq.com&quot;</span>))<br>                .build();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title function_">adminApiInfo</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                .title(<span class="hljs-string">&quot;后台管理系统-API文档&quot;</span>)<br>                .description(<span class="hljs-string">&quot;本文档描述了后台管理系统微服务接口定义&quot;</span>)<br>                .version(<span class="hljs-string">&quot;1.0&quot;</span>)<br>                .contact(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Contact</span>(<span class="hljs-string">&quot;atguigu&quot;</span>, <span class="hljs-string">&quot;http://atguigu.com&quot;</span>, <span class="hljs-string">&quot;512111559@qq.com&quot;</span>))<br>                .build();<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="3-1-7-准备util下的工具类"><a href="#3-1-7-准备util下的工具类" class="headerlink" title="3.1.7 准备util下的工具类"></a>3.1.7 准备util下的工具类</h3><blockquote><p>验证码图片工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> java.awt.*;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@project</span>: ssm_sms</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: 绘制验证码图片</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreateVerifiCodeImage</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-variable">WIDTH</span> <span class="hljs-operator">=</span> <span class="hljs-number">90</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-variable">HEIGHT</span> <span class="hljs-operator">=</span> <span class="hljs-number">35</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-variable">FONT_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>; <span class="hljs-comment">//字符大小</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">char</span>[] verifiCode; <span class="hljs-comment">//验证码</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> BufferedImage verifiCodeImage; <span class="hljs-comment">//验证码图片</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 获取验证码图片</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: no</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: java.awt.image.BufferedImage</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BufferedImage <span class="hljs-title function_">getVerifiCodeImage</span><span class="hljs-params">()</span> &#123;<br>        verifiCodeImage = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedImage</span>(WIDTH, HEIGHT, BufferedImage.TYPE_INT_BGR);<span class="hljs-comment">// create a image</span><br>        <span class="hljs-type">Graphics</span> <span class="hljs-variable">graphics</span> <span class="hljs-operator">=</span> verifiCodeImage.getGraphics();<br><br>        verifiCode = generateCheckCode();<br>        drawBackground(graphics);<br>        drawRands(graphics, verifiCode);<br><br>        graphics.dispose();<br><br>        <span class="hljs-keyword">return</span> verifiCodeImage;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 获取验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: no</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: char[]</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">char</span>[] getVerifiCode() &#123;<br>        <span class="hljs-keyword">return</span> verifiCode;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 随机生成验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: no</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: char[]</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">char</span>[] generateCheckCode() &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">chars</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span> + <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;<br>        <span class="hljs-type">char</span>[] rands = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[<span class="hljs-number">4</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">rand</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (Math.random() * (<span class="hljs-number">10</span> + <span class="hljs-number">26</span> * <span class="hljs-number">2</span>));<br>            rands[i] = chars.charAt(rand);<br>        &#125;<br>        <span class="hljs-keyword">return</span> rands;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 绘制验证码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: g</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: rands</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: void</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">drawRands</span><span class="hljs-params">(Graphics g, <span class="hljs-type">char</span>[] rands)</span> &#123;<br>        g.setFont(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Font</span>(<span class="hljs-string">&quot;Console&quot;</span>, Font.BOLD, FONT_SIZE));<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; rands.length; i++) &#123;<br><br>            g.setColor(getRandomColor());<br>            g.drawString(<span class="hljs-string">&quot;&quot;</span> + rands[i], i * FONT_SIZE + <span class="hljs-number">10</span>, <span class="hljs-number">25</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 绘制验证码图片背景</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: g</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: void</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">drawBackground</span><span class="hljs-params">(Graphics g)</span> &#123;<br><br>        g.setColor(Color.white);<br>        g.fillRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, WIDTH, HEIGHT);<br><br>        <span class="hljs-comment">// 绘制验证码干扰点</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">200</span>; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (Math.random() * WIDTH);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (Math.random() * HEIGHT);<br>            g.setColor(getRandomColor());<br>            g.drawOval(x, y, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);<br><br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 获取随机颜色</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: no</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: java.awt.Color</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Color <span class="hljs-title function_">getRandomColor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">ran</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Color</span>(ran.nextInt(<span class="hljs-number">220</span>), ran.nextInt(<span class="hljs-number">220</span>), ran.nextInt(<span class="hljs-number">220</span>));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>token口令生成工具 JwtHelper</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> io.jsonwebtoken.*;<br><span class="hljs-keyword">import</span> org.springframework.util.StringUtils;<br><br><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JwtHelper</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">long</span> <span class="hljs-variable">tokenExpiration</span> <span class="hljs-operator">=</span> <span class="hljs-number">24</span>*<span class="hljs-number">60</span>*<span class="hljs-number">60</span>*<span class="hljs-number">1000</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">tokenSignKey</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;123456&quot;</span>;<br><br>    <span class="hljs-comment">//生成token字符串</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">createToken</span><span class="hljs-params">(Long userId, Integer userType)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">token</span> <span class="hljs-operator">=</span> Jwts.builder()<br><br>                .setSubject(<span class="hljs-string">&quot;YYGH-USER&quot;</span>)<br><br>                .setExpiration(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(System.currentTimeMillis() + tokenExpiration))<br><br>                .claim(<span class="hljs-string">&quot;userId&quot;</span>, userId)<br><span class="hljs-comment">//                .claim(&quot;userName&quot;, userName)</span><br>                .claim(<span class="hljs-string">&quot;userType&quot;</span>, userType)<br><br>                .signWith(SignatureAlgorithm.HS512, tokenSignKey)<br>                .compressWith(CompressionCodecs.GZIP)<br>                .compact();<br>        <span class="hljs-keyword">return</span> token;<br>    &#125;<br><br>    <span class="hljs-comment">//从token字符串获取userid</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Long <span class="hljs-title function_">getUserId</span><span class="hljs-params">(String token)</span> &#123;<br>        <span class="hljs-keyword">if</span>(StringUtils.isEmpty(token)) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        Jws&lt;Claims&gt; claimsJws = Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token);<br>        <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> claimsJws.getBody();<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> (Integer)claims.get(<span class="hljs-string">&quot;userId&quot;</span>);<br>        <span class="hljs-keyword">return</span> userId.longValue();<br>    &#125;<br><br>    <span class="hljs-comment">//从token字符串获取userType</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Integer <span class="hljs-title function_">getUserType</span><span class="hljs-params">(String token)</span> &#123;<br>        <span class="hljs-keyword">if</span>(StringUtils.isEmpty(token)) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        Jws&lt;Claims&gt; claimsJws<br>                = Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token);<br>        <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> claimsJws.getBody();<br>        <span class="hljs-keyword">return</span> (Integer)(claims.get(<span class="hljs-string">&quot;userType&quot;</span>));<br>    &#125;<br><br>    <span class="hljs-comment">//从token字符串获取userName</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getUserName</span><span class="hljs-params">(String token)</span> &#123;<br>        <span class="hljs-keyword">if</span>(StringUtils.isEmpty(token)) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        Jws&lt;Claims&gt; claimsJws<br>                = Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token);<br>        <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> claimsJws.getBody();<br>        <span class="hljs-keyword">return</span> (String)claims.get(<span class="hljs-string">&quot;userName&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//判断token是否有效</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isExpiration</span><span class="hljs-params">(String token)</span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">isExpire</span> <span class="hljs-operator">=</span> Jwts.parser()<br>                    .setSigningKey(tokenSignKey)<br>                    .parseClaimsJws(token)<br>                    .getBody()<br>                    .getExpiration().before(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>            <span class="hljs-comment">//没有过期，有效，返回false</span><br>            <span class="hljs-keyword">return</span> isExpire;<br>        &#125;<span class="hljs-keyword">catch</span>(Exception e) &#123;<br>            <span class="hljs-comment">//过期出现异常，返回true</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 刷新Token</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> token</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">refreshToken</span><span class="hljs-params">(String token)</span> &#123;<br>        String refreshedToken;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">final</span> <span class="hljs-type">Claims</span> <span class="hljs-variable">claims</span> <span class="hljs-operator">=</span> Jwts.parser()<br>                    .setSigningKey(tokenSignKey)<br>                    .parseClaimsJws(token)<br>                    .getBody();<br>            refreshedToken = JwtHelper.createToken(getUserId(token), getUserType(token));<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            refreshedToken = <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> refreshedToken;<br>    &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//        String token = JwtHelper.createToken(1L, &quot;lucy&quot;);</span><br><span class="hljs-comment">//        System.out.println(token);</span><br><span class="hljs-comment">//        System.out.println(JwtHelper.getUserId(token));</span><br><span class="hljs-comment">//        System.out.println(JwtHelper.getUserName(token));</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>解析request请求中的 token口令的工具AuthContextHolder</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AuthContextHolder</span> &#123;<br><br>    <span class="hljs-comment">//从请求头token获取userid</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Long <span class="hljs-title function_">getUserIdToken</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">//从请求头token</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">token</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;token&quot;</span>);<br>        <span class="hljs-comment">//调用工具类</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> JwtHelper.getUserId(token);<br>        <span class="hljs-keyword">return</span> userId;<br>    &#125;<br><br>    <span class="hljs-comment">//从请求头token获取name</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getUserName</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>        <span class="hljs-comment">//从header获取token</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">token</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;token&quot;</span>);<br>        <span class="hljs-comment">//jwt从token获取username</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">userName</span> <span class="hljs-operator">=</span> JwtHelper.getUserName(token);<br>        <span class="hljs-keyword">return</span> userName;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>MD5加密工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> java.security.MessageDigest;<br><span class="hljs-keyword">import</span> java.security.NoSuchAlgorithmException;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MD5</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">encrypt</span><span class="hljs-params">(String strSrc)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">char</span> hexChars[] = &#123; <span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>,<br>                    <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span> &#125;;<br>            <span class="hljs-type">byte</span>[] bytes = strSrc.getBytes();<br>            <span class="hljs-type">MessageDigest</span> <span class="hljs-variable">md</span> <span class="hljs-operator">=</span> MessageDigest.getInstance(<span class="hljs-string">&quot;MD5&quot;</span>);<br>            md.update(bytes);<br>            bytes = md.digest();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> bytes.length;<br>            <span class="hljs-type">char</span>[] chars = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[j * <span class="hljs-number">2</span>];<br>            <span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; bytes.length; i++) &#123;<br>                <span class="hljs-type">byte</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> bytes[i];<br>                chars[k++] = hexChars[b &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">0xf</span>];<br>                chars[k++] = hexChars[b &amp; <span class="hljs-number">0xf</span>];<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(chars);<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;MD5加密出错！！+&quot;</span> + e);<br>        &#125;<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>JSON响应结果格式封装类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModel;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModelProperty;<br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局统一返回结果类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@ApiModel(value = &quot;全局统一返回结果&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Result</span>&lt;T&gt; &#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(value = &quot;返回码&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-meta">@ApiModelProperty(value = &quot;返回数据&quot;)</span><br>    <span class="hljs-keyword">private</span> T data;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Result</span><span class="hljs-params">()</span>&#123;&#125;<br><br>    <span class="hljs-comment">// 返回数据</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">build</span><span class="hljs-params">(T data)</span> &#123;<br>        Result&lt;T&gt; result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>&lt;T&gt;();<br>        <span class="hljs-keyword">if</span> (data != <span class="hljs-literal">null</span>)<br>            result.setData(data);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">build</span><span class="hljs-params">(T body, ResultCodeEnum resultCodeEnum)</span> &#123;<br>        Result&lt;T&gt; result = build(body);<br>        result.setCode(resultCodeEnum.getCode());<br>        result.setMessage(resultCodeEnum.getMessage());<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">ok</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Result.ok(<span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 操作成功</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">ok</span><span class="hljs-params">(T data)</span>&#123;<br>        Result&lt;T&gt; result = build(data);<br>        <span class="hljs-keyword">return</span> build(data, ResultCodeEnum.SUCCESS);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Result.fail(<span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 操作失败</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">(T data)</span>&#123;<br>        Result&lt;T&gt; result = build(data);<br>        <span class="hljs-keyword">return</span> build(data, ResultCodeEnum.FAIL);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Result&lt;T&gt; <span class="hljs-title function_">message</span><span class="hljs-params">(String msg)</span>&#123;<br>        <span class="hljs-built_in">this</span>.setMessage(msg);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Result&lt;T&gt; <span class="hljs-title function_">code</span><span class="hljs-params">(Integer code)</span>&#123;<br>        <span class="hljs-built_in">this</span>.setCode(code);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isOk</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.getCode().intValue() == ResultCodeEnum.SUCCESS.getCode().intValue()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>响应结果类型码枚举</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 统一返回结果状态信息类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ResultCodeEnum</span> &#123;<br><br>    SUCCESS(<span class="hljs-number">200</span>,<span class="hljs-string">&quot;成功&quot;</span>),<br>    FAIL(<span class="hljs-number">201</span>, <span class="hljs-string">&quot;失败&quot;</span>),<br>    SERVICE_ERROR(<span class="hljs-number">2012</span>, <span class="hljs-string">&quot;服务异常&quot;</span>),<br>    ILLEGAL_REQUEST( <span class="hljs-number">204</span>, <span class="hljs-string">&quot;非法请求&quot;</span>),<br>    PAY_RUN(<span class="hljs-number">205</span>, <span class="hljs-string">&quot;支付中&quot;</span>),<br>    ARGUMENT_VALID_ERROR(<span class="hljs-number">206</span>, <span class="hljs-string">&quot;参数校验错误&quot;</span>),<br><br>    LOGIN_ERROR(<span class="hljs-number">207</span>, <span class="hljs-string">&quot;用户名或密码错误&quot;</span>),<br>    LOGIN_AUTH(<span class="hljs-number">208</span>, <span class="hljs-string">&quot;未登陆&quot;</span>),<br>    PERMISSION(<span class="hljs-number">209</span>, <span class="hljs-string">&quot;没有权限&quot;</span>),<br>    SECKILL_NO_START(<span class="hljs-number">210</span>, <span class="hljs-string">&quot;秒杀还没开始&quot;</span>),<br>    SECKILL_RUN(<span class="hljs-number">211</span>, <span class="hljs-string">&quot;正在排队中&quot;</span>),<br>    SECKILL_NO_PAY_ORDER(<span class="hljs-number">212</span>, <span class="hljs-string">&quot;您有未支付的订单&quot;</span>),<br>    SECKILL_FINISH(<span class="hljs-number">213</span>, <span class="hljs-string">&quot;已售罄&quot;</span>),<br>    SECKILL_END(<span class="hljs-number">214</span>, <span class="hljs-string">&quot;秒杀已结束&quot;</span>),<br>    SECKILL_SUCCESS(<span class="hljs-number">215</span>, <span class="hljs-string">&quot;抢单成功&quot;</span>),<br>    SECKILL_FAIL(<span class="hljs-number">216</span>, <span class="hljs-string">&quot;抢单失败&quot;</span>),<br>    SECKILL_ILLEGAL(<span class="hljs-number">217</span>, <span class="hljs-string">&quot;请求不合法&quot;</span>),<br>    SECKILL_ORDER_SUCCESS(<span class="hljs-number">218</span>, <span class="hljs-string">&quot;下单成功&quot;</span>),<br>    COUPON_GET(<span class="hljs-number">220</span>, <span class="hljs-string">&quot;优惠券已经领取&quot;</span>),<br>    COUPON_LIMIT_GET(<span class="hljs-number">221</span>, <span class="hljs-string">&quot;优惠券已发放完毕&quot;</span>),<br>    <span class="hljs-comment">//2022-02-22</span><br>    LOGIN_CODE(<span class="hljs-number">222</span>,<span class="hljs-string">&quot;长时间未操作,会话已失效,请刷新页面后重试!&quot;</span>),<br>    CODE_ERROR(<span class="hljs-number">223</span>,<span class="hljs-string">&quot;验证码错误!&quot;</span>),<br>    TOKEN_ERROR(<span class="hljs-number">224</span>,<span class="hljs-string">&quot;Token无效!&quot;</span>)<br>    ;<br><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">ResultCodeEnum</span><span class="hljs-params">(Integer code, String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>文件上传工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.util;<br><br><span class="hljs-keyword">import</span> org.apache.commons.io.filefilter.SuffixFileFilter;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.UUID;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@project</span>: zhxy</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: 上传文件的工具类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UploadFile</span> &#123;<br><br>    <span class="hljs-comment">//存储文件上传失败的错误信息</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Map&lt;String, Object&gt; error_result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>    <span class="hljs-comment">//存储头像的上传结果信息</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Map&lt;String, Object&gt; upload_result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: 效验所上传图片的大小及格式等信息...</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: photo</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: path</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: java.util.Map&lt;java.lang.String, java.lang.Object&gt;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Map&lt;String, Object&gt; <span class="hljs-title function_">uploadPhoto</span><span class="hljs-params">(MultipartFile photo, String path)</span> &#123;<br>        <span class="hljs-comment">//限制头像大小(20M)</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">MAX_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">20971520</span>;<br>        <span class="hljs-comment">//获取图片的原始名称</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">orginalName</span> <span class="hljs-operator">=</span> photo.getOriginalFilename();<br>        <span class="hljs-comment">//如果保存文件的路径不存在,则创建该目录</span><br>        <span class="hljs-type">File</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(path);<br>        <span class="hljs-keyword">if</span> (!filePath.exists()) &#123;<br>            filePath.mkdirs();<br>        &#125;<br>        <span class="hljs-comment">//限制上传文件的大小</span><br>        <span class="hljs-keyword">if</span> (photo.getSize() &gt; MAX_SIZE) &#123;<br>            error_result.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-literal">false</span>);<br>            error_result.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;上传的图片大小不能超过20M哟!&quot;</span>);<br>            <span class="hljs-keyword">return</span> error_result;<br>        &#125;<br>        <span class="hljs-comment">// 限制上传的文件类型</span><br>        String[] suffixs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;.png&quot;</span>, <span class="hljs-string">&quot;.PNG&quot;</span>, <span class="hljs-string">&quot;.jpg&quot;</span>, <span class="hljs-string">&quot;.JPG&quot;</span>, <span class="hljs-string">&quot;.jpeg&quot;</span>, <span class="hljs-string">&quot;.JPEG&quot;</span>, <span class="hljs-string">&quot;.gif&quot;</span>, <span class="hljs-string">&quot;.GIF&quot;</span>, <span class="hljs-string">&quot;.bmp&quot;</span>, <span class="hljs-string">&quot;.BMP&quot;</span>&#125;;<br>        <span class="hljs-type">SuffixFileFilter</span> <span class="hljs-variable">suffixFileFilter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SuffixFileFilter</span>(suffixs);<br>        <span class="hljs-keyword">if</span> (!suffixFileFilter.accept(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(path + orginalName))) &#123;<br>            error_result.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-literal">false</span>);<br>            error_result.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;禁止上传此类型文件! 请上传图片哟!&quot;</span>);<br>            <span class="hljs-keyword">return</span> error_result;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span>: (提取公共代码 : 提高代码的可重用性)获取头像的上传结果信息</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: photo</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: dirPaht</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>: portraitPath</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span>: java.util.Map&lt;java.lang.String, java.lang.Object&gt;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Map&lt;String, Object&gt; <span class="hljs-title function_">getUploadResult</span><span class="hljs-params">(MultipartFile photo, String dirPaht, String portraitPath)</span> &#123;<br><br>        <span class="hljs-keyword">if</span> (!photo.isEmpty() &amp;&amp; photo.getSize() &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//获取图片的原始名称</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">orginalName</span> <span class="hljs-operator">=</span> photo.getOriginalFilename();<br>            <span class="hljs-comment">//上传图片,error_result:存储头像上传失败的错误信息</span><br>            Map&lt;String, Object&gt; error_result = UploadFile.uploadPhoto(photo, dirPaht);<br>            <span class="hljs-keyword">if</span> (error_result != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">return</span> error_result;<br>            &#125;<br>            <span class="hljs-comment">//使用UUID重命名图片名称(uuid__原始图片名称)</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">newPhotoName</span> <span class="hljs-operator">=</span> UUID.randomUUID() + <span class="hljs-string">&quot;__&quot;</span> + orginalName;<br>            <span class="hljs-comment">//将上传的文件保存到目标目录下</span><br>            <span class="hljs-keyword">try</span> &#123;<br>                photo.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(dirPaht + newPhotoName));<br>                upload_result.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-literal">true</span>);<br>                upload_result.put(<span class="hljs-string">&quot;portrait_path&quot;</span>, portraitPath + newPhotoName);<span class="hljs-comment">//将存储头像的项目路径返回给页面</span><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>                upload_result.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-literal">false</span>);<br>                upload_result.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;上传文件失败! 服务器端发生异常!&quot;</span>);<br>                <span class="hljs-keyword">return</span> upload_result;<br>            &#125;<br><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            upload_result.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-literal">false</span>);<br>            upload_result.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;头像上传失败! 未找到指定图片!&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> upload_result;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="3-1-8-准备各层基础代码"><a href="#3-1-8-准备各层基础代码" class="headerlink" title="3.1.8 准备各层基础代码"></a>3.1.8 准备各层基础代码</h3><h2 id="3-2-登录功能后台实现"><a href="#3-2-登录功能后台实现" class="headerlink" title="3.2 登录功能后台实现"></a>3.2 登录功能后台实现</h2><h3 id="3-2-1-验证码功能实现"><a href="#3-2-1-验证码功能实现" class="headerlink" title="3.2.1 验证码功能实现"></a>3.2.1 验证码功能实现</h3><blockquote><p>获取验证码图片及向session中存储验证码功能实现</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646294851945.png" alt="1646294851945"></p><blockquote><p>SystemController层代码实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.controller;<br><br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.Admin;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.LoginForm;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.AdminService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.StudentService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.TeacherService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.CreateVerifiCodeImage;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.JwtHelper;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-meta">@Api(tags = &quot;系统控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/system&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemController</span> &#123;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;获取验证码图片&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getVerifiCodeImage&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">getVerifiCodeImage</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;<br>        <span class="hljs-comment">//获取验证码图片</span><br>        <span class="hljs-type">BufferedImage</span> <span class="hljs-variable">verifiCodeImage</span> <span class="hljs-operator">=</span> CreateVerifiCodeImage.getVerifiCodeImage();<br>        <span class="hljs-comment">//获取验证码字符串</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">verifiCode</span> <span class="hljs-operator">=</span> String.valueOf(CreateVerifiCodeImage.getVerifiCode());<br><br>        <span class="hljs-comment">/*将验证码放入当前请求域*/</span><br>        request.getSession().setAttribute(<span class="hljs-string">&quot;verifiCode&quot;</span>,verifiCode);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//将验证码图片通过输出流做出响应</span><br>            ImageIO.write(verifiCodeImage,<span class="hljs-string">&quot;JPEG&quot;</span>,response.getOutputStream());<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger2接口文档查阅</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646294699005.png" alt="1646294699005"></p><h3 id="3-2-2-登录校验功能实现"><a href="#3-2-2-登录校验功能实现" class="headerlink" title="3.2.2 登录校验功能实现"></a>3.2.2 登录校验功能实现</h3><blockquote><p>SystemController层代码实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.zhxy.controller;<br><br><br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.Admin;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.LoginForm;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.Student;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.pojo.Teacher;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.AdminService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.StudentService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.service.TeacherService;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.CreateVerifiCodeImage;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.JwtHelper;<br><span class="hljs-keyword">import</span> com.atguigu.zhxy.util.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-meta">@Api(tags = &quot;系统控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/system&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AdminService adService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TeacherService teacherService;<br><br><br> <br><br>    <span class="hljs-meta">@ApiOperation(&quot;登录请求验证&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">login</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> LoginForm loginForm, HttpServletRequest request)</span>&#123;<br>        <span class="hljs-comment">// 获取用户提交的验证码和session域中的验证码</span><br>        <span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> request.getSession();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">systemVerifiCode</span> <span class="hljs-operator">=</span>(String) session.getAttribute(<span class="hljs-string">&quot;verifiCode&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">loginVerifiCode</span> <span class="hljs-operator">=</span> loginForm.getVerifiCode();<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;&quot;</span>.equals(systemVerifiCode))&#123;<br>            <span class="hljs-comment">// session过期,验证码超时,</span><br>            <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;验证码失效,请刷新后重试&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!loginVerifiCode.equalsIgnoreCase(systemVerifiCode))&#123;<br>            <span class="hljs-comment">// 验证码有误</span><br>            <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;验证码有误,请刷新后重新输入&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">// 验证码使用完毕,移除当前请求域中的验证码</span><br>        session.removeAttribute(<span class="hljs-string">&quot;verifiCode&quot;</span>);<br><br><br>        <span class="hljs-comment">// 准备一个Map集合,用户存放响应的信息</span><br>        Map&lt;String,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        <span class="hljs-comment">// 根据用户身份,验证登录的用户信息</span><br>        <span class="hljs-keyword">switch</span> (loginForm.getUserType())&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-comment">// 管理员身份</span><br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-comment">// 调用服务层登录方法,根据用户提交的LoginInfo信息,查询对应的Admin对象,找不到返回Null</span><br>                    <span class="hljs-type">Admin</span> <span class="hljs-variable">login</span> <span class="hljs-operator">=</span> adService.login(loginForm);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != login) &#123;<br>                        <span class="hljs-comment">// 登录成功,将用户id和用户类型转换为token口令,作为信息响应给前端</span><br>                        map.put(<span class="hljs-string">&quot;token&quot;</span>,JwtHelper.createToken(login.getId().longValue(), <span class="hljs-number">1</span>));<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">throw</span>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;用户名或者密码有误!&quot;</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> Result.ok(map);<br>                &#125; <span class="hljs-keyword">catch</span> (RuntimeException e) &#123;<br>                    e.printStackTrace();<br>                    <span class="hljs-comment">// 捕获异常,向用户响应错误信息</span><br>                    <span class="hljs-keyword">return</span> Result.fail().message(e.getMessage());<br>                &#125;<br><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<span class="hljs-comment">// 学生身份</span><br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-comment">// 调用服务层登录方法,根据用户提交的LoginInfo信息,查询对应的Student对象,找不到返回Null</span><br>                    <span class="hljs-type">Student</span> <span class="hljs-variable">login</span> <span class="hljs-operator">=</span> studentService.login(loginForm);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != login) &#123;<br>                        <span class="hljs-comment">// 登录成功,将用户id和用户类型转换为token口令,作为信息响应给前端</span><br>                        map.put(<span class="hljs-string">&quot;token&quot;</span>,JwtHelper.createToken(login.getId().longValue(), <span class="hljs-number">2</span>));<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">throw</span>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;用户名或者密码有误!&quot;</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> Result.ok(map);<br>                &#125; <span class="hljs-keyword">catch</span> (RuntimeException e) &#123;<br>                    e.printStackTrace();<br>                    <span class="hljs-comment">// 捕获异常,向用户响应错误信息</span><br>                    <span class="hljs-keyword">return</span> Result.fail().message(e.getMessage());<br>                &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<span class="hljs-comment">// 教师身份</span><br>                <span class="hljs-comment">// 调用服务层登录方法,根据用户提交的LoginInfo信息,查询对应的Teacher对象,找不到返回Null</span><br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-comment">// 调用服务层登录方法,根据用户提交的LoginInfo信息,查询对应的Student对象,找不到返回Null</span><br>                    <span class="hljs-type">Teacher</span> <span class="hljs-variable">login</span> <span class="hljs-operator">=</span> teacherService.login(loginForm);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != login) &#123;<br>                        <span class="hljs-comment">// 登录成功,将用户id和用户类型转换为token口令,作为信息响应给前端</span><br>                        map.put(<span class="hljs-string">&quot;token&quot;</span>,JwtHelper.createToken(login.getId().longValue(), <span class="hljs-number">3</span>));<br>                    &#125;<span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">throw</span>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;用户名或者密码有误!&quot;</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> Result.ok(map);<br>                &#125; <span class="hljs-keyword">catch</span> (RuntimeException e) &#123;<br>                    e.printStackTrace();<br>                    <span class="hljs-comment">// 捕获异常,向用户响应错误信息</span><br>                    <span class="hljs-keyword">return</span> Result.fail().message(e.getMessage());<br>                &#125;<br>        &#125;<br>        <span class="hljs-comment">// 查无此用户,响应失败</span><br>        <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;查无此用户&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p> AdminService中的login方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AdminService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;Admin&gt; &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 登录</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> loginForm</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    Admin <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;adService&quot;)</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdminServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;AdminMapper, Admin&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AdminService</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 超级管理员登录</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> loginForm</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Admin <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span> &#123;<br>        <span class="hljs-comment">//创建QueryWrapper对象</span><br>        QueryWrapper&lt;Admin&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-comment">//拼接查询条件</span><br>        queryWrapper.eq(<span class="hljs-string">&quot;name&quot;</span>,loginForm.getUsername());<br>        <span class="hljs-comment">// 转换成密文进行查询</span><br>        queryWrapper.eq(<span class="hljs-string">&quot;password&quot;</span>, MD5.encrypt(loginForm.getPassword()));<br><br>        <span class="hljs-type">Admin</span> <span class="hljs-variable">admin</span> <span class="hljs-operator">=</span> baseMapper.selectOne(queryWrapper);<br><br>        <span class="hljs-keyword">return</span> admin;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>StudentService中的login方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">StudentService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;Student&gt; &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 学生登录方法</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;stuService&quot;)</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;StudentMapper, Student&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StudentService</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 学生登录方法</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span>&#123;<br>        QueryWrapper&lt;Student&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        queryWrapper.eq(<span class="hljs-string">&quot;name&quot;</span>,loginForm.getUsername());<br>        queryWrapper.eq(<span class="hljs-string">&quot;password&quot;</span>, MD5.encrypt(loginForm.getPassword()));<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> baseMapper.selectOne(queryWrapper);<br>        <span class="hljs-keyword">return</span> student;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>TeacherService中的login方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">TeacherService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;Teacher&gt; &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 登录方法</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> Teacher <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;teaService&quot;)</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeacherServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;TeacherMapper, Teacher&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">TeacherService</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Teacher登录方法</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> loginForm</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Teacher <span class="hljs-title function_">login</span><span class="hljs-params">(LoginForm loginForm)</span> &#123;<br>        <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>        queryWrapper.eq(<span class="hljs-string">&quot;name&quot;</span>,loginForm.getUsername());<br>        queryWrapper.eq(<span class="hljs-string">&quot;password&quot;</span>, MD5.encrypt(loginForm.getPassword()));<br>        <span class="hljs-type">Teacher</span> <span class="hljs-variable">teacher</span> <span class="hljs-operator">=</span> baseMapper.selectOne(queryWrapper);<br>        <span class="hljs-keyword">return</span> teacher;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>通过SwaggerUI 查看和测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646297566254.png" alt="1646297566254"></p><h3 id="3-2-3-跳转至首页功能实现"><a href="#3-2-3-跳转至首页功能实现" class="headerlink" title="3.2.3 跳转至首页功能实现"></a>3.2.3 跳转至首页功能实现</h3><blockquote><p>当验证通过后,前端会产生第二个请求,用以获取用户的类型,然后根据用户的类型来展现不同的页面,所以后端要有一个根据token解析用户类型并做出结果响应的控制层</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;系统控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/system&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AdminService adService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TeacherService teacherService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;通过token获取用户信息&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getInfo&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getUserInfoByToken</span><span class="hljs-params">(HttpServletRequest request, <span class="hljs-meta">@RequestHeader(&quot;token&quot;)</span>String token)</span>&#123;<br>        <span class="hljs-comment">// 获取用户中请求的token</span><br>        <span class="hljs-comment">// 检查token 是否过期 20H</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">isEx</span> <span class="hljs-operator">=</span> JwtHelper.isExpiration(token);<br>        <span class="hljs-keyword">if</span> (isEx) &#123;<br>            <span class="hljs-keyword">return</span> Result.build(<span class="hljs-literal">null</span>, ResultCodeEnum.TOKEN_ERROR);<br>        &#125;<br>        <span class="hljs-comment">// 解析token,获取用户id和用户类型</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span>JwtHelper.getUserId(token);<br>        <span class="hljs-type">Integer</span>  <span class="hljs-variable">userType</span> <span class="hljs-operator">=</span>JwtHelper.getUserType(token);<br>        <span class="hljs-comment">// 准备一个Map集合用于存响应的数据</span><br>        Map&lt;String,Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        <span class="hljs-keyword">switch</span> (userType)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-type">Admin</span> <span class="hljs-variable">admin</span> <span class="hljs-operator">=</span> adService.getAdminById(userId.intValue());<br>                map.put(<span class="hljs-string">&quot;user&quot;</span>,admin);<br>                map.put(<span class="hljs-string">&quot;userType&quot;</span>,<span class="hljs-number">1</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> studentService.getStudentById(userId.intValue());<br>                map.put(<span class="hljs-string">&quot;user&quot;</span>,student);<br>                map.put(<span class="hljs-string">&quot;userType&quot;</span>,<span class="hljs-number">1</span>);<br>                <span class="hljs-keyword">break</span>;<br><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                <span class="hljs-type">Teacher</span> <span class="hljs-variable">teacher</span> <span class="hljs-operator">=</span> teacherService.getTeacherById(userId.intValue());<br>                map.put(<span class="hljs-string">&quot;user&quot;</span>,teacher);<br>                map.put(<span class="hljs-string">&quot;userType&quot;</span>,<span class="hljs-number">1</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span>  Result.ok(map);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646297606618.png" alt="1646297606618"></p><h2 id="3-3-年级管理功能实现"><a href="#3-3-年级管理功能实现" class="headerlink" title="3.3 年级管理功能实现"></a>3.3 年级管理功能实现</h2><h3 id="3-3-1-查询年级信息【分页带条件】"><a href="#3-3-1-查询年级信息【分页带条件】" class="headerlink" title="3.3.1 查询年级信息【分页带条件】"></a>3.3.1 查询年级信息【分页带条件】</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;年级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/gradeController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> GradeService gradeService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;查询年级信息,分页带条件&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getGrades/&#123;pageNo&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getGradeByOpr</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;分页查询页码数&quot;)</span> <span class="hljs-meta">@PathVariable(value = &quot;pageNo&quot;)</span> Integer pageNo, // 页码数</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;分页查询页大小&quot;)</span> <span class="hljs-meta">@PathVariable(value = &quot;pageSize&quot;)</span>Integer pageSize, // 页大小</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;分页查询模糊匹配班级名&quot;)</span> String gradeName)</span><span class="hljs-comment">// 模糊查询条件</span><br>    &#123;<br>        <span class="hljs-comment">// 设置分页信息</span><br>        Page&lt;Grade&gt; page =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(pageNo,pageSize);<br>        <span class="hljs-comment">// 调用服务层方法,传入分页信息,和查询的条件</span><br>        IPage&lt;Grade&gt; pageRs = gradeService.getGradeByOpr(page, gradeName);<br>        <span class="hljs-keyword">return</span> Result.ok(pageRs);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>Service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;GradeMapper, Grade&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">GradeService</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IPage&lt;Grade&gt; <span class="hljs-title function_">getGradeByOpr</span><span class="hljs-params">(Page&lt;Grade&gt; pageParam, String gradeName)</span> &#123;<br><span class="hljs-comment">// 设置查询条件</span><br>        <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>        <span class="hljs-keyword">if</span>(!StringUtils.isEmpty(gradeName))&#123;<br>            queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>,gradeName);<br>        &#125;<br>        <span class="hljs-comment">// 设置排序规则</span><br>        queryWrapper.orderByDesc(<span class="hljs-string">&quot;id&quot;</span>);<br>        queryWrapper.orderByAsc(<span class="hljs-string">&quot;name&quot;</span>);<br><span class="hljs-comment">// 分页查询数据</span><br>        <span class="hljs-type">Page</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> baseMapper.selectPage(pageParam, queryWrapper);<br><br>        <span class="hljs-keyword">return</span> page;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>持久层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// MyBatisPlus 的BaseMapper已经封装好分页带条件查询方法</span><br><br>&lt;E <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IPage</span>&lt;T&gt;&gt; E <span class="hljs-title function_">selectPage</span><span class="hljs-params">(E page, <span class="hljs-meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口功能</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646360033972.png" alt="1646360033972"></p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646360056936.png" alt="1646360056936"></p><h3 id="3-3-2-添加和修改年级信息"><a href="#3-3-2-添加和修改年级信息" class="headerlink" title="3.3.2 添加和修改年级信息"></a>3.3.2 添加和修改年级信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;年级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/gradeController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> GradeService gradeService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;添加或者修改年级信息&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/saveOrUpdateGrade&quot;)</span><br>    <span class="hljs-keyword">public</span>  Result <span class="hljs-title function_">saveOrUpdateGrade</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;JSON的grade对象转换后台数据模型&quot;)</span><span class="hljs-meta">@RequestBody</span> Grade grade</span><br><span class="hljs-params">    )</span>&#123;<br>        <span class="hljs-comment">// 调用服务层方法,实现添加或者修改年级信息</span><br>        gradeService.saveOrUpdate(grade);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// MyBatisPlus源码可见</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">saveOrUpdate</span><span class="hljs-params">(T entity)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == entity) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            Class&lt;?&gt; cls = entity.getClass();<br>            <span class="hljs-type">TableInfo</span> <span class="hljs-variable">tableInfo</span> <span class="hljs-operator">=</span> TableInfoHelper.getTableInfo(cls);<br>            Assert.notNull(tableInfo, <span class="hljs-string">&quot;error: can not execute. because can not find cache of TableInfo for entity!&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[<span class="hljs-number">0</span>]);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">keyProperty</span> <span class="hljs-operator">=</span> tableInfo.getKeyProperty();<br>            Assert.notEmpty(keyProperty, <span class="hljs-string">&quot;error: can not execute. because can not find column for id from entity!&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[<span class="hljs-number">0</span>]);<br>            <span class="hljs-type">Object</span> <span class="hljs-variable">idVal</span> <span class="hljs-operator">=</span> ReflectionKit.getMethodValue(cls, entity, tableInfo.getKeyProperty());<br>            <span class="hljs-keyword">return</span> !StringUtils.checkValNull(idVal) &amp;&amp; !Objects.isNull(<span class="hljs-built_in">this</span>.getById((Serializable)idVal)) ? <span class="hljs-built_in">this</span>.updateById(entity) : <span class="hljs-built_in">this</span>.save(entity);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><blockquote><p>mapper层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">略<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646360907548.png" alt="1646360907548"></p><h3 id="3-3-3-删除和批量删除年级信息"><a href="#3-3-3-删除和批量删除年级信息" class="headerlink" title="3.3.3 删除和批量删除年级信息"></a>3.3.3 删除和批量删除年级信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;年级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/gradeController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> GradeService gradeService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;删除一个或者多个grade信息&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/deleteGrade&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteGradeById</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;JSON的年级id集合,映射为后台List&lt;Integer&gt;&quot;)</span><span class="hljs-meta">@RequestBody</span> List&lt;Integer&gt; ids</span><br><span class="hljs-params">    )</span><br>    &#123;<br>        gradeService.removeByIds(ids);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646361929527.png" alt="1646361929527"></p><h2 id="3-4-班级管理功能实现"><a href="#3-4-班级管理功能实现" class="headerlink" title="3.4 班级管理功能实现"></a>3.4 班级管理功能实现</h2><h3 id="3-4-1-回显搜索条件中的年级选项"><a href="#3-4-1-回显搜索条件中的年级选项" class="headerlink" title="3.4.1 回显搜索条件中的年级选项"></a>3.4.1 回显搜索条件中的年级选项</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;年级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/gradeController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> GradeService gradeService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;获取所有Grade信息&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getGrades&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getGrades</span><span class="hljs-params">()</span>&#123;<br>        List&lt;Grade&gt; grades = gradeService.getGrades();<br>        <span class="hljs-keyword">return</span> Result.ok(grades);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GradeServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;GradeMapper, Grade&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">GradeService</span> &#123;<br> <span class="hljs-keyword">public</span> List&lt;Grade&gt; <span class="hljs-title function_">getGrades</span><span class="hljs-params">()</span>&#123;<br>        List&lt;Grade&gt; grades = baseMapper.selectList(<span class="hljs-literal">null</span>);<br>        <span class="hljs-keyword">return</span> grades;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>mapper层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BaseMapper</span>&lt;T&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;T&gt;&#123;<br>    List&lt;T&gt; <span class="hljs-title function_">selectList</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><h2 id="swagger测试接口"><a href="#swagger测试接口" class="headerlink" title="swagger测试接口"></a>swagger测试接口</h2></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646362968669.png" alt="1646362968669"></p><h3 id="3-4-2-查询班级信息【分页带条件】"><a href="#3-4-2-查询班级信息【分页带条件】" class="headerlink" title="3.4.2 查询班级信息【分页带条件】"></a>3.4.2 查询班级信息【分页带条件】</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;班级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/clazzController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClazzController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ClazzService clazzService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;查询班级信息,分页带条件&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getClazzsByOpr/&#123;pageNo&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getClazzsByOpr</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;页码数&quot;)</span>  <span class="hljs-meta">@PathVariable(&quot;pageNo&quot;)</span> Integer pageNo,</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;页大小&quot;)</span>  <span class="hljs-meta">@PathVariable(&quot;pageSize&quot;)</span> Integer pageSize,</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;查询条件&quot;)</span> Clazz clazz</span><br><span class="hljs-params">    )</span>&#123;<br>        <span class="hljs-comment">//设置分页信息</span><br>        Page&lt;Clazz&gt; page =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(pageNo,pageSize);<br>        IPage&lt;Clazz&gt; iPage = clazzService.getClazzsByOpr(page, clazz);<br>        <span class="hljs-keyword">return</span> Result.ok(iPage);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClazzServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ClazzMapper, Clazz&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ClazzService</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分页查询所有班级信息【带条件】</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clazz</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IPage&lt;Clazz&gt; <span class="hljs-title function_">getClazzsByOpr</span><span class="hljs-params">(Page&lt;Clazz&gt; pageParam,Clazz clazz)</span> &#123;<br>        <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>        <span class="hljs-keyword">if</span>(clazz != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-comment">//年级名称条件</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">gradeName</span> <span class="hljs-operator">=</span> clazz.getGradeName();<br>            <span class="hljs-keyword">if</span>(!StringUtils.isEmpty(gradeName))&#123;<br>                queryWrapper.eq(<span class="hljs-string">&quot;grade_name&quot;</span>,gradeName);<br>            &#125;<br>            <span class="hljs-comment">//班级名称条件</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">clazzName</span> <span class="hljs-operator">=</span> clazz.getName();<br>            <span class="hljs-keyword">if</span>(!StringUtils.isEmpty(clazzName))&#123;<br>                queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>,clazzName);<br>            &#125;<br>            queryWrapper.orderByDesc(<span class="hljs-string">&quot;id&quot;</span>);<br>            queryWrapper.orderByAsc(<span class="hljs-string">&quot;name&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">Page</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> baseMapper.selectPage(pageParam, queryWrapper);<br>        <span class="hljs-keyword">return</span> page;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646364014796.png" alt="1646364014796"></p><h3 id="3-4-3-添加和修改学生信息"><a href="#3-4-3-添加和修改学生信息" class="headerlink" title="3.4.3 添加和修改学生信息"></a>3.4.3 添加和修改学生信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;班级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/clazzController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClazzController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ClazzService clazzService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;保存或者修改班级信息&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/saveOrUpdateClazz&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">saveOrUpdateClazz</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;JSON转换后端Clazz数据模型&quot;)</span> <span class="hljs-meta">@RequestBody</span> Clazz clazz</span><br><span class="hljs-params">    )</span>&#123;<br>        clazzService.saveOrUpdate(clazz);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">见IService<br></code></pre></td></tr></table></figure><blockquote><p>mapper层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">略<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646374860928.png" alt="1646374860928"></p><h3 id="3-4-4-删除和批量删除班级信息"><a href="#3-4-4-删除和批量删除班级信息" class="headerlink" title="3.4.4 删除和批量删除班级信息"></a>3.4.4 删除和批量删除班级信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;班级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/clazzController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClazzController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ClazzService clazzService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;删除一个或者多个班级信息&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/deleteClazz&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteClazzByIds</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;多个班级id的JSON&quot;)</span> <span class="hljs-meta">@RequestBody</span> List&lt;Integer&gt; ids</span><br><span class="hljs-params">    )</span>&#123;<br>        clazzService.removeByIds(ids);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646375480754.png" alt="1646375480754"></p><h2 id="3-5-学生管理功能实现"><a href="#3-5-学生管理功能实现" class="headerlink" title="3.5 学生管理功能实现"></a>3.5 学生管理功能实现</h2><h3 id="3-5-1-回显搜索条件中的班级选项"><a href="#3-5-1-回显搜索条件中的班级选项" class="headerlink" title="3.5.1 回显搜索条件中的班级选项"></a>3.5.1 回显搜索条件中的班级选项</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;班级控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/clazzController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClazzController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> ClazzService clazzService;<br><br>    <br>    <span class="hljs-meta">@ApiOperation(&quot;获取所有班级的JSON&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getClazzs&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getClazzs</span><span class="hljs-params">()</span>&#123;<br>        List&lt;Clazz&gt; clazzList = clazzService.getClazzs();<br>        <span class="hljs-keyword">return</span> Result.ok(clazzList);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646375859725.png" alt="1646375859725"></p><h3 id="3-5-2-查询学生信息【分页带条件】"><a href="#3-5-2-查询学生信息【分页带条件】" class="headerlink" title="3.5.2 查询学生信息【分页带条件】"></a>3.5.2 查询学生信息【分页带条件】</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;学生控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/studentController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;查询学生信息,分页带条件&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getStudentByOpr/&#123;pageNo&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getStudentsByOpr</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;页码数&quot;)</span> <span class="hljs-meta">@PathVariable(&quot;pageNo&quot;)</span>Integer pageNo,</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;页大小&quot;)</span> <span class="hljs-meta">@PathVariable(&quot;pageSize&quot;)</span>Integer pageSize,</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;查询条件转换后端数据模型&quot;)</span> Student student</span><br><span class="hljs-params">            )</span>&#123;<br>        <span class="hljs-comment">// 准备分页信息封装的page对象</span><br>        Page&lt;Student&gt; page =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(pageNo,pageSize);<br>        <span class="hljs-comment">// 获取分页的学生信息</span><br>        IPage&lt;Student&gt; iPage = studentService.getStudentByOpr(page, student);<br>        <span class="hljs-comment">// 返回学生信息</span><br>        <span class="hljs-keyword">return</span> Result.ok(iPage);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;stuService&quot;)</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;StudentMapper, Student&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StudentService</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 按条件查询学生信息【带分页】</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> IPage&lt;Student&gt; <span class="hljs-title function_">getStudentByOpr</span><span class="hljs-params">(Page&lt;Student&gt; pageParam,Student student)</span>&#123;<br>        QueryWrapper&lt;Student&gt; queryWrapper = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span>(student != <span class="hljs-literal">null</span>) &#123;<br>            queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>            <span class="hljs-keyword">if</span> (student.getClazzName() != <span class="hljs-literal">null</span>) &#123;<br>                queryWrapper.eq(<span class="hljs-string">&quot;clazz_name&quot;</span>, student.getClazzName());<br>            &#125;<br>            <span class="hljs-keyword">if</span> (student.getName() != <span class="hljs-literal">null</span>) &#123;<br>                queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>, student.getName());<br>            &#125;<br>            queryWrapper.orderByDesc(<span class="hljs-string">&quot;id&quot;</span>);<br>            queryWrapper.orderByAsc(<span class="hljs-string">&quot;name&quot;</span>);<br>        &#125;        <br>        <span class="hljs-comment">//创建分页对象</span><br>        IPage&lt;Student&gt; pages = baseMapper.selectPage(pageParam, queryWrapper);<br><br>        <span class="hljs-keyword">return</span> pages;<br>    &#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646376892756.png" alt="1646376892756"></p><h3 id="3-5-3-异步图片上传处理头像"><a href="#3-5-3-异步图片上传处理头像" class="headerlink" title="3.5.3 异步图片上传处理头像"></a>3.5.3 异步图片上传处理头像</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;系统控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/system&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemController</span> &#123;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;头像上传统一入口&quot;)</span><br>    <span class="hljs-meta">@P(&quot;/headerImgUpload&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">headerImgUpload</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;文件二进制数据&quot;)</span> <span class="hljs-meta">@RequestPart(&quot;multipartFile&quot;)</span> MultipartFile multipartFile</span><br><span class="hljs-params">    )</span>&#123;<br><br>        <span class="hljs-comment">//使用UUID随机生成文件名</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).toLowerCase();<br>        <span class="hljs-comment">//生成新的文件名字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> uuid.concat(multipartFile.getOriginalFilename());<br>        <span class="hljs-comment">//生成文件的保存路径(实际生产环境这里会使用真正的文件存储服务器)</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">portraitPath</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;c:/code/zhxy/target/classes/public/upload/&quot;</span>.concat(filename);<br>        <span class="hljs-comment">//保存文件</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            multipartFile.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(portraitPath));<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">headerImg</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;upload/&quot;</span>+filename;<br>        <span class="hljs-keyword">return</span> Result.ok(headerImg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646378135656.png" alt="1646378135656"></p><h3 id="3-5-4-添加和修改学生信息"><a href="#3-5-4-添加和修改学生信息" class="headerlink" title="3.5.4 添加和修改学生信息"></a>3.5.4 添加和修改学生信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;学生控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/studentController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;增加学生信息&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/addOrUpdateStudent&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">addOrUpdateStudent</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Student student)</span>&#123;<br>        <span class="hljs-comment">//对学生的密码进行加密</span><br>        <span class="hljs-keyword">if</span> (!Strings.isEmpty(student.getPassword())) &#123;<br>            student.setPassword(MD5.encrypt(student.getPassword()));<br>        &#125;<br>        <span class="hljs-comment">//保存学生信息进入数据库</span><br>        studentService.saveOrUpdate(student);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646379051848.png" alt="1646379051848"></p><h3 id="3-5-6-删除和批量删除学生信息"><a href="#3-5-6-删除和批量删除学生信息" class="headerlink" title="3.5.6 删除和批量删除学生信息"></a>3.5.6 删除和批量删除学生信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;学生控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/studentController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;删除一个或者多个学生信息&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/delStudentById&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">delStudentById</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@ApiParam(&quot;多个学生id的JSON&quot;)</span> <span class="hljs-meta">@RequestBody</span> List&lt;Integer&gt; ids</span><br><span class="hljs-params">    )</span>&#123;<br>        studentService.removeByIds(ids);<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646379347788.png" alt="1646379347788"></p><h2 id="3-6-教师管理功能实现"><a href="#3-6-教师管理功能实现" class="headerlink" title="3.6 教师管理功能实现"></a>3.6 教师管理功能实现</h2><h3 id="3-6-1-查询教师信息【分页带条件】"><a href="#3-6-1-查询教师信息【分页带条件】" class="headerlink" title="3.6.1 查询教师信息【分页带条件】"></a>3.6.1 查询教师信息【分页带条件】</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;教师信息管理控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/teacherController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TeacherController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TeacherService teacherService;<br>    <br>    <span class="hljs-meta">@ApiOperation(&quot;获取教师信息,分页带条件&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getTeachers/&#123;pageNo&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getTeachers</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;pageNo&quot;)</span> Integer pageNo,</span><br><span class="hljs-params">            <span class="hljs-meta">@PathVariable(&quot;pageSize&quot;)</span> Integer pageSize,</span><br><span class="hljs-params">            Teacher teacher</span><br><span class="hljs-params">    )</span>&#123;<br>        Page&lt;Teacher&gt; pageParam = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(pageNo,pageSize);<br>        IPage&lt;Teacher&gt; page = teacherService.getTeachersByOpr(pageParam, teacher);<br>        <span class="hljs-keyword">return</span> Result.ok(page);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> IPage&lt;Teacher&gt; <span class="hljs-title function_">getTeachersByOpr</span><span class="hljs-params">(Page&lt;Teacher&gt; pageParam, Teacher teacher)</span> &#123;<br><br>    <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>    <span class="hljs-keyword">if</span>(teacher != <span class="hljs-literal">null</span>)&#123;<br>        <span class="hljs-comment">//班级名称条件</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">clazzName</span> <span class="hljs-operator">=</span> teacher.getClazzName();<br>        <span class="hljs-keyword">if</span> (!StringUtils.isEmpty(clazzName)) &#123;<br>            queryWrapper.eq(<span class="hljs-string">&quot;clazz_name&quot;</span>,clazzName);<br>        &#125;<br>        <span class="hljs-comment">//教师名称条件</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">teacherName</span> <span class="hljs-operator">=</span> teacher.getName();<br>        <span class="hljs-keyword">if</span>(!StringUtils.isEmpty(teacherName))&#123;<br>            queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>,teacherName);<br>        &#125;<br>        queryWrapper.orderByDesc(<span class="hljs-string">&quot;id&quot;</span>);<br>        queryWrapper.orderByAsc(<span class="hljs-string">&quot;name&quot;</span>);<br>    &#125;<br><br>    IPage&lt;Teacher&gt; page = baseMapper.selectPage(pageParam, queryWrapper);<br><br>    <span class="hljs-keyword">return</span> page;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382470944.png" alt="1646382470944"></p><h3 id="3-6-2-添加和修改教师信息"><a href="#3-6-2-添加和修改教师信息" class="headerlink" title="3.6.2 添加和修改教师信息"></a>3.6.2 添加和修改教师信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ApiOperation(&quot;添加和修改教师信息&quot;)</span><br><span class="hljs-meta">@PostMapping(&quot;/saveOrUpdateTeacher&quot;)</span><br><span class="hljs-keyword">public</span> Result <span class="hljs-title function_">saveOrUpdateTeacher</span><span class="hljs-params">(</span><br><span class="hljs-params">    <span class="hljs-meta">@RequestBody</span> Teacher teacher</span><br><span class="hljs-params">)</span>&#123;<br>    teacherService.saveOrUpdate(teacher);<br>    <span class="hljs-keyword">return</span> Result.ok();<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382493973.png" alt="1646382493973"></p><h3 id="3-6-3-删除和批量删除教师信息"><a href="#3-6-3-删除和批量删除教师信息" class="headerlink" title="3.6.3  删除和批量删除教师信息"></a>3.6.3  删除和批量删除教师信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ApiOperation(&quot;删除一个或者多个教师信息&quot;)</span><br><span class="hljs-meta">@DeleteMapping(&quot;/deleteTeacher&quot;)</span><br><span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteTeacher</span><span class="hljs-params">(</span><br><span class="hljs-params">    <span class="hljs-meta">@RequestBody</span> List&lt;Integer&gt; ids</span><br><span class="hljs-params">)</span>&#123;<br>    teacherService.removeByIds(ids);<br>    <span class="hljs-keyword">return</span> Result.ok();<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382509976.png" alt="1646382509976"></p><h2 id="3-7管理员管理功能实现"><a href="#3-7管理员管理功能实现" class="headerlink" title="3.7管理员管理功能实现"></a>3.7管理员管理功能实现</h2><h3 id="3-7-1-查询管理员信息【分页带条件】"><a href="#3-7-1-查询管理员信息【分页带条件】" class="headerlink" title="3.7.1 查询管理员信息【分页带条件】"></a>3.7.1 查询管理员信息【分页带条件】</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;系统管理员控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/adminController&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdminController</span> &#123;<br><br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AdminService adService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;分页获取所有Admin信息【带条件】&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/getAllAdmin/&#123;pageNo&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getAllAdmin</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer pageNo,</span><br><span class="hljs-params">                              <span class="hljs-meta">@PathVariable</span> Integer pageSize,</span><br><span class="hljs-params">                              String adminName)</span>&#123;<br>        Page&lt;Admin&gt; pageParam = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(pageNo,pageSize);<br>        IPage&lt;Admin&gt; page = adService.getAdmins(pageParam, adminName);<br>        <span class="hljs-keyword">return</span> Result.ok(page);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>service层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> IPage&lt;Admin&gt; <span class="hljs-title function_">getAdmins</span><span class="hljs-params">(Page&lt;Admin&gt; pageParam,String adminName)</span> &#123;<br>    <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>    <span class="hljs-keyword">if</span>(!StringUtils.isEmpty(adminName))&#123;<br>        queryWrapper.like(<span class="hljs-string">&quot;name&quot;</span>,adminName);<br>    &#125;<br>    queryWrapper.orderByDesc(<span class="hljs-string">&quot;id&quot;</span>);<br>    queryWrapper.orderByAsc(<span class="hljs-string">&quot;name&quot;</span>);<br>    <span class="hljs-type">Page</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> baseMapper.selectPage(pageParam, queryWrapper);<br>    <span class="hljs-keyword">return</span> page;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382546842.png" alt="1646382546842"></p><h3 id="3-7-2-添加和修改管理员信息"><a href="#3-7-2-添加和修改管理员信息" class="headerlink" title="3.7.2 添加和修改管理员信息"></a>3.7.2 添加和修改管理员信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ApiOperation(&quot;添加或修改Admin信息&quot;)</span><br><span class="hljs-meta">@PostMapping(&quot;/saveOrUpdateAdmin&quot;)</span><br><span class="hljs-keyword">public</span> Result <span class="hljs-title function_">saveOrUpdateAdmin</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Admin admin)</span>&#123;<br>    <span class="hljs-keyword">if</span> (!Strings.isEmpty(admin.getPassword())) &#123;<br>        admin.setPassword(MD5.encrypt(admin.getPassword()));<br>    &#125;<br>    adService.saveOrUpdate(admin);<br>    <span class="hljs-keyword">return</span> Result.ok();<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382567615.png" alt="1646382567615"></p><h3 id="3-7-3-删除和批量删除管理员信息"><a href="#3-7-3-删除和批量删除管理员信息" class="headerlink" title="3.7.3 删除和批量删除管理员信息"></a>3.7.3 删除和批量删除管理员信息</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ApiOperation(&quot;删除Admin信息&quot;)</span><br><span class="hljs-meta">@DeleteMapping(&quot;/deleteAdmin&quot;)</span><br><span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteAdmin</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> List&lt;Integer&gt; ids)</span>&#123;<br>    adService.removeByIds(ids);<br>    <span class="hljs-keyword">return</span> Result.ok();<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382590945.png" alt="1646382590945"></p><h3 id="3-7-4-管理员修改自己的密码"><a href="#3-7-4-管理员修改自己的密码" class="headerlink" title="3.7.4 管理员修改自己的密码"></a>3.7.4 管理员修改自己的密码</h3><blockquote><p>Controller层代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Api(tags = &quot;系统控制器&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/sms/system&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemController</span> &#123;<br><br><br>    <span class="hljs-meta">@ApiOperation(&quot;修改密码&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/updatePwd/&#123;oldPwd&#125;/&#123;newPwd&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">updatePwd</span><span class="hljs-params">(<span class="hljs-meta">@RequestHeader(&quot;token&quot;)</span> String token,</span><br><span class="hljs-params">                            <span class="hljs-meta">@PathVariable(&quot;oldPwd&quot;)</span> String oldPwd,</span><br><span class="hljs-params">                            <span class="hljs-meta">@PathVariable(&quot;newPwd&quot;)</span> String newPwd)</span>&#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">yOn</span> <span class="hljs-operator">=</span> JwtHelper.isExpiration(token);<br>        <span class="hljs-keyword">if</span>(yOn)&#123;<br>            <span class="hljs-comment">//token过期</span><br>            <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;token失效!&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">//通过token获取当前登录的用户id</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> JwtHelper.getUserId(token);<br>        <span class="hljs-comment">//通过token获取当前登录的用户类型</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">userType</span> <span class="hljs-operator">=</span> JwtHelper.getUserType(token);<br>        <span class="hljs-comment">// 将明文密码转换为暗文</span><br>        oldPwd=MD5.encrypt(oldPwd);<br>        newPwd= MD5.encrypt(newPwd);<br>        <span class="hljs-keyword">if</span>(userType == <span class="hljs-number">1</span>)&#123;<br>            QueryWrapper&lt;Admin&gt; queryWrapper=<span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>            queryWrapper.eq(<span class="hljs-string">&quot;id&quot;</span>,userId.intValue()).eq(<span class="hljs-string">&quot;password&quot;</span>,oldPwd);<br>            <span class="hljs-type">Admin</span> <span class="hljs-variable">admin</span> <span class="hljs-operator">=</span> adService.getOne(queryWrapper);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span>!=admin) &#123;<br>                admin.setPassword(newPwd);<br>                adService.saveOrUpdate(admin);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;原密码输入有误！&quot;</span>);<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(userType == <span class="hljs-number">2</span>)&#123;<br>            QueryWrapper&lt;Student&gt; queryWrapper=<span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>            queryWrapper.eq(<span class="hljs-string">&quot;id&quot;</span>,userId.intValue()).eq(<span class="hljs-string">&quot;password&quot;</span>,oldPwd);<br>            <span class="hljs-type">Student</span> <span class="hljs-variable">student</span> <span class="hljs-operator">=</span> studentService.getOne(queryWrapper);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span>!=student) &#123;<br>                student.setPassword(newPwd);<br>                studentService.saveOrUpdate(student);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;原密码输入有误！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(userType == <span class="hljs-number">3</span>)&#123;<br>            QueryWrapper&lt;Teacher&gt; queryWrapper=<span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>            queryWrapper.eq(<span class="hljs-string">&quot;id&quot;</span>,userId.intValue()).eq(<span class="hljs-string">&quot;password&quot;</span>,oldPwd);<br>            <span class="hljs-type">Teacher</span> <span class="hljs-variable">teacher</span> <span class="hljs-operator">=</span> teacherService.getOne(queryWrapper);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span>!=teacher) &#123;<br>                teacher.setPassword(newPwd);<br>                teacherService.saveOrUpdate(teacher);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;原密码输入有误！&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>swagger测试接口</p></blockquote><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/1646382622040.png" alt="1646382622040"></p><h1 id="四-毕业设计相关指导"><a href="#四-毕业设计相关指导" class="headerlink" title="四 毕业设计相关指导"></a>四 毕业设计相关指导</h1><h2 id="一-开题报告"><a href="#一-开题报告" class="headerlink" title="一 开题报告"></a>一 开题报告</h2><blockquote><p>课题的名称</p></blockquote><p>智慧校园管理系统</p><p>智能校园管理系统</p><p>智慧校园云台系统</p><blockquote><p> 设计课题的目标和意义</p></blockquote><p>1 对使用者的意义                    提高使用者工作效率,远程办公</p><p>2 对企业或者学校的意义        精简学校的管理人员,节约成本,提高效率</p><p>3 对社会的意义                        为教育行业提供一个优秀的管理解决方案</p><p>4 技术层次的意义                    更新项目的使用技术,功能拓展和性能提升更加方便容易</p><blockquote><p> 预期目标及成果形式</p></blockquote><p>1 具体的业务功能</p><p><img src="https://tingfeng-1320726713.cos.ap-beijing.myqcloud.com/javaweb/images/%E9%A1%B9%E7%9B%AE%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D.png" alt="项目功能介绍"></p><p>2 成果的展现形式</p><p>​项目成果展示+毕业论文</p><blockquote><p> 开发工具和技术栈</p></blockquote><p>1 操作系统的选择</p><p>​开发者使用Windows10 &#x2F;11 ,项目运行环境为Linux.服务容器使用Tomcat</p><p>2 开发使用的工具</p><p>​前端开发工具为HbuilderX,配合NodeJS运行时</p><p>​          后端开发工具为Idea,使用maven作为项目构建工具</p><p>3 数据库管理系统</p><p>​mysql8作为数据库服务,同时配合Navicat&#x2F;Sqlyog可视化数据库前端工具</p><p>4 相关框架  </p><p>​VUE 独立开发前端代码</p><p>​   SpringBoot快速搭建后端服务</p><p>​          MyBatisPlus快速实现数据操作,同时优化业务层代码</p><p>​          swagger2快速生成接口文档,同时可以帮助接口测试</p><p>​          fastjson快速实现前后端数据转换</p><p>​commons-fileupload快速实现文件上传</p><blockquote><p> 项目的架构模式和开发模式</p></blockquote><p>架构模式: MVC三层技术模型</p><p>开发模式:前后端分离的开发模式</p><blockquote><p> 进度和计划</p></blockquote><p>1 需求分析      在导师的指导下,同时阅读相关文献,了解学校的实际的管理工作内容,同时接受一些新的管理理念,完成需求调研</p><p>2 数据库设计  在明确需求的情况下,对数据库进行设计</p><p>3 资料收集      根据要应用的技术,大量阅读资料,收集相关文献,问后续的编码做准备</p><p>4 接口设计      根据具体的业务项,开始逐一设计接口</p><p>5 模块实现       具体功能的实现</p><p>6 测试程序,整理资料,撰写文档</p><blockquote><p> 参考的相关资料</p></blockquote><p>中国知网: 搜索关键字         校园管理      VUE       SpringBoot     MyBatisPlus  swagger2  </p><blockquote><p> 相关图例</p></blockquote><h2 id="二-毕设编写"><a href="#二-毕设编写" class="headerlink" title="二 毕设编写"></a>二 毕设编写</h2><blockquote><p>毕业设计包含的相关内容</p></blockquote><p>1 论文名称</p><p>2 摘要</p><p>3 绪论</p><p>4 相关技术介绍</p><p>5 系统需求分析</p><p>6 系统概要设计</p><p>7 系统各功能模块的详细设计</p><p>8 系统实现中关键的问题和解决方案</p><p>9 系统测试及实现效果</p><p>10 总结与展望</p><p>11 参考文献</p><p>12 致谢</p><blockquote><p>1 论文名称</p></blockquote><p>1 名称不要太短</p><p>2 工程类项目且有成果展示可以叫 ***设计与实现</p><p>3 如果在理论上有一些建树,可以叫***理论研究</p><p>如:  智慧校园云端管理系统的设计和实现</p><blockquote><p>2 摘要</p></blockquote><p>1 项目的背景介绍,可以参考开题报告中,课题的目标和意义</p><p>2 毕业设计都做了那些工作</p><p>​1 管理类知识和理论的学习,引入了互联网的管理思维</p><p>​2 结合实际校园工作内容,设计了那些业务</p><p>​3 具体功能模块有那些,实现了那些业务</p><p>3 本项目的开发和测试中遇见的难点,遇见的问题,以及解决方案</p><p>​       cookie session问题,登录的失效问题,用户权限问题,数据安全问题… …</p><p>4 成果说明    目前项目取得那些成果,完成了那些功能的开发,实际使用的体验感等</p><p>5 关键词   校园管理  SpringBoot+VUE SpringBoot+MyBatisPlus  Swagger2 前后端分离</p><blockquote><p>3 绪论(第一章)</p></blockquote><p>1 论文设计的背景和意义   (管理相关的,互联网技术对于管理方式的革命性影响)</p><p>2 国内外现状和社会现状   (互联网技术在管理方面的应用已经渗入到各行各业,带来了效率的提高,教育行业也应该使用)</p><p>3 论文的主要内容介绍        本文主要进行了互联网时代校园管理的设计和实现. 由于………. 因此……….  本文在深入分析Vue+SpringBoot+MyBatisPlus的技术前提下,提出了一套校园管理的软件系统并详细阐述了技术选型和实现过程. 需求如何分析的,数据库如何设计的,技术如何选型的,项目如何搭建的. 过程是如何开发的</p><p>4 论文的组织结构    </p><p>​      第一章    绪论      </p><p>​      第二章    技术选型   +配合内容介绍</p><p>​      第三章    系统需求分析</p><p>​      第四章   … …</p><blockquote><p>4 核心组件技术介绍(第二章)</p></blockquote><p>VUE技术介绍                   历史  背景  特点  优点  原理   </p><p>SSM技术介绍与分析</p><p>SpringBoot技术介绍</p><p>MyBatisPlus技术介绍</p><p>Swagger2技术介绍</p><p>MVC架构</p><p>前后端分离开发和部署模式</p><blockquote><p>5 系统需求分析(第三章)</p></blockquote><p>1 功能需求分析</p><p>​2 数据库的设计</p><p>​3 登录的控制</p><p>​4 年级模块</p><p>​5 班级模块</p><p>​6 教师模块</p><p>​7 学生模块</p><p>​8 管理员模块</p><p>​9 个人信息管理模块</p><p>​10 权限的控制</p><p>2 非功能需求</p><p>   1 可靠性</p><p>   2 可扩展性</p><p>   3 易用性</p><p>   4 其他约束</p><blockquote><p>6 软件安装和项目环境搭建(第四章)</p></blockquote><p>1 系统环境的准备</p><p>2 软件的安装</p><p>3 项目的搭建</p><p>4 运行检测</p><blockquote><p>7 系统各功能模块的实现(第五章)</p></blockquote><p>验证码功能的实现</p><p>​       1  效果截图</p><p>​2  业务分析   当加载登录页时,前端项目自动向后端请求一个验证码图片并展示在页面上,后端生成验证码后响应给前端,并将 验证码图片上的文本存储在session中,可以采用时序图,流程图等</p><p>​       3  接口介绍    </p><p>​请求方式    GET</p><p>​请求的URI  &#x2F;sms&#x2F;system&#x2F;getVerifiCodeImage</p><p>​请求的数据:  none</p><p>​响应的数据: image&#x2F;jpeg</p><p>​       4  核心代码实现</p><blockquote><p>8 系统实现中关键的问题和解决方案(第六章)</p></blockquote><p>问题1 前后端分离开发,接口文档和接口测试问题      解决方案是: swagger2</p><p>问题2 cookie和Session控制登录校验的有效期问题   解决方案是:token</p><p>问题3 管理员,教师,学生三个身份登录后权限不同     解决方案是:根据用户类型查询不同的表格,根据不同的类型展示不同的页面</p><p>问题4 数据安全问题解决方案是:MD5加密,密码的校验在密文状态下</p><p>… …</p><blockquote><p>9 系统测试及实现效果(第七章)</p></blockquote><p>每个业务如何使用swagger2测试,在这里进行介绍</p><p>删除学生信息测试</p><p>​请求的URI</p><p>​请求的方式</p><p>​请求要提交的数据</p><p>​          响应的数据</p><p>​           swagger2测试的结果效果截图</p><blockquote><p>10 总结与展望(第八章)</p></blockquote><p>1 夸夸自己和导师   业务完整实现,技术选型新,开发过程流畅. 系统的可靠性,扩展性,易用性</p><p>2 展望未来   目前项目的设计还缺少具体的针对性,针对某个学校的业务工作流程继续细化,继续添加功能   打卡,考勤统计,成绩统计分析… … </p><blockquote><p>11 参考文献</p></blockquote><p>略</p><blockquote><p>12 致谢</p></blockquote><h2 id="三-答辩PPT编写"><a href="#三-答辩PPT编写" class="headerlink" title="三 答辩PPT编写"></a>三 答辩PPT编写</h2><p>主要包含的内容</p><p>首页  课题+答辩人+指导教师</p><p>第二页  后面的内容</p><p>第三页  目的和意义  </p><p>第四页  系统的需求</p><p>第五页 项目的架构和技术栈</p><p>第六页 系统测试及实现效果</p><p>第七页 总结和展望</p><p>第八页 致谢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;尚硅谷-毕设项目系列教程-智慧校园管理系统&quot;&gt;&lt;a href=&quot;#尚硅谷-毕设项目系列教程-智慧校园管理系统&quot; class=&quot;headerlink&quot; title=&quot;尚硅谷_毕设项目系列教程_智慧校园管理系统&quot;&gt;&lt;/a&gt;尚硅谷_毕设项目系列教程_智慧校园管理系统&lt;/</summary>
      
    
    
    
    <category term="编程语言" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="java" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/"/>
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="java web" scheme="http://example.com/categories/java-web/"/>
    
    <category term="java基础" scheme="http://example.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="数据挖掘" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
</feed>
